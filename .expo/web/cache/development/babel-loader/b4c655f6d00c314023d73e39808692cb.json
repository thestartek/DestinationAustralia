{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"theme\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport { useInternalTheme } from \"../../../core/theming\";\nvar Text = function Text(_ref, ref) {\n  var _theme$fonts, _theme$colors;\n  var style = _ref.style,\n    overrideTheme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var root = React.useRef(null);\n  var theme = useInternalTheme(overrideTheme);\n  React.useImperativeHandle(ref, function () {\n    return {\n      setNativeProps: function setNativeProps(args) {\n        var _root$current;\n        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);\n      }\n    };\n  });\n  return React.createElement(NativeText, _extends({}, rest, {\n    ref: root,\n    style: [_objectSpread(_objectSpread({}, !theme.isV3 && ((_theme$fonts = theme.fonts) === null || _theme$fonts === void 0 ? void 0 : _theme$fonts.regular)), {}, {\n      color: theme.isV3 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.onSurface : theme.colors.text\n    }), styles.text, style]\n  }));\n};\nvar styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default React.forwardRef(Text);","map":{"version":3,"sources":["Text.tsx"],"names":["React","useInternalTheme","Text","style","theme","overrideTheme","rest","ref","root","useRef","useImperativeHandle","setNativeProps","args","current","isV3","fonts","regular","color","colors","onSurface","text","styles","StyleSheet","create","textAlign","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAU9B,SAASC,gBAAgB;AAiBzB,IAAMC,IAA+C,GAAG,SAAlDA,IAA+C,CAAG,IAAA,EAEtDK,GAAG,EACA;EAAA,IAAA,YAAA,EAAA,aAAA;EAFH,IAAEJ,KAAK,GAAwC,IAAA,CAA7CA,KAAK;IAASE,aAAa,GAAkB,IAAA,CAAtCD,KAAK;IAAoBE,IAAAA,4BAAa,IAAA;EAG/C,IAAME,IAAI,GAAGR,KAAK,CAACS,MAAM,CAAoB,IAAI,CAAC;EAClD,IAAML,KAAK,GAAGH,gBAAgB,CAACI,aAAa,CAAC;EAE7CL,KAAK,CAACU,mBAAmB,CAACH,GAAG,EAAE;IAAA,OAAO;MACpCI,cAAc,EAAGC,wBAAAA,IAAY,EAAA;QAAA,IAAA,aAAA;QAAA,OAAA,CAAA,aAAA,GAAKJ,IAAI,CAACK,OAAO,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZL,aAAAA,CAAcG,cAAc,CAACC,IAAI,CAAC;MAAA;IACtE,CAAC;EAAA,CAAC,CAAC;EAEH,OACE,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA,QAAA,CAAA,CAAA,CAAA,EACLN,IAAI,EAAA;IACR,GAAG,EAAEE,IAAK;IACV,KAAK,EAAE,iCAEC,CAACJ,KAAK,CAACU,IAAI,KAAA,CAAA,YAAA,GAAIV,KAAK,CAACW,KAAK,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAXX,YAAAA,CAAaY,OAAO,CAAA;MACvCC,KAAK,EAAEb,KAAK,CAACU,IAAI,GAAA,CAAA,aAAA,GAAGV,KAAK,CAACc,MAAM,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZd,aAAAA,CAAce,SAAS,GAAGf,KAAK,CAACc,MAAM,CAACE;IAAAA,IAE7DC,MAAM,CAACD,IAAI,EACXjB,KAAK;EACL,CAAA,CAAA,CACF;AAEN,CAAC;AAED,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BH,IAAI,EAAE;IACJI,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAexB,KAAK,CAACyB,UAAU,CAACvB,IAAI,CAAC","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Text as NativeText,\n  TextStyle,\n} from 'react-native';\n\nimport type { MD2Theme } from 'src/types';\n\nimport { useInternalTheme } from '../../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: MD2Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.ForwardRefRenderFunction<{}, Props> = (\n  { style, theme: overrideTheme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n  const theme = useInternalTheme(overrideTheme);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...(!theme.isV3 && theme.fonts?.regular),\n          color: theme.isV3 ? theme.colors?.onSurface : theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default React.forwardRef(Text);\n"]},"metadata":{},"sourceType":"module"}
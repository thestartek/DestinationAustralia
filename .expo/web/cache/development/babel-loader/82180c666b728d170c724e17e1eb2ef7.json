{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { AdEventType } from \"../AdEventType\";\nimport { RewardedAdEventType } from \"../RewardedAdEventType\";\nvar initialState = {\n  isLoaded: false,\n  isOpened: false,\n  isClicked: false,\n  isClosed: false,\n  error: undefined,\n  reward: undefined,\n  isEarnedReward: false\n};\nexport function useFullScreenAd(ad) {\n  var _useReducer = useReducer(function (prevState, newState) {\n      return _objectSpread(_objectSpread({}, prevState), newState);\n    }, initialState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    state = _useReducer2[0],\n    setState = _useReducer2[1];\n  var isShowing = state.isOpened && !state.isClosed;\n  var load = useCallback(function () {\n    if (ad) {\n      setState(initialState);\n      ad.load();\n    }\n  }, [ad]);\n  var show = useCallback(function (showOptions) {\n    if (ad) {\n      ad.show(showOptions);\n    }\n  }, [ad]);\n  useEffect(function () {\n    setState(initialState);\n    if (!ad) {\n      return;\n    }\n    var unsubscribe = ad.addAdEventsListener(function (_ref) {\n      var type = _ref.type,\n        payload = _ref.payload;\n      switch (type) {\n        case AdEventType.LOADED:\n          setState({\n            isLoaded: true\n          });\n          break;\n        case AdEventType.OPENED:\n          setState({\n            isOpened: true\n          });\n          break;\n        case AdEventType.CLOSED:\n          setState({\n            isClosed: true,\n            isLoaded: false\n          });\n          break;\n        case AdEventType.CLICKED:\n          setState({\n            isClicked: true\n          });\n          break;\n        case AdEventType.ERROR:\n          setState({\n            error: payload\n          });\n          break;\n        case RewardedAdEventType.LOADED:\n          setState({\n            isLoaded: true,\n            reward: payload\n          });\n          break;\n        case RewardedAdEventType.EARNED_REWARD:\n          setState({\n            isEarnedReward: true,\n            reward: payload\n          });\n          break;\n      }\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, [ad]);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    isShowing: isShowing,\n    load: load,\n    show: show\n  });\n}","map":{"version":3,"sources":["useFullScreenAd.ts"],"names":["useCallback","useEffect","useReducer","AdEventType","RewardedAdEventType","initialState","isLoaded","isOpened","isClicked","isClosed","error","undefined","reward","isEarnedReward","useFullScreenAd","ad","state","setState","prevState","newState","isShowing","load","show","showOptions","unsubscribe","addAdEventsListener","type","payload","LOADED","OPENED","CLOSED","CLICKED","ERROR","EARNED_REWARD"],"mappings":";;;;AAiBA,SAAkBA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAEnE,SAASC,WAAW;AAKpB,SAASC,mBAAmB;AAK5B,IAAMC,YAAsB,GAAG;EAC7BC,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,KAAK;EACfC,KAAK,EAAEC,SAAS;EAChBC,MAAM,EAAED,SAAS;EACjBE,cAAc,EAAE;AAClB,CAAC;AAED,OAAO,SAASC,eAAe,CAE7BC,EAAK,EAAiB;EACtB,kBAA0Bb,UAAU,CAClC,UAACgB,SAAS,EAAEC,QAAQ;MAAA,uCAAWD,SAAS,GAAKC,QAAAA;IAAAA,CAAW,EACxDd,YAAY,CACb;IAAA;IAHMW,KAAK;IAAEC,QAAQ;EAItB,IAAMG,SAAS,GAAGJ,KAAK,CAACT,QAAQ,IAAI,CAACS,KAAK,CAACP,QAAQ;EAEnD,IAAMY,IAAI,GAAGrB,WAAW,CAAC,YAAM;IAC7B,IAAIe,EAAE,EAAE;MACNE,QAAQ,CAACZ,YAAY,CAAC;MACtBU,EAAE,CAACM,IAAI,EAAE;IACX;EACF,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAER,IAAMO,IAAI,GAAGtB,WAAW,CACrBuB,UAAAA,WAA2B,EAAK;IAC/B,IAAIR,EAAE,EAAE;MACNA,EAAE,CAACO,IAAI,CAACC,WAAW,CAAC;IACtB;EACF,CAAC,EACD,CAACR,EAAE,CAAC,CACL;EAEDd,SAAS,CAAC,YAAM;IACdgB,QAAQ,CAACZ,YAAY,CAAC;IACtB,IAAI,CAACU,EAAE,EAAE;MACP;IACF;IACA,IAAMS,WAAW,GAAIT,EAAE,CAAgBU,mBAAmB,CAAC,UAAA,IAAA,EAAuB;MAAtB,IAAEC,IAAI,GAAW,IAAA,CAAfA,IAAI;QAAEC,OAAAA,GAAS,IAAA,CAATA,OAAAA;MAClE,QAAQD,IAAI;QACV,KAAKvB,WAAW,CAACyB,MAAM;UACrBX,QAAQ,CAAC;YAAEX,QAAQ,EAAE;UAAK,CAAC,CAAC;UAC5B;QACF,KAAKH,WAAW,CAAC0B,MAAM;UACrBZ,QAAQ,CAAC;YAAEV,QAAQ,EAAE;UAAK,CAAC,CAAC;UAC5B;QACF,KAAKJ,WAAW,CAAC2B,MAAM;UACrBb,QAAQ,CAAC;YAAER,QAAQ,EAAE,IAAI;YAAEH,QAAQ,EAAE;UAAM,CAAC,CAAC;UAC7C;QACF,KAAKH,WAAW,CAAC4B,OAAO;UACtBd,QAAQ,CAAC;YAAET,SAAS,EAAE;UAAK,CAAC,CAAC;UAC7B;QACF,KAAKL,WAAW,CAAC6B,KAAK;UACpBf,QAAQ,CAAC;YAAEP,KAAK,EAAEiB;UAAiB,CAAC,CAAC;UACrC;QACF,KAAKvB,mBAAmB,CAACwB,MAAM;UAC7BX,QAAQ,CAAC;YAAEX,QAAQ,EAAE,IAAI;YAAEM,MAAM,EAAEe;UAA4B,CAAC,CAAC;UACjE;QACF,KAAKvB,mBAAmB,CAAC6B,aAAa;UACpChB,QAAQ,CAAC;YAAEJ,cAAc,EAAE,IAAI;YAAED,MAAM,EAAEe;UAA4B,CAAC,CAAC;UACvE;MAAA;IAEN,CAAC,CAAC;IACF,OAAO,YAAM;MACXH,WAAW,EAAE;IACf,CAAC;EACH,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAER,uCACKC,KAAK;IACRI,SAAS,EAATA,SAAS;IACTC,IAAI,EAAJA,IAAI;IACJC,IAAAA,EAAAA;EAAAA;AAEJ","sourceRoot":"../../src","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { AdEventType } from '../AdEventType';\nimport { RewardedAdEventType } from '../RewardedAdEventType';\nconst initialState = {\n  isLoaded: false,\n  isOpened: false,\n  isClicked: false,\n  isClosed: false,\n  error: undefined,\n  reward: undefined,\n  isEarnedReward: false\n};\nexport function useFullScreenAd(ad) {\n  const [state, setState] = useReducer((prevState, newState) => ({\n    ...prevState,\n    ...newState\n  }), initialState);\n  const isShowing = state.isOpened && !state.isClosed;\n  const load = useCallback(() => {\n    if (ad) {\n      setState(initialState);\n      ad.load();\n    }\n  }, [ad]);\n  const show = useCallback(showOptions => {\n    if (ad) {\n      ad.show(showOptions);\n    }\n  }, [ad]);\n  useEffect(() => {\n    setState(initialState);\n    if (!ad) {\n      return;\n    }\n    const unsubscribe = ad.addAdEventsListener(_ref => {\n      let {\n        type,\n        payload\n      } = _ref;\n      switch (type) {\n        case AdEventType.LOADED:\n          setState({\n            isLoaded: true\n          });\n          break;\n        case AdEventType.OPENED:\n          setState({\n            isOpened: true\n          });\n          break;\n        case AdEventType.CLOSED:\n          setState({\n            isClosed: true,\n            isLoaded: false\n          });\n          break;\n        case AdEventType.CLICKED:\n          setState({\n            isClicked: true\n          });\n          break;\n        case AdEventType.ERROR:\n          setState({\n            error: payload\n          });\n          break;\n        case RewardedAdEventType.LOADED:\n          setState({\n            isLoaded: true,\n            reward: payload\n          });\n          break;\n        case RewardedAdEventType.EARNED_REWARD:\n          setState({\n            isEarnedReward: true,\n            reward: payload\n          });\n          break;\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [ad]);\n  return {\n    ...state,\n    isShowing,\n    load,\n    show\n  };\n}\n//# sourceMappingURL=useFullScreenAd.js.map"]},"metadata":{},"sourceType":"module"}
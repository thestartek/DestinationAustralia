{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport ExpoDevMenu from \"./ExpoDevMenu\";\nexport function openMenu() {\n  ExpoDevMenu.openMenu();\n}\nvar hasRegisteredCallbackListener = false;\nfunction registerCallbackListener() {\n  if (!hasRegisteredCallbackListener) {\n    DeviceEventEmitter.addListener('registeredCallbackFired', function (name) {\n      hasRegisteredCallbackListener = true;\n      var handler = handlers.get(name);\n      if (handler != null) {\n        handler();\n      }\n    });\n  }\n}\nregisterCallbackListener();\nvar handlers = new Map();\nexport function registerDevMenuItems(_x) {\n  return _registerDevMenuItems.apply(this, arguments);\n}\nfunction _registerDevMenuItems() {\n  _registerDevMenuItems = _asyncToGenerator(function* (items) {\n    if (!__DEV__) {\n      return;\n    }\n    handlers = new Map();\n    var callbackNames = [];\n    items.forEach(function (item) {\n      handlers.set(item.name, item.callback);\n      callbackNames.push(item.name);\n    });\n    return yield ExpoDevMenu.addDevMenuCallbacks(callbackNames);\n  });\n  return _registerDevMenuItems.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/DevMenu.ts"],"names":[],"mappings":";;AAEA,OAAO,WAAW;AAGlB,OAAM,SAAU,QAAQ,GAAA;EACtB,WAAW,CAAC,QAAQ,EAAE;AACxB;AAEA,IAAI,6BAA6B,GAAG,KAAK;AAEzC,SAAS,wBAAwB,GAAA;EAC/B,IAAI,CAAC,6BAA6B,EAAE;IAClC,kBAAkB,CAAC,WAAW,CAAC,yBAAyB,EAAE,UAAC,IAAY,EAAI;MACzE,6BAA6B,GAAG,IAAI;MACpC,IAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC;MAElC,IAAI,OAAO,IAAI,IAAI,EAAE;QACnB,OAAO,EAAE;MACV;IACH,CAAC,CAAC;EACH;AACH;AAEA,wBAAwB,EAAE;AAE1B,IAAI,QAAQ,GAAG,IAAI,GAAG,EAAsB;AAE5C,gBAAsB,oBAAoB;EAAA;AAAA;AAezC;EAAA,0CAfM,WAAoC,KAAwB,EAAA;IACjE,IAAI,CAAC,OAAO,EAAE;MAEZ;IACD;IAED,QAAQ,GAAG,IAAI,GAAG,EAAE;IACpB,IAAM,aAAa,GAAa,EAAE;IAElC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,EAAI;MACrB,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC;MACtC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC/B,CAAC,CAAC;IAEF,aAAa,WAAW,CAAC,mBAAmB,CAAC,aAAa,CAAC;EAC7D,CAAC;EAAA;AAAA","sourcesContent":["import { DeviceEventEmitter } from 'react-native';\n\nimport ExpoDevMenu from './ExpoDevMenu';\nimport { ExpoDevMenuItem } from './ExpoDevMenu.types';\n\nexport function openMenu(): void {\n  ExpoDevMenu.openMenu();\n}\n\nlet hasRegisteredCallbackListener = false;\n\nfunction registerCallbackListener() {\n  if (!hasRegisteredCallbackListener) {\n    DeviceEventEmitter.addListener('registeredCallbackFired', (name: string) => {\n      hasRegisteredCallbackListener = true;\n      const handler = handlers.get(name);\n\n      if (handler != null) {\n        handler();\n      }\n    });\n  }\n}\n\nregisterCallbackListener();\n\nlet handlers = new Map<string, () => void>();\n\nexport async function registerDevMenuItems(items: ExpoDevMenuItem[]) {\n  if (!__DEV__) {\n    // resolve undefined\n    return;\n  }\n\n  handlers = new Map();\n  const callbackNames: string[] = [];\n\n  items.forEach((item) => {\n    handlers.set(item.name, item.callback);\n    callbackNames.push(item.name);\n  });\n\n  return await ExpoDevMenu.addDevMenuCallbacks(callbackNames);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
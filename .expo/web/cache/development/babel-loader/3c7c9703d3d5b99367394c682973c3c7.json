{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport React, { useEffect, useState } from \"react\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { db, auth } from \"../../Firebase\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport * as Notifications from \"expo-notifications\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nNotifications.setNotificationHandler({\n  handleNotification: function () {\n    var _handleNotification = _asyncToGenerator(function* () {\n      return {\n        shouldShowAlert: true,\n        shouldPlaySound: true,\n        shouldSetBadge: false\n      };\n    });\n    function handleNotification() {\n      return _handleNotification.apply(this, arguments);\n    }\n    return handleNotification;\n  }()\n});\nfunction sendPushNotification_Highlights(_x) {\n  return _sendPushNotification_Highlights.apply(this, arguments);\n}\nfunction _sendPushNotification_Highlights() {\n  _sendPushNotification_Highlights = _asyncToGenerator(function* (expoPushToken) {\n    var message = {\n      to: expoPushToken,\n      sound: \"default\",\n      title: \"Journey to Australia\",\n      body: \"New highlights added, check it now !\",\n      data: {\n        someData: \"goes here\"\n      }\n    };\n    yield fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-encoding\": \"gzip, deflate\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(message)\n    });\n  });\n  return _sendPushNotification_Highlights.apply(this, arguments);\n}\nfunction sendPushNotification_Posts(_x2) {\n  return _sendPushNotification_Posts.apply(this, arguments);\n}\nfunction _sendPushNotification_Posts() {\n  _sendPushNotification_Posts = _asyncToGenerator(function* (expoPushToken) {\n    var message = {\n      to: expoPushToken,\n      sound: \"default\",\n      title: \"Journey to Australia\",\n      body: \"New Posts added, check it now !\",\n      data: {\n        someData: \"goes here\"\n      }\n    };\n    yield fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-encoding\": \"gzip, deflate\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(message)\n    });\n  });\n  return _sendPushNotification_Posts.apply(this, arguments);\n}\nfunction sendPushNotification_News(_x3) {\n  return _sendPushNotification_News.apply(this, arguments);\n}\nfunction _sendPushNotification_News() {\n  _sendPushNotification_News = _asyncToGenerator(function* (expoPushToken) {\n    var message = {\n      to: expoPushToken,\n      sound: \"default\",\n      title: \"Journey to Australia\",\n      body: \"Latest News added, check it now !\",\n      data: {\n        someData: \"goes here\"\n      }\n    };\n    yield fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-encoding\": \"gzip, deflate\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(message)\n    });\n  });\n  return _sendPushNotification_News.apply(this, arguments);\n}\nfunction sendPushNotification_Videos(_x4) {\n  return _sendPushNotification_Videos.apply(this, arguments);\n}\nfunction _sendPushNotification_Videos() {\n  _sendPushNotification_Videos = _asyncToGenerator(function* (expoPushToken) {\n    var message = {\n      to: expoPushToken,\n      sound: \"default\",\n      title: \"Journey to Australia\",\n      body: \"New Video added, check it now !\",\n      data: {\n        someData: \"goes here\"\n      }\n    };\n    yield fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-encoding\": \"gzip, deflate\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(message)\n    });\n  });\n  return _sendPushNotification_Videos.apply(this, arguments);\n}\nvar NotificationScreen = function NotificationScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var payLink = function payLink() {\n    Linking.openURL(\"https://PayPal.Me/thestartek\").then(function (result) {\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  var tokenRef = getDoc(doc(db, \"notifications\", \"token\")).then(function (doc) {\n    setToken(doc.data().expoPushToken);\n  });\n  return _jsxs(ScrollView, {\n    children: [auth.currentUser.email == \"journeytoaustralia@starteknp.com\" ? _jsxs(View, {\n      style: {\n        alignItems: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: _asyncToGenerator(function* () {\n          yield sendPushNotification_Highlights(token);\n        }),\n        style: styles.button,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontWeight: \"bold\"\n          },\n          children: \"Send Highlights notifications\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: _asyncToGenerator(function* () {\n          yield sendPushNotification_Posts(token);\n        }),\n        style: styles.button,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontWeight: \"bold\"\n          },\n          children: \"Send Posts notifications\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: _asyncToGenerator(function* () {\n          yield sendPushNotification_News(token);\n        }),\n        style: styles.button,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontWeight: \"bold\"\n          },\n          children: \"Send News notifications\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: _asyncToGenerator(function* () {\n          yield sendPushNotification_Videos(token);\n        }),\n        style: styles.button,\n        children: _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontWeight: \"bold\"\n          },\n          children: \"Send Videos notifications\"\n        })\n      })]\n    }) : null, _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Notifications are not available right now.\"\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"We are working hard to make this feature available to our users. Please come back later to see notifications.\"\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"For now, you can support us to make this application the bast app for Australia related contents by offering your support amount to the following PayPal ID.\"\n      }), _jsxs(View, {\n        style: {\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(Image, {\n          source: {\n            uri: \"https://firebasestorage.googleapis.com/v0/b/journeytoaustralia-b21d4.appspot.com/o/confidential%2FPayPal_qrCode.png?alt=media&token=fec45c06-f199-4608-a189-4e38af3b44ee\"\n          },\n          style: {\n            height: 200,\n            width: 200,\n            marginTop: 20\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: payLink,\n          children: _jsx(Text, {\n            style: styles.payID,\n            children: \"PayPal.Me/thestartek\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default NotificationScreen;\nvar styles = StyleSheet.create({\n  headerText: {\n    fontSize: 28,\n    marginHorizontal: 20,\n    marginTop: 30,\n    marginBottom: 15\n  },\n  contentText: {\n    fontSize: 16,\n    marginVertical: 5,\n    marginHorizontal: 20,\n    lineHeight: 26\n  },\n  payID: {\n    marginVertical: 20,\n    textAlign: \"center\",\n    color: \"#1267E9\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"80%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\",\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","WebBrowser","db","auth","getDoc","doc","Notifications","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","sendPushNotification_Highlights","expoPushToken","message","to","sound","title","body","data","someData","fetch","method","headers","Accept","JSON","stringify","sendPushNotification_Posts","sendPushNotification_News","sendPushNotification_Videos","NotificationScreen","token","setToken","payLink","Linking","openURL","then","result","console","log","catch","error","tokenRef","currentUser","email","alignItems","styles","button","color","fontWeight","headerText","contentText","justifyContent","uri","height","width","marginTop","payID","StyleSheet","create","fontSize","marginHorizontal","marginBottom","marginVertical","lineHeight","textAlign","backgroundColor","padding","borderRadius"],"sources":["C:/Users/awasthit/journeytoaustralia/components/notifications/NotificationScreen.js"],"sourcesContent":["import {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  ScrollView,\r\n  Linking,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nimport { db, auth } from \"../../Firebase\";\r\nimport { getDoc, doc } from \"firebase/firestore\";\r\nimport * as Notifications from \"expo-notifications\";\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: true,\r\n    shouldSetBadge: false,\r\n  }),\r\n});\r\n\r\n// send notifications for highlights\r\nasync function sendPushNotification_Highlights(expoPushToken) {\r\n  const message = {\r\n    to: expoPushToken,\r\n    sound: \"default\",\r\n    title: \"Journey to Australia\",\r\n    body: \"New highlights added, check it now !\",\r\n    data: { someData: \"goes here\" },\r\n  };\r\n\r\n  await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Accept-encoding\": \"gzip, deflate\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(message),\r\n  });\r\n}\r\n\r\n// send notifications for Posts\r\nasync function sendPushNotification_Posts(expoPushToken) {\r\n  const message = {\r\n    to: expoPushToken,\r\n    sound: \"default\",\r\n    title: \"Journey to Australia\",\r\n    body: \"New Posts added, check it now !\",\r\n    data: { someData: \"goes here\" },\r\n  };\r\n\r\n  await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Accept-encoding\": \"gzip, deflate\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(message),\r\n  });\r\n}\r\n\r\n// send notifications for News\r\nasync function sendPushNotification_News(expoPushToken) {\r\n  const message = {\r\n    to: expoPushToken,\r\n    sound: \"default\",\r\n    title: \"Journey to Australia\",\r\n    body: \"Latest News added, check it now !\",\r\n    data: { someData: \"goes here\" },\r\n  };\r\n\r\n  await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Accept-encoding\": \"gzip, deflate\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(message),\r\n  });\r\n}\r\n\r\n// send notifications for Videos\r\nasync function sendPushNotification_Videos(expoPushToken) {\r\n  const message = {\r\n    to: expoPushToken,\r\n    sound: \"default\",\r\n    title: \"Journey to Australia\",\r\n    body: \"New Video added, check it now !\",\r\n    data: { someData: \"goes here\" },\r\n  };\r\n\r\n  await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Accept-encoding\": \"gzip, deflate\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(message),\r\n  });\r\n}\r\n\r\nconst NotificationScreen = () => {\r\n  const [token, setToken] = useState([]);\r\n  // const [messageRef, setMessageRef] = useState(\"\");\r\n\r\n  const payLink = () => {\r\n    Linking.openURL(\"https://PayPal.Me/thestartek\")\r\n      .then((result) => {\r\n        console.log(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const tokenRef = getDoc(doc(db, \"notifications\", \"token\")).then((doc) => {\r\n    setToken(doc.data().expoPushToken);\r\n  });\r\n\r\n  return (\r\n    <ScrollView>\r\n      {auth.currentUser.email == \"journeytoaustralia@starteknp.com\" ? (\r\n        <View style={{ alignItems: \"center\" }}>\r\n          <TouchableOpacity\r\n            onPress={async () => {\r\n              await sendPushNotification_Highlights(token);\r\n            }}\r\n            style={styles.button}\r\n          >\r\n            <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n              Send Highlights notifications\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={async () => {\r\n              await sendPushNotification_Posts(token);\r\n            }}\r\n            style={styles.button}\r\n          >\r\n            <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n              Send Posts notifications\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={async () => {\r\n              await sendPushNotification_News(token);\r\n            }}\r\n            style={styles.button}\r\n          >\r\n            <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n              Send News notifications\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={async () => {\r\n              await sendPushNotification_Videos(token);\r\n            }}\r\n            style={styles.button}\r\n          >\r\n            <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\r\n              Send Videos notifications\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ) : null}\r\n      <View>\r\n        <Text style={styles.headerText}>\r\n          Notifications are not available right now.\r\n        </Text>\r\n        <Text style={styles.contentText}>\r\n          We are working hard to make this feature available to our users.\r\n          Please come back later to see notifications.\r\n        </Text>\r\n        <Text style={styles.contentText}>\r\n          For now, you can support us to make this application the bast app for\r\n          Australia related contents by offering your support amount to the\r\n          following PayPal ID.\r\n        </Text>\r\n\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n          <Image\r\n            source={{\r\n              uri: \"https://firebasestorage.googleapis.com/v0/b/journeytoaustralia-b21d4.appspot.com/o/confidential%2FPayPal_qrCode.png?alt=media&token=fec45c06-f199-4608-a189-4e38af3b44ee\",\r\n            }}\r\n            style={{ height: 200, width: 200, marginTop: 20 }}\r\n          />\r\n          <TouchableOpacity onPress={payLink}>\r\n            <Text style={styles.payID}>PayPal.Me/thestartek</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default NotificationScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  headerText: {\r\n    fontSize: 28,\r\n    marginHorizontal: 20,\r\n    marginTop: 30,\r\n    marginBottom: 15,\r\n  },\r\n  contentText: {\r\n    fontSize: 16,\r\n    marginVertical: 5,\r\n    marginHorizontal: 20,\r\n    lineHeight: 26,\r\n  },\r\n  payID: {\r\n    marginVertical: 20,\r\n    textAlign: \"center\",\r\n    color: \"#1267E9\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#1267E9\",\r\n    width: \"80%\",\r\n    padding: 12,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
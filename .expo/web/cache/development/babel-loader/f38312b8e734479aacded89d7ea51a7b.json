{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nexport var ReferenceBase = function () {\n  function ReferenceBase(_path) {\n    _classCallCheck(this, ReferenceBase);\n    _defineProperty(this, \"path\", void 0);\n    var path = _path;\n    if (path) {\n      path = path.length > 1 && path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n      if (path.startsWith('/') && path.length > 1) {\n        path = path.substring(1, path.length);\n      }\n    } else {\n      path = '/';\n    }\n    this.path = path;\n  }\n  _createClass(ReferenceBase, [{\n    key: \"key\",\n    get: function get() {\n      return this.path === '/' ? null : this.path.substring(this.path.lastIndexOf('/') + 1);\n    }\n  }]);\n  return ReferenceBase;\n}();","map":{"version":3,"sources":["ReferenceBase.ts"],"names":["ReferenceBase","constructor","_path","path","length","endsWith","substring","startsWith","lastIndexOf"],"mappings":";;;;;;;;;;;;;;;AAiBA,WAAaA,aAAa;EAGxBC,uBAAYC,KAAa,EAAE;IAAA;IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAA;IACzB,IAAIC,IAAI,GAAGD,KAAK;IAEhB,IAAIC,IAAI,EAAE;MACRA,IAAI,GAAGA,IAAI,CAACC,MAAM,GAAG,CAAC,IAAID,IAAI,CAACE,QAAQ,CAAC,GAAG,CAAC,GAAGF,IAAI,CAACG,SAAS,CAAC,CAAC,EAAEH,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,GAAGD,IAAI;MACxF,IAAIA,IAAI,CAACI,UAAU,CAAC,GAAG,CAAC,IAAIJ,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3CD,IAAI,GAAGA,IAAI,CAACG,SAAS,CAAC,CAAC,EAAEH,IAAI,CAACC,MAAM,CAAC;MACvC;IACF,CAAC,MAAM;MACLD,IAAI,GAAG,GAAG;IACZ;IAEA,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAAA;IAAA;IAAA,KAQA,eAAU;MACR,OAAO,IAAI,CAACA,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,CAACA,IAAI,CAACG,SAAS,CAAC,IAAI,CAACH,IAAI,CAACK,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvF;EAAA;EAAA;AAAA","sourceRoot":"../../src","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport class ReferenceBase {\n  constructor(_path) {\n    _defineProperty(this, \"path\", void 0);\n    let path = _path;\n    if (path) {\n      path = path.length > 1 && path.endsWith('/') ? path.substring(0, path.length - 1) : path;\n      if (path.startsWith('/') && path.length > 1) {\n        path = path.substring(1, path.length);\n      }\n    } else {\n      path = '/';\n    }\n    this.path = path;\n  }\n\n  /**\n   * The last part of a Reference's path (after the last '/')\n   * The key of a root Reference is null.\n   * @type {String}\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#key}\n   */\n  get key() {\n    return this.path === '/' ? null : this.path.substring(this.path.lastIndexOf('/') + 1);\n  }\n}\n//# sourceMappingURL=ReferenceBase.js.map"]},"metadata":{},"sourceType":"module"}
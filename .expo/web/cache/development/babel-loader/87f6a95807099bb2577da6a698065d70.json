{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { TCModel, TCString } from '@iabtcf/core';\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { AdsConsentDebugGeography } from \"./AdsConsentDebugGeography\";\nimport { AdsConsentPurposes } from \"./AdsConsentPurposes\";\nimport { AdsConsentSpecialFeatures } from \"./AdsConsentSpecialFeatures\";\nimport { isPropertySet, isArray, isBoolean, isObject, isString } from \"./common\";\nvar native = NativeModules.RNGoogleMobileAdsConsentModule;\nexport var AdsConsent = {\n  requestInfoUpdate: function requestInfoUpdate() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!isObject(options)) {\n      throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options' expected an object value.\");\n    }\n    if (isPropertySet(options, 'debugGeography') && options.debugGeography !== AdsConsentDebugGeography.DISABLED && options.debugGeography !== AdsConsentDebugGeography.EEA && options.debugGeography !== AdsConsentDebugGeography.NOT_EEA) {\n      throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options.debugGeography' expected one of AdsConsentDebugGeography.DISABLED, AdsConsentDebugGeography.EEA or AdsConsentDebugGeography.NOT_EEA.\");\n    }\n    if (isPropertySet(options, 'tagForUnderAgeOfConsent') && !isBoolean(options.tagForUnderAgeOfConsent)) {\n      throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options.tagForUnderAgeOfConsent' expected a boolean value.\");\n    }\n    if (isPropertySet(options, 'testDeviceIdentifiers')) {\n      if (!isArray(options.testDeviceIdentifiers)) {\n        throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options.testDeviceIdentifiers' expected an array of string values.\");\n      }\n      for (var deviceId of (_options$testDeviceId = options.testDeviceIdentifiers) != null ? _options$testDeviceId : []) {\n        var _options$testDeviceId;\n        if (!isString(deviceId)) {\n          throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options.testDeviceIdentifiers' expected an array of string values.\");\n        }\n      }\n    }\n    return native.requestInfoUpdate(options);\n  },\n  showForm: function showForm() {\n    return native.showForm();\n  },\n  reset: function reset() {\n    return native.reset();\n  },\n  getTCString: function getTCString() {\n    return native.getTCString();\n  },\n  getTCModel: function () {\n    var _getTCModel = _asyncToGenerator(function* () {\n      var tcString = yield native.getTCString();\n      return TCString.decode(tcString);\n    });\n    function getTCModel() {\n      return _getTCModel.apply(this, arguments);\n    }\n    return getTCModel;\n  }(),\n  getUserChoices: function () {\n    var _getUserChoices = _asyncToGenerator(function* () {\n      var tcString = yield native.getTCString();\n      var tcModel;\n      try {\n        tcModel = TCString.decode(tcString);\n      } catch (e) {\n        tcModel = new TCModel();\n        if (__DEV__) {\n          console.warn(\"Failed to decode tcString \" + tcString + \":\", e);\n        }\n      }\n      return {\n        activelyScanDeviceCharacteristicsForIdentification: tcModel.specialFeatureOptins.has(AdsConsentSpecialFeatures.ACTIVELY_SCAN_DEVICE_CHARACTERISTICS_FOR_IDENTIFICATION),\n        applyMarketResearchToGenerateAudienceInsights: tcModel.purposeConsents.has(AdsConsentPurposes.APPLY_MARKET_RESEARCH_TO_GENERATE_AUDIENCE_INSIGHTS),\n        createAPersonalisedAdsProfile: tcModel.purposeConsents.has(AdsConsentPurposes.CREATE_A_PERSONALISED_ADS_PROFILE),\n        createAPersonalisedContentProfile: tcModel.purposeConsents.has(AdsConsentPurposes.CREATE_A_PERSONALISED_ADS_PROFILE),\n        developAndImproveProducts: tcModel.purposeConsents.has(AdsConsentPurposes.DEVELOP_AND_IMPROVE_PRODUCTS),\n        measureAdPerformance: tcModel.purposeConsents.has(AdsConsentPurposes.MEASURE_AD_PERFORMANCE),\n        measureContentPerformance: tcModel.purposeConsents.has(AdsConsentPurposes.MEASURE_CONTENT_PERFORMANCE),\n        selectBasicAds: tcModel.purposeConsents.has(AdsConsentPurposes.SELECT_BASIC_ADS),\n        selectPersonalisedAds: tcModel.purposeConsents.has(AdsConsentPurposes.SELECT_PERSONALISED_ADS),\n        selectPersonalisedContent: tcModel.purposeConsents.has(AdsConsentPurposes.SELECT_PERSONALISED_CONTENT),\n        storeAndAccessInformationOnDevice: tcModel.purposeConsents.has(AdsConsentPurposes.STORE_AND_ACCESS_INFORMATION_ON_DEVICE),\n        usePreciseGeolocationData: tcModel.specialFeatureOptins.has(AdsConsentSpecialFeatures.USE_PRECISE_GEOLOCATION_DATA)\n      };\n    });\n    function getUserChoices() {\n      return _getUserChoices.apply(this, arguments);\n    }\n    return getUserChoices;\n  }()\n};","map":{"version":3,"sources":["AdsConsent.ts"],"names":["TCModel","TCString","AdsConsentDebugGeography","AdsConsentPurposes","AdsConsentSpecialFeatures","isPropertySet","isArray","isBoolean","isObject","isString","native","NativeModules","RNGoogleMobileAdsConsentModule","AdsConsent","requestInfoUpdate","options","Error","debugGeography","DISABLED","EEA","NOT_EEA","tagForUnderAgeOfConsent","testDeviceIdentifiers","deviceId","showForm","reset","getTCString","getTCModel","tcString","decode","getUserChoices","tcModel","e","__DEV__","console","warn","activelyScanDeviceCharacteristicsForIdentification","specialFeatureOptins","has","ACTIVELY_SCAN_DEVICE_CHARACTERISTICS_FOR_IDENTIFICATION","applyMarketResearchToGenerateAudienceInsights","purposeConsents","APPLY_MARKET_RESEARCH_TO_GENERATE_AUDIENCE_INSIGHTS","createAPersonalisedAdsProfile","CREATE_A_PERSONALISED_ADS_PROFILE","createAPersonalisedContentProfile","developAndImproveProducts","DEVELOP_AND_IMPROVE_PRODUCTS","measureAdPerformance","MEASURE_AD_PERFORMANCE","measureContentPerformance","MEASURE_CONTENT_PERFORMANCE","selectBasicAds","SELECT_BASIC_ADS","selectPersonalisedAds","SELECT_PERSONALISED_ADS","selectPersonalisedContent","SELECT_PERSONALISED_CONTENT","storeAndAccessInformationOnDevice","STORE_AND_ACCESS_INFORMATION_ON_DEVICE","usePreciseGeolocationData","USE_PRECISE_GEOLOCATION_DATA"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { TCModel, TCString } from '@iabtcf/core';\nimport { NativeModules } from 'react-native';\nimport { AdsConsentDebugGeography } from './AdsConsentDebugGeography';\nimport { AdsConsentPurposes } from './AdsConsentPurposes';\nimport { AdsConsentSpecialFeatures } from './AdsConsentSpecialFeatures';\nimport { isPropertySet, isArray, isBoolean, isObject, isString } from './common';\nconst native = NativeModules.RNGoogleMobileAdsConsentModule;\nexport const AdsConsent = {\n  requestInfoUpdate() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!isObject(options)) {\n      throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options' expected an object value.\");\n    }\n    if (isPropertySet(options, 'debugGeography') && options.debugGeography !== AdsConsentDebugGeography.DISABLED && options.debugGeography !== AdsConsentDebugGeography.EEA && options.debugGeography !== AdsConsentDebugGeography.NOT_EEA) {\n      throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options.debugGeography' expected one of AdsConsentDebugGeography.DISABLED, AdsConsentDebugGeography.EEA or AdsConsentDebugGeography.NOT_EEA.\");\n    }\n    if (isPropertySet(options, 'tagForUnderAgeOfConsent') && !isBoolean(options.tagForUnderAgeOfConsent)) {\n      throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options.tagForUnderAgeOfConsent' expected a boolean value.\");\n    }\n    if (isPropertySet(options, 'testDeviceIdentifiers')) {\n      if (!isArray(options.testDeviceIdentifiers)) {\n        throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options.testDeviceIdentifiers' expected an array of string values.\");\n      }\n      for (const deviceId of options.testDeviceIdentifiers ?? []) {\n        if (!isString(deviceId)) {\n          throw new Error(\"AdsConsent.requestInfoUpdate(*) 'options.testDeviceIdentifiers' expected an array of string values.\");\n        }\n      }\n    }\n    return native.requestInfoUpdate(options);\n  },\n  showForm() {\n    return native.showForm();\n  },\n  reset() {\n    return native.reset();\n  },\n  getTCString() {\n    return native.getTCString();\n  },\n  async getTCModel() {\n    const tcString = await native.getTCString();\n    return TCString.decode(tcString);\n  },\n  async getUserChoices() {\n    const tcString = await native.getTCString();\n    let tcModel;\n    try {\n      tcModel = TCString.decode(tcString);\n    } catch (e) {\n      tcModel = new TCModel();\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.warn(`Failed to decode tcString ${tcString}:`, e);\n      }\n    }\n    return {\n      activelyScanDeviceCharacteristicsForIdentification: tcModel.specialFeatureOptins.has(AdsConsentSpecialFeatures.ACTIVELY_SCAN_DEVICE_CHARACTERISTICS_FOR_IDENTIFICATION),\n      applyMarketResearchToGenerateAudienceInsights: tcModel.purposeConsents.has(AdsConsentPurposes.APPLY_MARKET_RESEARCH_TO_GENERATE_AUDIENCE_INSIGHTS),\n      createAPersonalisedAdsProfile: tcModel.purposeConsents.has(AdsConsentPurposes.CREATE_A_PERSONALISED_ADS_PROFILE),\n      createAPersonalisedContentProfile: tcModel.purposeConsents.has(AdsConsentPurposes.CREATE_A_PERSONALISED_ADS_PROFILE),\n      developAndImproveProducts: tcModel.purposeConsents.has(AdsConsentPurposes.DEVELOP_AND_IMPROVE_PRODUCTS),\n      measureAdPerformance: tcModel.purposeConsents.has(AdsConsentPurposes.MEASURE_AD_PERFORMANCE),\n      measureContentPerformance: tcModel.purposeConsents.has(AdsConsentPurposes.MEASURE_CONTENT_PERFORMANCE),\n      selectBasicAds: tcModel.purposeConsents.has(AdsConsentPurposes.SELECT_BASIC_ADS),\n      selectPersonalisedAds: tcModel.purposeConsents.has(AdsConsentPurposes.SELECT_PERSONALISED_ADS),\n      selectPersonalisedContent: tcModel.purposeConsents.has(AdsConsentPurposes.SELECT_PERSONALISED_CONTENT),\n      storeAndAccessInformationOnDevice: tcModel.purposeConsents.has(AdsConsentPurposes.STORE_AND_ACCESS_INFORMATION_ON_DEVICE),\n      usePreciseGeolocationData: tcModel.specialFeatureOptins.has(AdsConsentSpecialFeatures.USE_PRECISE_GEOLOCATION_DATA)\n    };\n  }\n};\n//# sourceMappingURL=AdsConsent.js.map"]},"metadata":{},"sourceType":"module"}
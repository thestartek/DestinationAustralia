{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createPermissionHook, Platform, UnavailabilityError } from 'expo-modules-core';\nimport NotificationPermissionsModule from \"./NotificationPermissionsModule\";\nexport function getPermissionsAsync() {\n  return _getPermissionsAsync.apply(this, arguments);\n}\nfunction _getPermissionsAsync() {\n  _getPermissionsAsync = _asyncToGenerator(function* () {\n    if (!NotificationPermissionsModule.getPermissionsAsync) {\n      throw new UnavailabilityError('Notifications', 'getPermissionsAsync');\n    }\n    return yield NotificationPermissionsModule.getPermissionsAsync();\n  });\n  return _getPermissionsAsync.apply(this, arguments);\n}\nexport function requestPermissionsAsync(_x) {\n  return _requestPermissionsAsync.apply(this, arguments);\n}\nfunction _requestPermissionsAsync() {\n  _requestPermissionsAsync = _asyncToGenerator(function* (permissions) {\n    if (!NotificationPermissionsModule.requestPermissionsAsync) {\n      throw new UnavailabilityError('Notifications', 'requestPermissionsAsync');\n    }\n    var requestedPermissions = permissions != null ? permissions : {\n      ios: {\n        allowAlert: true,\n        allowBadge: true,\n        allowSound: true\n      }\n    };\n    var requestedPlatformPermissions = requestedPermissions[Platform.OS];\n    return yield NotificationPermissionsModule.requestPermissionsAsync(requestedPlatformPermissions);\n  });\n  return _requestPermissionsAsync.apply(this, arguments);\n}\nexport var usePermissions = createPermissionHook({\n  requestMethod: requestPermissionsAsync,\n  getMethod: getPermissionsAsync\n});","map":{"version":3,"sources":["../src/NotificationPermissions.ts"],"names":[],"mappings":";AAAA,SAAS,oBAAoB,EAAE,QAAQ,EAAE,mBAAmB,QAAQ,mBAAmB;AAMvF,OAAO,6BAA6B;AAEpC,gBAAsB,mBAAmB;EAAA;AAAA;AAMxC;EAAA,yCANM,aAAkC;IACvC,IAAI,CAAC,6BAA6B,CAAC,mBAAmB,EAAE;MACtD,MAAM,IAAI,mBAAmB,CAAC,eAAe,EAAE,qBAAqB,CAAC;IACtE;IAED,aAAa,6BAA6B,CAAC,mBAAmB,EAAE;EAClE,CAAC;EAAA;AAAA;AAED,gBAAsB,uBAAuB;EAAA;AAAA;AAc5C;EAAA,6CAdM,WAAuC,WAA4C,EAAA;IACxF,IAAI,CAAC,6BAA6B,CAAC,uBAAuB,EAAE;MAC1D,MAAM,IAAI,mBAAmB,CAAC,eAAe,EAAE,yBAAyB,CAAC;IAC1E;IAED,IAAM,oBAAoB,GAAG,WAAW,WAAX,WAAW,GAAI;MAC1C,GAAG,EAAE;QACH,UAAU,EAAE,IAAI;QAChB,UAAU,EAAE,IAAI;QAChB,UAAU,EAAE;MACb;KACF;IACD,IAAM,4BAA4B,GAAG,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC;IACtE,aAAa,6BAA6B,CAAC,uBAAuB,CAAC,4BAA4B,CAAC;EAClG,CAAC;EAAA;AAAA;AAYD,OAAO,IAAM,cAAc,GAAG,oBAAoB,CAGhD;EACA,aAAa,EAAE,uBAAuB;EACtC,SAAS,EAAE;CACZ,CAAC","sourcesContent":["import { createPermissionHook, Platform, UnavailabilityError } from 'expo-modules-core';\n\nimport {\n  NotificationPermissionsRequest,\n  NotificationPermissionsStatus,\n} from './NotificationPermissions.types';\nimport NotificationPermissionsModule from './NotificationPermissionsModule';\n\nexport async function getPermissionsAsync() {\n  if (!NotificationPermissionsModule.getPermissionsAsync) {\n    throw new UnavailabilityError('Notifications', 'getPermissionsAsync');\n  }\n\n  return await NotificationPermissionsModule.getPermissionsAsync();\n}\n\nexport async function requestPermissionsAsync(permissions?: NotificationPermissionsRequest) {\n  if (!NotificationPermissionsModule.requestPermissionsAsync) {\n    throw new UnavailabilityError('Notifications', 'requestPermissionsAsync');\n  }\n\n  const requestedPermissions = permissions ?? {\n    ios: {\n      allowAlert: true,\n      allowBadge: true,\n      allowSound: true,\n    },\n  };\n  const requestedPlatformPermissions = requestedPermissions[Platform.OS];\n  return await NotificationPermissionsModule.requestPermissionsAsync(requestedPlatformPermissions);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to send and receive push notifications.\n * This uses both `requestPermissionsAsync` and `getPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [permissionResponse, requestPermission] = Notifications.usePermissions();\n * ```\n */\nexport const usePermissions = createPermissionHook<\n  NotificationPermissionsStatus,\n  NotificationPermissionsRequest\n>({\n  requestMethod: requestPermissionsAsync,\n  getMethod: getPermissionsAsync,\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
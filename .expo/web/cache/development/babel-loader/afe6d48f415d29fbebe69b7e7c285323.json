{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\", \"style\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useEffect } from 'react';\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { RNGoogleSigninButton } from \"./RNGoogleSiginButton\";\nvar RNGoogleSignin = NativeModules.RNGoogleSignin;\nexport var GoogleSigninButton = function GoogleSigninButton(_ref) {\n  var onPress = _ref.onPress,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  useEffect(function () {\n    if (Platform.OS === 'ios') {\n      return;\n    }\n    var clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', function () {\n      onPress === null || onPress === void 0 ? void 0 : onPress();\n    });\n    return function () {\n      clickListener.remove();\n    };\n  }, [onPress]);\n  var recommendedSize = function () {\n    switch (rest.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  }();\n  return React.createElement(RNGoogleSigninButton, _extends({}, rest, {\n    onPress: onPress,\n    style: [recommendedSize, style]\n  }));\n};\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE\n};\nGoogleSigninButton.Color = {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT\n};\nvar styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48\n  },\n  standardSize: {\n    width: 230,\n    height: 48\n  },\n  wideSize: {\n    width: 312,\n    height: 48\n  }\n});","map":{"version":3,"sources":["GoogleSigninButton.tsx"],"names":["React","useEffect","RNGoogleSigninButton","RNGoogleSignin","NativeModules","GoogleSigninButton","onPress","style","rest","Platform","OS","clickListener","addListener","remove","recommendedSize","size","BUTTON_SIZE_ICON","styles","iconSize","BUTTON_SIZE_WIDE","wideSize","standardSize","Size","Icon","Standard","BUTTON_SIZE_STANDARD","Wide","Color","Dark","BUTTON_COLOR_DARK","Light","BUTTON_COLOR_LIGHT","create","width","height"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAGA,SAASC,oBAAT;AAUA,IAAMC,cAAuC,GAAGC,aAAa,CAACD,cAA9D;AAEA,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAkB,OAA6D;EAAA,IAAvDC,OAAF,QAAEA,OAAF;IAAWC,KAAX,QAAWA,KAAX;IAAqBC,IAAAA;EACtDP,SAAS,CAAC,YAAM;IACd,IAAIQ,QAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;MACzB;IACD;IACD,IAAME,aAAa,GAAG,kBAAkB,CAACC,WAAnB,CAA+B,6BAA/B,EAA8D,YAAM;MACxFN,OAAO,KAAA,IAAPA,IAAAA,OAAO,KAAA,KAAA,CAAPA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,EAAA;IACR,CAFqB,CAAtB;IAGA,OAAO,YAAM;MACXK,aAAa,CAACE,MAAdF,EAAAA;IACD,CAFD;EAGD,CAVQ,EAUN,CAACL,OAAD,CAVM,CAATL;EAYA,IAAMa,eAAe,GAAI,YAAM;IAC7B,QAAQN,IAAI,CAACO,IAAb;MACE,KAAKZ,cAAc,CAACa,gBAApB;QACE,OAAOC,MAAM,CAACC,QAAd;MACF,KAAKf,cAAc,CAACgB,gBAApB;QACE,OAAOF,MAAM,CAACG,QAAd;MACF;QACE,OAAOH,MAAM,CAACI,YAAd;IAAA;EAEL,CATuB,EAbkE;EAyB1F,OAAO,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAA0Bb,IAA1B,EAAA;IAAgC,OAAO,EAAEF,OAAzC;IAAkD,KAAK,EAAE,CAACQ,eAAD,EAAkBP,KAAlB;EAAzD,CAAA,CAAA,CAAP;AACD,CA1BM;AA4BPF,kBAAkB,CAACiB,IAAnBjB,GAA0B;EACxBkB,IAAI,EAAEpB,cAAc,CAACa,gBADG;EAExBQ,QAAQ,EAAErB,cAAc,CAACsB,oBAFD;EAGxBC,IAAI,EAAEvB,cAAc,CAACgB;AAHG,CAA1Bd;AAMAA,kBAAkB,CAACsB,KAAnBtB,GAA2B;EACzBuB,IAAI,EAAEzB,cAAc,CAAC0B,iBADI;EAEzBC,KAAK,EAAE3B,cAAc,CAAC4B;AAFG,CAA3B1B;AAMA,IAAMY,MAAM,GAAG,UAAU,CAACe,MAAX,CAAkB;EAC/Bd,QAAQ,EAAE;IACRe,KAAK,EAAE,EADC;IAERC,MAAM,EAAE;EAFA,CADqB;EAK/Bb,YAAY,EAAE;IAAEY,KAAK,EAAE,GAAT;IAAcC,MAAM,EAAE;EAAtB,CALiB;EAM/Bd,QAAQ,EAAE;IAAEa,KAAK,EAAE,GAAT;IAAcC,MAAM,EAAE;EAAtB;AANqB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { NativeModules, Platform, DeviceEventEmitter, StyleSheet } from 'react-native';\nimport { RNGoogleSigninButton } from './RNGoogleSiginButton';\nimport type { GoogleSigninButtonProps } from './types';\n\ninterface RNGoogleSignStaticsType {\n  BUTTON_SIZE_STANDARD: number;\n  BUTTON_SIZE_WIDE: number;\n  BUTTON_SIZE_ICON: number;\n  BUTTON_COLOR_DARK: number;\n  BUTTON_COLOR_LIGHT: number;\n}\nconst RNGoogleSignin: RNGoogleSignStaticsType = NativeModules.RNGoogleSignin;\n\nexport const GoogleSigninButton = ({ onPress, style, ...rest }: GoogleSigninButtonProps) => {\n  useEffect(() => {\n    if (Platform.OS === 'ios') {\n      return;\n    }\n    const clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {\n      onPress?.();\n    });\n    return () => {\n      clickListener.remove();\n    };\n  }, [onPress]);\n\n  const recommendedSize = (() => {\n    switch (rest.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  })();\n\n  // @ts-ignore style prop incompatible\n  return <RNGoogleSigninButton {...rest} onPress={onPress} style={[recommendedSize, style]} />;\n};\n\nGoogleSigninButton.Size = {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE,\n};\n\nGoogleSigninButton.Color = {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n};\n\n// sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton\nconst styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48,\n  },\n  standardSize: { width: 230, height: 48 },\n  wideSize: { width: 312, height: 48 },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar AlphaNumericUnderscore = /^[a-zA-Z0-9_]+$/;\nexport function objectKeyValuesAreStrings(object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var entries = Object.entries(object);\n  for (var i = 0; i < entries.length; i++) {\n    var _entries$i = _slicedToArray(entries[i], 2),\n      key = _entries$i[0],\n      value = _entries$i[1];\n    if (!isString(key) || !isString(value)) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isNull(value) {\n  return value === null;\n}\nexport function isObject(value) {\n  return value ? typeof value === 'object' && !Array.isArray(value) && !isNull(value) : false;\n}\nexport function isDate(value) {\n  return !!value && Object.prototype.toString.call(value) === '[object Date]' && !isNaN(Number(value));\n}\nexport function isFunction(value) {\n  return value ? typeof value === 'function' : false;\n}\nexport function isString(value) {\n  return typeof value === 'string';\n}\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFinite(value) {\n  return Number.isFinite(value);\n}\nexport function isInteger(value) {\n  return Number.isInteger(value);\n}\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}\nexport function isArray(value) {\n  return Array.isArray(value);\n}\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\nexport function isDefined(value) {\n  return !isNull(value) && !isUndefined(value);\n}\nexport function isAlphaNumericUnderscore(value) {\n  return AlphaNumericUnderscore.test(value);\n}\nvar IS_VALID_URL_REGEX = /^(http|https):\\/\\/[^ \"]+$/;\nexport function isValidUrl(url) {\n  return IS_VALID_URL_REGEX.test(url);\n}\nexport function isOneOf(value) {\n  var oneOf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!isArray(oneOf)) {\n    return false;\n  }\n  return oneOf.includes(value);\n}\nexport function noop() {}","map":{"version":3,"sources":["validate.ts"],"names":["AlphaNumericUnderscore","objectKeyValuesAreStrings","object","isObject","entries","Object","i","length","key","value","isString","isNull","Array","isArray","isDate","prototype","toString","call","isNaN","Number","isFunction","isNumber","isFinite","isInteger","isBoolean","isUndefined","isDefined","isAlphaNumericUnderscore","test","IS_VALID_URL_REGEX","isValidUrl","url","isOneOf","oneOf","includes","noop"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Taken from react-native-firebase: https://github.com/invertase/react-native-firebase/blob/master/packages/app/lib/common/validate.js\n *\n * @format\n */\nconst AlphaNumericUnderscore = /^[a-zA-Z0-9_]+$/;\n\nexport function objectKeyValuesAreStrings(object: object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  const entries = Object.entries(object);\n\n  for (let i = 0; i < entries.length; i++) {\n    const [key, value] = entries[i];\n    if (!isString(key) || !isString(value)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Simple is null check.\n */\nexport function isNull(value: unknown): value is null {\n  return value === null;\n}\n\n/**\n * Simple is object check.\n */\nexport function isObject(value: unknown): value is object {\n  return value\n    ? typeof value === 'object' && !Array.isArray(value) && !isNull(value)\n    : false;\n}\n\n/**\n * Simple is date check\n * https://stackoverflow.com/a/44198641\n */\nexport function isDate(value: unknown): value is Date {\n  // use the global isNaN() and not Number.isNaN() since it will validate an Invalid Date\n  return (\n    !!value &&\n    Object.prototype.toString.call(value) === '[object Date]' &&\n    !isNaN(Number(value))\n  );\n}\n\n/**\n * Simple is function check\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(value: unknown): value is Function {\n  return value ? typeof value === 'function' : false;\n}\n\n/**\n * Simple is string check\n */\nexport function isString(value: unknown): value is string {\n  return typeof value === 'string';\n}\n\n/**\n * Simple is number check\n */\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\n/**\n * Simple finite check\n */\nexport function isFinite(value: number): value is number {\n  return Number.isFinite(value);\n}\n\n/**\n * Simple integer check\n */\nexport function isInteger(value: unknown): value is number {\n  return Number.isInteger(value);\n}\n\n/**\n * Simple is boolean check\n */\nexport function isBoolean(value: unknown): value is boolean {\n  return typeof value === 'boolean';\n}\n\n/**\n * Simple is array check\n */\nexport function isArray(value: unknown): value is unknown[] {\n  return Array.isArray(value);\n}\n\n/**\n * Simple is undefined check\n */\nexport function isUndefined(value: unknown): value is undefined {\n  return typeof value === 'undefined';\n}\n\n/**\n * Simple is not null nor undefined check\n */\nexport function isDefined<T>(value: T): value is Exclude<T, null | undefined> {\n  return !isNull(value) && !isUndefined(value);\n}\n\n/**\n * /^[a-zA-Z0-9_]+$/\n */\nexport function isAlphaNumericUnderscore(value: string) {\n  return AlphaNumericUnderscore.test(value);\n}\n\n/**\n * URL test\n */\nconst IS_VALID_URL_REGEX = /^(http|https):\\/\\/[^ \"]+$/;\nexport function isValidUrl(url: string) {\n  return IS_VALID_URL_REGEX.test(url);\n}\n\n/**\n * Array includes\n */\nexport function isOneOf(value: unknown, oneOf: unknown[] = []) {\n  if (!isArray(oneOf)) {\n    return false;\n  }\n  return oneOf.includes(value);\n}\n\nexport function noop() {\n  // noop-üêà\n}\n"]},"metadata":{},"sourceType":"module"}
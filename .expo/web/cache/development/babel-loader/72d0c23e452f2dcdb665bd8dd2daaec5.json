{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { auth, db, storage } from \"../Firebase\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar thumbnailPic = _jsx(Image, {\n  source: require(\"./../assets/profileIcon.png\"),\n  style: {\n    height: 100,\n    width: 100,\n    margin: 10,\n    tintColor: \"grey\"\n  }\n});\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fullname = _useState6[0],\n      setFullname = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      city = _useState8[0],\n      setCity = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      info = _useState10[0],\n      setInfo = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setIsLoading = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      percentage = _useState16[0],\n      setPercentage = _useState16[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.photo,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 0.75\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleRegister = function handleRegister() {\n    var imageUrl;\n    return _regeneratorRuntime.async(function handleRegister$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(uploadImage());\n\n          case 2:\n            imageUrl = _context2.sent;\n            console.log(imageUrl);\n            createUserWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n              var user = userCredentials.user;\n              console.log(\"Registered with:\", user.email);\n\n              try {\n                setDoc(doc(db, \"users\", user.email), {\n                  uid: user.uid,\n                  fullname: fullname,\n                  email: user.email,\n                  city: city,\n                  info: info,\n                  profile_picture: imageUrl\n                });\n                console.log(\"User added to database\");\n                Alert.alert(\"User registered successfully\", user.email);\n              } catch (e) {\n                console.error(\"Error adding user\", e);\n              }\n            }).catch(function (error) {\n              return console.log(error.message);\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage() {\n    var filename, extension, name, imageFilename, imageRef, img, bytes, uploadTask, url;\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(image == null)) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", null);\n\n          case 2:\n            _context3.prev = 2;\n            filename = email + \"/\" + \"profileImages\" + \"/\" + image.substring(image.lastIndexOf(\"/\") + 1);\n            extension = filename.split(\".\").pop();\n            name = filename.split(\".\").slice(0, -1).join(\".\");\n            imageFilename = name + Date.now() + \".\" + extension;\n            imageRef = ref(storage, imageFilename);\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(fetch(image));\n\n          case 10:\n            img = _context3.sent;\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(img.blob());\n\n          case 13:\n            bytes = _context3.sent;\n            uploadTask = uploadBytesResumable(imageRef, bytes);\n            uploadTask.on(\"state_changed\", function (snapshot) {\n              var progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n              setIsLoading(true);\n              setPercentage(progress);\n            });\n            _context3.next = 18;\n            return _regeneratorRuntime.awrap(uploadTask);\n\n          case 18:\n            _context3.next = 20;\n            return _regeneratorRuntime.awrap(getDownloadURL(imageRef));\n\n          case 20:\n            url = _context3.sent;\n            return _context3.abrupt(\"return\", url);\n\n          case 24:\n            _context3.prev = 24;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.log(_context3.t0);\n            return _context3.abrupt(\"return\", null);\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 24]], Promise);\n  };\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss;\n    },\n    children: _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        children: [_jsx(View, {\n          style: {\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: image != null ? _jsx(Image, {\n            source: {\n              uri: image\n            },\n            style: [styles.logoContainer, styles.selectedPhoto]\n          }) : _jsx(View, {\n            style: styles.logoContainer,\n            children: thumbnailPic\n          })\n        }), _jsx(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"space-around\"\n          },\n          children: _jsxs(TouchableOpacity, {\n            style: styles.buttonPhoto,\n            onPress: pickImage,\n            children: [_jsx(Image, {\n              style: styles.icons,\n              source: require(\"../assets/photoIcon.png\")\n            }), _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Upload photo\"\n            })]\n          })\n        }), _jsxs(View, {\n          children: [_jsx(TextInput, {\n            placeholder: \"Full Name\",\n            value: fullname,\n            onChangeText: function onChangeText(text) {\n              return setFullname(text);\n            },\n            style: styles.textInput\n          }), _jsx(TextInput, {\n            placeholder: \"Email\",\n            autoCapitalize: \"none\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            },\n            style: styles.textInput\n          }), _jsx(TextInput, {\n            placeholder: \"Password\",\n            value: password,\n            autoCapitalize: \"none\",\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            style: styles.textInput,\n            secureTextEntry: true\n          }), _jsx(TextInput, {\n            placeholder: \"City\",\n            value: city,\n            onChangeText: function onChangeText(text) {\n              return setCity(text);\n            },\n            style: styles.textInput\n          }), _jsx(TextInput, {\n            placeholder: \"About me\",\n            multiline: true,\n            autoCapitalize: \"none\",\n            value: info,\n            onChangeText: function onChangeText(text) {\n              return setInfo(text);\n            },\n            style: [styles.textInput, {\n              height: 100\n            }]\n          })]\n        }), fullname == null || email == null || password == null || city == null ? _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(View, {\n            style: [styles.button, styles.buttonUnselected, {\n              marginBottom: 200\n            }],\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Register\"\n            })\n          })\n        }) : _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(TouchableOpacity, {\n            onPress: handleRegister,\n            style: [styles.button, {\n              marginBottom: 200\n            }],\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Register\"\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  logoContainer: {\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"lightgrey\",\n    marginTop: 10,\n    width: 300\n  },\n  buttonContainer: {\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 30\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"100%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonUnselected: {\n    backgroundColor: \"darkgrey\"\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: \"#1267E9\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonPhoto: {\n    flexDirection: \"row\",\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: \"#1267E9\",\n    marginBottom: 10\n  },\n  buttonPhotoUnselected: {\n    backgroundColor: \"darkgrey\"\n  },\n  selectedPhoto: {\n    borderRadius: 50,\n    height: 100,\n    width: 100,\n    margin: 10\n  },\n  icons: {\n    width: 20,\n    height: 20,\n    tintColor: \"white\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontSize: 16,\n    marginHorizontal: 8\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","db","storage","createUserWithEmailAndPassword","setDoc","doc","ImagePicker","getDownloadURL","ref","uploadBytesResumable","thumbnailPic","require","height","width","margin","tintColor","RegisterScreen","navigation","email","setEmail","password","setPassword","fullname","setFullname","city","setCity","info","setInfo","image","setImage","isLoading","setIsLoading","percentage","setPercentage","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","photo","allowsEditing","aspect","quality","result","console","log","cancelled","uri","handleRegister","uploadImage","imageUrl","then","userCredentials","user","uid","profile_picture","Alert","alert","e","error","catch","message","filename","substring","lastIndexOf","extension","split","pop","name","slice","join","imageFilename","Date","now","imageRef","fetch","img","blob","bytes","uploadTask","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","url","Keyboard","dismiss","Platform","OS","styles","container","justifyContent","alignItems","logoContainer","selectedPhoto","flexDirection","buttonPhoto","icons","textStyle","text","textInput","buttonContainer","button","buttonUnselected","marginBottom","buttonText","StyleSheet","create","marginTop","flex","backgroundColor","padding","borderRadius","borderWidth","borderColor","buttonOutline","color","fontWeight","fontSize","buttonOutlineText","buttonPhotoUnselected","marginHorizontal"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/screens/RegisterScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  View,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  Keyboard,\n} from \"react-native\";\nimport { auth, db, storage } from \"../Firebase\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { Alert } from \"react-native\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\n\nconst thumbnailPic = (\n  <Image\n    source={require(\"./../assets/profileIcon.png\")}\n    style={{ height: 100, width: 100, margin: 10, tintColor: \"grey\" }}\n  />\n);\n\nconst RegisterScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [fullname, setFullname] = useState(null);\n  const [city, setCity] = useState(null);\n  const [info, setInfo] = useState(null);\n  const [image, setImage] = useState(null);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [percentage, setPercentage] = useState(0)\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.photo,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.75,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  const handleRegister = async () => {\n    const imageUrl = await uploadImage();\n    console.log(imageUrl);\n\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        console.log(\"Registered with:\", user.email);\n        //navigation.push(\"Profile\");\n\n        try {\n          setDoc(doc(db, \"users\", user.email), {\n            uid: user.uid,\n            fullname: fullname,\n            email: user.email,\n            city: city,\n            info: info,\n            profile_picture: imageUrl,\n          });\n          console.log(\"User added to database\");\n          Alert.alert(\"User registered successfully\", user.email);\n        } catch (e) {\n          console.error(\"Error adding user\", e);\n        }\n      })\n      .catch((error) => console.log(error.message));\n  };\n\n  // useEffect(() => {\n  //   handleRegister();\n  // }, []);\n\n  const uploadImage = async () => {\n    if (image == null) {\n      return null;\n    }\n    try {\n      let filename =\n        email +\n        \"/\" +\n        \"profileImages\" +\n        \"/\" +\n        image.substring(image.lastIndexOf(\"/\") + 1);\n      const extension = filename.split(\".\").pop();\n      const name = filename.split(\".\").slice(0, -1).join(\".\");\n      const imageFilename = name + Date.now() + \".\" + extension;\n\n      const imageRef = ref(storage, imageFilename);\n      const img = await fetch(image);\n      const bytes = await img.blob();\n      const uploadTask = uploadBytesResumable(imageRef, bytes);\n\n      uploadTask.on(\"state_changed\", (snapshot) => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        //console.log(\"Upload is \" + progress + \"% done\");\n        setIsLoading(true);\n        setPercentage(progress);\n      });\n\n      await uploadTask;\n      const url = await getDownloadURL(imageRef);\n      return url;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n      >\n        <ScrollView>\n          <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n            {image != null ? (\n              <Image\n                source={{ uri: image }}\n                style={[styles.logoContainer, styles.selectedPhoto]}\n              />\n            ) : (\n              <View style={styles.logoContainer}>{thumbnailPic}</View>\n            )}\n          </View>\n\n          <View\n            style={{ flexDirection: \"row\", justifyContent: \"space-around\" }}\n          >\n            <TouchableOpacity style={styles.buttonPhoto} onPress={pickImage}>\n              <Image\n                style={styles.icons}\n                source={require(\"../assets/photoIcon.png\")}\n              />\n              <Text style={styles.textStyle}>Upload photo</Text>\n            </TouchableOpacity>\n          </View>\n\n          <View>\n            <TextInput\n              placeholder=\"Full Name\"\n              //autoFocus={true}\n              value={fullname}\n              //autoCapitalize=\"none\"\n              onChangeText={(text) => setFullname(text)}\n              style={styles.textInput}\n              //returnKeyType = {'next'}\n            />\n            <TextInput\n              placeholder=\"Email\"\n              autoCapitalize=\"none\"\n              value={email}\n              onChangeText={(text) => setEmail(text)}\n              style={styles.textInput}\n            />\n            <TextInput\n              placeholder=\"Password\"\n              value={password}\n              autoCapitalize=\"none\"\n              onChangeText={(text) => setPassword(text)}\n              style={styles.textInput}\n              secureTextEntry\n            />\n            <TextInput\n              placeholder=\"City\"\n              value={city}\n              onChangeText={(text) => setCity(text)}\n              style={styles.textInput}\n            />\n            <TextInput\n              placeholder=\"About me\"\n              multiline={true}\n              autoCapitalize=\"none\"\n              value={info}\n              onChangeText={(text) => setInfo(text)}\n              style={[styles.textInput, { height: 100 }]}\n              //onSubmitEditing={Keyboard.dismiss}\n            />\n          </View>\n\n          {fullname == null ||\n          email == null ||\n          password == null ||\n          city == null ? (\n            <View style={styles.buttonContainer}>\n              <View\n                style={[\n                  styles.button,\n                  styles.buttonUnselected,\n                  { marginBottom: 200 },\n                ]}\n              >\n                <Text style={styles.buttonText}>Register</Text>\n              </View>\n            </View>\n          ) : (\n            <View style={styles.buttonContainer}>\n              <TouchableOpacity\n                onPress={handleRegister}\n                style={[styles.button, { marginBottom: 200 }]}\n              >\n                <Text style={styles.buttonText}>Register</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  logoContainer: {\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"lightgrey\",\n    marginTop: 10,\n    width: 300,\n  },\n  buttonContainer: {\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 30,\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"100%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonUnselected: {\n    backgroundColor: \"darkgrey\",\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2,\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: \"#1267E9\",\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n  buttonPhoto: {\n    flexDirection: \"row\",\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: \"#1267E9\",\n    marginBottom: 10,\n  },\n  buttonPhotoUnselected: {\n    backgroundColor: \"darkgrey\",\n  },\n  selectedPhoto: {\n    borderRadius: 50,\n    height: 100,\n    width: 100,\n    margin: 10,\n  },\n  icons: {\n    width: 20,\n    height: 20,\n    //resizeMode: 'contain',\n    tintColor: \"white\",\n  },\n  textStyle: {\n    color: \"white\",\n    //fontWeight: \"bold\",\n    //textAlign: \"center\",\n    fontSize: 16,\n    marginHorizontal: 8,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Device from \"expo-device\";\nimport * as Notifications from \"expo-notifications\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { db, auth } from \"../../Firebase\";\nimport { getDoc, doc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nNotifications.setNotificationHandler({\n  handleNotification: function () {\n    var _handleNotification = _asyncToGenerator(function* () {\n      return {\n        shouldShowAlert: true,\n        shouldPlaySound: false,\n        shouldSetBadge: false\n      };\n    });\n    function handleNotification() {\n      return _handleNotification.apply(this, arguments);\n    }\n    return handleNotification;\n  }()\n});\nfunction sendPushNotification(_x) {\n  return _sendPushNotification.apply(this, arguments);\n}\nfunction _sendPushNotification() {\n  _sendPushNotification = _asyncToGenerator(function* (expoPushToken) {\n    var message = {\n      to: expoPushToken,\n      sound: \"default\",\n      title: \"Journey to Australia\",\n      body: \"It's a new notification !\",\n      data: {\n        someData: \"goes here\"\n      }\n    };\n    yield fetch(\"https://exp.host/--/api/v2/push/send\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Accept-encoding\": \"gzip, deflate\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(message)\n    });\n  });\n  return _sendPushNotification.apply(this, arguments);\n}\nexport default function SendNotifications() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notification = _useState4[0],\n    setNotification = _useState4[1];\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  useEffect(function () {\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      setNotification(notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n  var tokenRef = getDoc(doc(db, \"notifications\", \"token\")).then(function (doc) {\n    setToken(doc.data().expoPushToken);\n  });\n  return _jsxs(View, {\n    style: styles.outerContainer,\n    children: [_jsxs(View, {\n      style: styles.notificationContainer,\n      children: [_jsx(Image, {\n        source: require(\"../../assets/icon.png\"),\n        style: styles.notificationImage\n      }), _jsxs(View, {\n        style: styles.notificationContents,\n        children: [_jsx(Text, {\n          style: styles.titleText,\n          children: notification && notification.request.content.title\n        }), _jsx(Text, {\n          style: styles.bodyText,\n          children: notification && notification.request.content.body\n        })]\n      })]\n    }), _jsx(Button, {\n      title: \"Press for notification\",\n      onPress: _asyncToGenerator(function* () {\n        yield sendPushNotification(token);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  outerContainer: {},\n  notificationContainer: {\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    marginHorizontal: 10,\n    marginVertical: 5\n  },\n  notificationImage: {\n    width: 50,\n    height: 50,\n    margin: 10\n  },\n  notificationContents: {\n    marginHorizontal: 5,\n    marginVertical: 10,\n    maxWidth: \"80%\"\n  },\n  titleText: {\n    fontWeight: \"bold\",\n    color: \"#1267E9\",\n    marginBottom: 4\n  },\n  bodyText: {}\n});","map":{"version":3,"names":["useState","useEffect","useRef","Device","Notifications","TouchableOpacity","db","auth","getDoc","doc","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","sendPushNotification","expoPushToken","message","to","sound","title","body","data","someData","fetch","method","headers","Accept","JSON","stringify","SendNotifications","token","setToken","notification","setNotification","notificationListener","responseListener","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","response","console","log","removeNotificationSubscription","tokenRef","then","styles","outerContainer","notificationContainer","require","notificationImage","notificationContents","titleText","request","content","bodyText","StyleSheet","create","flexDirection","alignItems","backgroundColor","borderRadius","marginHorizontal","marginVertical","width","height","margin","maxWidth","fontWeight","color","marginBottom"],"sources":["C:/Users/awasthit/journeytoaustralia/components/notifications/SendNotifications.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { Text, View, Button, Platform, StyleSheet, Image } from \"react-native\";\r\nimport * as Device from \"expo-device\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { db, auth } from \"../../Firebase\";\r\nimport { getDoc, doc } from \"firebase/firestore\";\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: false,\r\n    shouldSetBadge: false,\r\n  }),\r\n});\r\n\r\nasync function sendPushNotification(expoPushToken) {\r\n  const message = {\r\n    to: expoPushToken,\r\n    sound: \"default\",\r\n    title: \"Journey to Australia\",\r\n    body: \"It's a new notification !\",\r\n    data: { someData: \"goes here\" },\r\n  };\r\n\r\n  await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Accept-encoding\": \"gzip, deflate\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(message),\r\n  });\r\n}\r\n\r\nexport default function SendNotifications() {\r\n  const [token, setToken] = useState([]);\r\n  const [notification, setNotification] = useState(false);\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n\r\n  useEffect(() => {\r\n    notificationListener.current =\r\n      Notifications.addNotificationReceivedListener((notification) => {\r\n        setNotification(notification);\r\n      });\r\n\r\n    responseListener.current =\r\n      Notifications.addNotificationResponseReceivedListener((response) => {\r\n        console.log(response);\r\n      });\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(\r\n        notificationListener.current\r\n      );\r\n      Notifications.removeNotificationSubscription(responseListener.current);\r\n    };\r\n  }, []);\r\n\r\n  const tokenRef = getDoc(doc(db, \"notifications\", \"token\")).then((doc) => {\r\n    setToken(doc.data().expoPushToken);\r\n  });\r\n\r\n  return (\r\n    <View style={styles.outerContainer}>\r\n      {/* <Text>Your expo push token: {token}</Text> */}\r\n      <View style={styles.notificationContainer}>\r\n        <Image\r\n          source={require(\"../../assets/icon.png\")}\r\n          style={styles.notificationImage}\r\n        />\r\n        <View style={styles.notificationContents}>\r\n          <Text style={styles.titleText}>\r\n            {notification && notification.request.content.title}\r\n          </Text>\r\n          <Text style={styles.bodyText}>\r\n            {notification && notification.request.content.body}\r\n          </Text>\r\n          {/* <Text>\r\n            Data:{\" \"}\r\n            {notification && JSON.stringify(notification.request.content.data)}\r\n          </Text> */}\r\n        </View>\r\n      </View>\r\n      <Button\r\n        title=\"Press for notification\"\r\n        onPress={async () => {\r\n          await sendPushNotification(token);\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\n// async function schedulePushNotification() {\r\n//   await Notifications.scheduleNotificationAsync({\r\n//     content: {\r\n//     //   to: \"ExponentPushToken[MCiiqCBlsl2nHTrNfcwWqw]\",\r\n//       title: \"You've got a new mail! ðŸ“¬\",\r\n//       body: \"Here is the notification body\",\r\n//       data: { data: \"goes here\" },\r\n//     },\r\n//     trigger: { seconds: 2 },\r\n//   });\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n  outerContainer: {\r\n    // flex: 1,\r\n    // // alignItems: \"center\",\r\n    // justifyContent: \"space-around\",\r\n    // backgroundColor: \"lightgrey\",\r\n  },\r\n  notificationContainer: {\r\n    flexDirection: \"row\",\r\n    // justifyContent: \"centre\",\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    marginHorizontal: 10,\r\n    marginVertical: 5,\r\n  },\r\n  notificationImage: {\r\n    width: 50,\r\n    height: 50,\r\n    margin: 10,\r\n  },\r\n  notificationContents: {\r\n    marginHorizontal: 5,\r\n    marginVertical: 10,\r\n    maxWidth: \"80%\",\r\n  },\r\n  titleText: {\r\n    fontWeight: \"bold\",\r\n    color: \"#1267E9\",\r\n    marginBottom: 4,\r\n  },\r\n  bodyText: {},\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport setColor from 'color';\nimport { grey400, grey800, grey50, grey700, white, black } from \"../../styles/themes/v2/colors\";\nvar getCheckedColor = function getCheckedColor(_ref) {\n  var theme = _ref.theme,\n    color = _ref.color;\n  if (color) {\n    return color;\n  }\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n  return theme.colors.accent;\n};\nvar getThumbTintColor = function getThumbTintColor(_ref2) {\n  var theme = _ref2.theme,\n    disabled = _ref2.disabled,\n    value = _ref2.value,\n    checkedColor = _ref2.checkedColor;\n  var isIOS = Platform.OS === 'ios';\n  if (isIOS) {\n    return undefined;\n  }\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n  if (value) {\n    return checkedColor;\n  }\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\nvar getOnTintColor = function getOnTintColor(_ref3) {\n  var theme = _ref3.theme,\n    disabled = _ref3.disabled,\n    value = _ref3.value,\n    checkedColor = _ref3.checkedColor;\n  var isIOS = Platform.OS === 'ios';\n  if (isIOS) {\n    return checkedColor;\n  }\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\nexport var getSwitchColor = function getSwitchColor(_ref4) {\n  var theme = _ref4.theme,\n    disabled = _ref4.disabled,\n    value = _ref4.value,\n    color = _ref4.color;\n  var checkedColor = getCheckedColor({\n    theme: theme,\n    color: color\n  });\n  return {\n    onTintColor: getOnTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    thumbTintColor: getThumbTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    checkedColor: checkedColor\n  };\n};","map":{"version":3,"sources":["utils.ts"],"names":["setColor","grey400","grey800","grey50","grey700","white","black","getCheckedColor","theme","color","isV3","colors","primary","accent","getThumbTintColor","disabled","value","checkedColor","isIOS","Platform","OS","undefined","dark","getOnTintColor","alpha","rgb","string","getSwitchColor","onTintColor","thumbTintColor"],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\n\nimport setColor from 'color';\n\nimport {\n  grey400,\n  grey800,\n  grey50,\n  grey700,\n  white,\n  black,\n} from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  value?: boolean;\n};\n\nconst getCheckedColor = ({\n  theme,\n  color,\n}: {\n  theme: InternalTheme;\n  color?: string;\n}) => {\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getThumbTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\n\nconst getOnTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\n\nexport const getSwitchColor = ({\n  theme,\n  disabled,\n  value,\n  color,\n}: BaseProps & { color?: string }) => {\n  const checkedColor = getCheckedColor({ theme, color });\n\n  return {\n    onTintColor: getOnTintColor({ theme, disabled, value, checkedColor }),\n    thumbTintColor: getThumbTintColor({ theme, disabled, value, checkedColor }),\n    checkedColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
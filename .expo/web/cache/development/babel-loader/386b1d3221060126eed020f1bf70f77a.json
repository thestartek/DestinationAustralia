{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport color from 'color';\nimport { black, white } from \"../../styles/themes/v2/colors\";\nvar getBorderColor = function getBorderColor(_ref) {\n  var theme = _ref.theme,\n    isOutlined = _ref.isOutlined,\n    disabled = _ref.disabled,\n    selectedColor = _ref.selectedColor,\n    backgroundColor = _ref.backgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n    return theme.colors.outline;\n  }\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n    return color(black).alpha(0.29).rgb().string();\n  }\n  return backgroundColor;\n};\nvar getTextColor = function getTextColor(_ref2) {\n  var theme = _ref2.theme,\n    isOutlined = _ref2.isOutlined,\n    disabled = _ref2.disabled,\n    selectedColor = _ref2.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n    return theme.colors.onSecondaryContainer;\n  }\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\nvar getDefaultBackgroundColor = function getDefaultBackgroundColor(_ref3) {\n  var theme = _ref3.theme,\n    isOutlined = _ref3.isOutlined;\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n    return theme.colors.secondaryContainer;\n  }\n  if (isOutlined) {\n    var _theme$colors;\n    return (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.surface;\n  }\n  if (theme.dark) {\n    return '#383838';\n  }\n  return '#ebebeb';\n};\nvar getBackgroundColor = function getBackgroundColor(_ref4) {\n  var theme = _ref4.theme,\n    isOutlined = _ref4.isOutlined,\n    disabled = _ref4.disabled,\n    customBackgroundColor = _ref4.customBackgroundColor;\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n  return getDefaultBackgroundColor({\n    theme: theme,\n    isOutlined: isOutlined\n  });\n};\nvar getSelectedBackgroundColor = function getSelectedBackgroundColor(_ref5) {\n  var theme = _ref5.theme,\n    isOutlined = _ref5.isOutlined,\n    disabled = _ref5.disabled,\n    customBackgroundColor = _ref5.customBackgroundColor,\n    showSelectedOverlay = _ref5.showSelectedOverlay;\n  var backgroundColor = getBackgroundColor({\n    theme: theme,\n    disabled: disabled,\n    isOutlined: isOutlined,\n    customBackgroundColor: customBackgroundColor\n  });\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0.12).rgb().string();\n      }\n      return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0).rgb().string();\n    }\n    if (showSelectedOverlay) {\n      return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0.12).rgb().string();\n    }\n    return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0).rgb().string();\n  }\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\nvar getIconColor = function getIconColor(_ref6) {\n  var theme = _ref6.theme,\n    isOutlined = _ref6.isOutlined,\n    disabled = _ref6.disabled,\n    selectedColor = _ref6.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n    return theme.colors.onSecondaryContainer;\n  }\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\nvar getUnderlayColor = function getUnderlayColor(_ref7) {\n  var theme = _ref7.theme,\n    isOutlined = _ref7.isOutlined,\n    disabled = _ref7.disabled,\n    selectedColor = _ref7.selectedColor,\n    selectedBackgroundColor = _ref7.selectedBackgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n  var textColor = getTextColor({\n    theme: theme,\n    disabled: disabled,\n    selectedColor: selectedColor,\n    isOutlined: isOutlined\n  });\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n  return selectedBackgroundColor;\n};\nexport var getChipColors = function getChipColors(_ref8) {\n  var isOutlined = _ref8.isOutlined,\n    theme = _ref8.theme,\n    selectedColor = _ref8.selectedColor,\n    showSelectedOverlay = _ref8.showSelectedOverlay,\n    customBackgroundColor = _ref8.customBackgroundColor,\n    disabled = _ref8.disabled;\n  var baseChipColorProps = {\n    theme: theme,\n    isOutlined: isOutlined,\n    disabled: disabled\n  };\n  var backgroundColor = getBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor\n  }));\n  var selectedBackgroundColor = getSelectedBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor,\n    showSelectedOverlay: showSelectedOverlay\n  }));\n  return {\n    borderColor: getBorderColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      backgroundColor: backgroundColor\n    })),\n    textColor: getTextColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    iconColor: getIconColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    underlayColor: getUnderlayColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      selectedBackgroundColor: selectedBackgroundColor\n    })),\n    backgroundColor: backgroundColor,\n    selectedBackgroundColor: selectedBackgroundColor\n  };\n};","map":{"version":3,"sources":["helpers.tsx"],"names":["color","black","white","getBorderColor","theme","isOutlined","disabled","selectedColor","backgroundColor","isSelectedColor","undefined","isV3","colors","onSurfaceVariant","alpha","rgb","string","outline","dark","getTextColor","onSurfaceDisabled","onSecondaryContainer","text","getDefaultBackgroundColor","surface","secondaryContainer","getBackgroundColor","customBackgroundColor","getSelectedBackgroundColor","showSelectedOverlay","mix","lighten","darken","getIconColor","getUnderlayColor","selectedBackgroundColor","textColor","fade","getChipColors","baseChipColorProps","borderColor","iconColor","underlayColor"],"mappings":"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","sourcesContent":["import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  isOutlined: boolean;\n  disabled?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  backgroundColor,\n}: BaseProps & { backgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nconst getTextColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getDefaultBackgroundColor = ({\n  theme,\n  isOutlined,\n}: Omit<BaseProps, 'disabled' | 'selectedColor'>) => {\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    return theme.colors?.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n}) => {\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({ theme, isOutlined });\n};\n\nconst getSelectedBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n  showSelectedOverlay,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  showSelectedOverlay?: boolean;\n}) => {\n  const backgroundColor = getBackgroundColor({\n    theme,\n    disabled,\n    isOutlined,\n    customBackgroundColor,\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor)\n          .mix(color(theme.colors.onSurfaceVariant), 0.12)\n          .rgb()\n          .string();\n      }\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSurfaceVariant), 0)\n        .rgb()\n        .string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.12)\n        .rgb()\n        .string();\n    }\n\n    return color(backgroundColor)\n      .mix(color(theme.colors.onSecondaryContainer), 0)\n      .rgb()\n      .string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nconst getIconColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getUnderlayColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  selectedBackgroundColor,\n}: BaseProps & { selectedBackgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n  const textColor = getTextColor({\n    theme,\n    disabled,\n    selectedColor,\n    isOutlined,\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport const getChipColors = ({\n  isOutlined,\n  theme,\n  selectedColor,\n  showSelectedOverlay,\n  customBackgroundColor,\n  disabled,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  disabled?: boolean;\n  showSelectedOverlay?: boolean;\n  selectedColor?: string;\n}) => {\n  const baseChipColorProps = { theme, isOutlined, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n  });\n\n  const selectedBackgroundColor = getSelectedBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n    showSelectedOverlay,\n  });\n\n  return {\n    borderColor: getBorderColor({\n      ...baseChipColorProps,\n      selectedColor,\n      backgroundColor,\n    }),\n    textColor: getTextColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    iconColor: getIconColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    underlayColor: getUnderlayColor({\n      ...baseChipColorProps,\n      selectedColor,\n      selectedBackgroundColor,\n    }),\n    backgroundColor,\n    selectedBackgroundColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
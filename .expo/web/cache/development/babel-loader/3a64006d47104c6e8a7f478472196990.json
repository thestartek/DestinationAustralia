{"ast":null,"code":"import { isPropertySet, isArray, isBoolean, isObject } from \"./common\";\nimport { MaxAdContentRating } from \"./MaxAdContentRating\";\nexport function validateAdRequestConfiguration(requestConfiguration) {\n  var out = {};\n  if (!isObject(requestConfiguration)) {\n    throw new Error(\"'requestConfiguration' expected an object value\");\n  }\n  if (requestConfiguration.maxAdContentRating) {\n    if (requestConfiguration.maxAdContentRating !== MaxAdContentRating.G && requestConfiguration.maxAdContentRating !== MaxAdContentRating.PG && requestConfiguration.maxAdContentRating !== MaxAdContentRating.T && requestConfiguration.maxAdContentRating !== MaxAdContentRating.MA) {\n      throw new Error(\"'requestConfiguration.maxAdContentRating' expected on of MaxAdContentRating.G, MaxAdContentRating.PG, MaxAdContentRating.T or MaxAdContentRating.MA\");\n    }\n    out.maxAdContentRating = requestConfiguration.maxAdContentRating;\n  }\n  if (isPropertySet(requestConfiguration, 'tagForChildDirectedTreatment')) {\n    if (!isBoolean(requestConfiguration.tagForChildDirectedTreatment)) {\n      throw new Error(\"'requestConfiguration.tagForChildDirectedTreatment' expected a boolean value\");\n    }\n    out.tagForChildDirectedTreatment = requestConfiguration.tagForChildDirectedTreatment;\n  }\n  if (isPropertySet(requestConfiguration, 'tagForUnderAgeOfConsent')) {\n    if (!isBoolean(requestConfiguration.tagForUnderAgeOfConsent)) {\n      throw new Error(\"'requestConfiguration.tagForUnderAgeOfConsent' expected a boolean value\");\n    }\n    out.tagForUnderAgeOfConsent = requestConfiguration.tagForUnderAgeOfConsent;\n  }\n  if (isPropertySet(requestConfiguration, 'testDeviceIdentifiers')) {\n    if (!isArray(requestConfiguration.testDeviceIdentifiers)) {\n      throw new Error(\"'requestConfiguration.testDeviceIdentifiers' expected an array value\");\n    }\n    out.testDeviceIdentifiers = requestConfiguration.testDeviceIdentifiers;\n  }\n  return out;\n}","map":{"version":3,"sources":["validateAdRequestConfiguration.ts"],"names":["isPropertySet","isArray","isBoolean","isObject","MaxAdContentRating","validateAdRequestConfiguration","requestConfiguration","out","Error","maxAdContentRating","G","PG","T","MA","tagForChildDirectedTreatment","tagForUnderAgeOfConsent","testDeviceIdentifiers"],"mappings":"AAiBA,SAASA,aAAa,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ;AACpD,SAASC,kBAAkB;AAG3B,OAAO,SAASC,8BAA8B,CAACC,oBAA0C,EAAE;EACzF,IAAMC,GAAyB,GAAG,CAAC,CAAC;EAEpC,IAAI,CAACJ,QAAQ,CAACG,oBAAoB,CAAC,EAAE;IACnC,MAAM,IAAIE,KAAK,CAAC,iDAAiD,CAAC;EACpE;EAEA,IAAIF,oBAAoB,CAACG,kBAAkB,EAAE;IAC3C,IACEH,oBAAoB,CAACG,kBAAkB,KAAKL,kBAAkB,CAACM,CAAC,IAChEJ,oBAAoB,CAACG,kBAAkB,KAAKL,kBAAkB,CAACO,EAAE,IACjEL,oBAAoB,CAACG,kBAAkB,KAAKL,kBAAkB,CAACQ,CAAC,IAChEN,oBAAoB,CAACG,kBAAkB,KAAKL,kBAAkB,CAACS,EAAE,EACjE;MACA,MAAM,IAAIL,KAAK,CACb,qJAAqJ,CACtJ;IACH;IAEAD,GAAG,CAACE,kBAAkB,GAAGH,oBAAoB,CAACG,kBAAkB;EAClE;EAEA,IAAIT,aAAa,CAACM,oBAAoB,EAAE,8BAA8B,CAAC,EAAE;IACvE,IAAI,CAACJ,SAAS,CAACI,oBAAoB,CAACQ,4BAA4B,CAAC,EAAE;MACjE,MAAM,IAAIN,KAAK,CACb,8EAA8E,CAC/E;IACH;IAEAD,GAAG,CAACO,4BAA4B,GAAGR,oBAAoB,CAACQ,4BAA4B;EACtF;EAEA,IAAId,aAAa,CAACM,oBAAoB,EAAE,yBAAyB,CAAC,EAAE;IAClE,IAAI,CAACJ,SAAS,CAACI,oBAAoB,CAACS,uBAAuB,CAAC,EAAE;MAC5D,MAAM,IAAIP,KAAK,CAAC,yEAAyE,CAAC;IAC5F;IAEAD,GAAG,CAACQ,uBAAuB,GAAGT,oBAAoB,CAACS,uBAAuB;EAC5E;EAEA,IAAIf,aAAa,CAACM,oBAAoB,EAAE,uBAAuB,CAAC,EAAE;IAChE,IAAI,CAACL,OAAO,CAACK,oBAAoB,CAACU,qBAAqB,CAAC,EAAE;MACxD,MAAM,IAAIR,KAAK,CAAC,sEAAsE,CAAC;IACzF;IAEAD,GAAG,CAACS,qBAAqB,GAAGV,oBAAoB,CAACU,qBAAqB;EACxE;EAEA,OAAOT,GAAG;AACZ","sourceRoot":"../../src","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isPropertySet, isArray, isBoolean, isObject } from './common';\nimport { MaxAdContentRating } from './MaxAdContentRating';\nexport function validateAdRequestConfiguration(requestConfiguration) {\n  const out = {};\n  if (!isObject(requestConfiguration)) {\n    throw new Error(\"'requestConfiguration' expected an object value\");\n  }\n  if (requestConfiguration.maxAdContentRating) {\n    if (requestConfiguration.maxAdContentRating !== MaxAdContentRating.G && requestConfiguration.maxAdContentRating !== MaxAdContentRating.PG && requestConfiguration.maxAdContentRating !== MaxAdContentRating.T && requestConfiguration.maxAdContentRating !== MaxAdContentRating.MA) {\n      throw new Error(\"'requestConfiguration.maxAdContentRating' expected on of MaxAdContentRating.G, MaxAdContentRating.PG, MaxAdContentRating.T or MaxAdContentRating.MA\");\n    }\n    out.maxAdContentRating = requestConfiguration.maxAdContentRating;\n  }\n  if (isPropertySet(requestConfiguration, 'tagForChildDirectedTreatment')) {\n    if (!isBoolean(requestConfiguration.tagForChildDirectedTreatment)) {\n      throw new Error(\"'requestConfiguration.tagForChildDirectedTreatment' expected a boolean value\");\n    }\n    out.tagForChildDirectedTreatment = requestConfiguration.tagForChildDirectedTreatment;\n  }\n  if (isPropertySet(requestConfiguration, 'tagForUnderAgeOfConsent')) {\n    if (!isBoolean(requestConfiguration.tagForUnderAgeOfConsent)) {\n      throw new Error(\"'requestConfiguration.tagForUnderAgeOfConsent' expected a boolean value\");\n    }\n    out.tagForUnderAgeOfConsent = requestConfiguration.tagForUnderAgeOfConsent;\n  }\n  if (isPropertySet(requestConfiguration, 'testDeviceIdentifiers')) {\n    if (!isArray(requestConfiguration.testDeviceIdentifiers)) {\n      throw new Error(\"'requestConfiguration.testDeviceIdentifiers' expected an array value\");\n    }\n    out.testDeviceIdentifiers = requestConfiguration.testDeviceIdentifiers;\n  }\n  return out;\n}\n//# sourceMappingURL=validateAdRequestConfiguration.js.map"]},"metadata":{},"sourceType":"module"}
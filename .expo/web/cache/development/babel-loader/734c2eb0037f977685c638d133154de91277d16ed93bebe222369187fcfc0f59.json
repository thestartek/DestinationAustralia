{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"unitId\", \"sizes\", \"requestOptions\", \"manualImpressionsEnabled\"];\nimport React, { useState, useEffect } from 'react';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { isFunction } from \"../common\";\nimport { NativeError } from \"../internal/NativeError\";\nimport { BannerAdSize, GAMBannerAdSize } from \"../BannerAdSize\";\nimport { validateAdRequestOptions } from \"../validateAdRequestOptions\";\nvar sizeRegex = /([0-9]+)x([0-9]+)/;\nexport var BaseAd = React.forwardRef(function (_ref, ref) {\n  var unitId = _ref.unitId,\n    sizes = _ref.sizes,\n    requestOptions = _ref.requestOptions,\n    manualImpressionsEnabled = _ref.manualImpressionsEnabled,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState([0, 0]),\n    _useState2 = _slicedToArray(_useState, 2),\n    dimensions = _useState2[0],\n    setDimensions = _useState2[1];\n  useEffect(function () {\n    if (!unitId) {\n      throw new Error(\"BannerAd: 'unitId' expected a valid string unit ID.\");\n    }\n  }, [unitId]);\n  useEffect(function () {\n    if (sizes.length === 0 || !sizes.every(function (size) {\n      return size in BannerAdSize || size in GAMBannerAdSize || sizeRegex.test(size);\n    })) {\n      throw new Error(\"BannerAd: 'size(s)' expected a valid BannerAdSize or custom size string.\");\n    }\n  }, [sizes]);\n  var parsedRequestOptions = JSON.stringify(requestOptions);\n  useEffect(function () {\n    if (requestOptions) {\n      try {\n        validateAdRequestOptions(requestOptions);\n      } catch (e) {\n        if (e instanceof Error) {\n          throw new Error(\"BannerAd: \" + e.message);\n        }\n      }\n    }\n  }, [parsedRequestOptions]);\n  function onNativeEvent(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var type = nativeEvent.type;\n    if (type !== 'onSizeChange' && isFunction(props[type])) {\n      var eventHandler, eventPayload;\n      switch (type) {\n        case 'onAdLoaded':\n          eventPayload = {\n            width: nativeEvent.width,\n            height: nativeEvent.height\n          };\n          if (eventHandler = props[type]) eventHandler(eventPayload);\n          break;\n        case 'onAdFailedToLoad':\n          eventPayload = NativeError.fromEvent(nativeEvent, 'googleMobileAds');\n          if (eventHandler = props[type]) eventHandler(eventPayload);\n          break;\n        case 'onAppEvent':\n          eventPayload = {\n            name: nativeEvent.name,\n            data: nativeEvent.data\n          };\n          if (eventHandler = props[type]) eventHandler(eventPayload);\n          break;\n        default:\n          if (eventHandler = props[type]) eventHandler();\n      }\n    }\n    if (type === 'onAdLoaded' || type === 'onSizeChange') {\n      var width = nativeEvent.width,\n        height = nativeEvent.height;\n      if (width && height) setDimensions([width, height]);\n    }\n  }\n  var style = sizes.includes(GAMBannerAdSize.FLUID) ? {\n    width: '100%',\n    height: dimensions[1]\n  } : {\n    width: dimensions[0],\n    height: dimensions[1]\n  };\n  return React.createElement(GoogleMobileAdsBannerView, {\n    ref: ref,\n    sizes: sizes,\n    style: style,\n    unitId: unitId,\n    request: validateAdRequestOptions(requestOptions),\n    manualImpressionsEnabled: !!manualImpressionsEnabled,\n    onNativeEvent: onNativeEvent\n  });\n});\nBaseAd.displayName = 'BaseAd';\nvar GoogleMobileAdsBannerView = requireNativeComponent('RNGoogleMobileAdsBannerView');","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","requireNativeComponent","isFunction","NativeError","BannerAdSize","GAMBannerAdSize","validateAdRequestOptions","sizeRegex","BaseAd","forwardRef","ref","unitId","_ref","sizes","requestOptions","manualImpressionsEnabled","props","dimensions","setDimensions","Error","length","every","size","test","parsedRequestOptions","JSON","stringify","e","message","onNativeEvent","nativeEvent","_ref2","type","eventHandler","eventPayload","width","height","fromEvent","name","data","style","includes","FLUID","GoogleMobileAdsBannerView","request","displayName"],"sources":["BaseAd.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}
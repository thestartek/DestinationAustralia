{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../Firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar VerifyAccountScreen = function VerifyAccountScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      Alert.alert(\"You have been verified !\", \"You can now safely delete your account\");\n      navigation.goBack();\n    }).catch(function (error) {\n      return Alert.alert(\"Invalid login details\");\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.logoContainer,\n        children: _jsx(Image, {\n          source: require(\"./../assets/logoSquare.png\"),\n          style: {\n            height: 65,\n            width: 65,\n            margin: 30\n          }\n        })\n      }), _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Email\",\n          autoCapitalize: \"none\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          style: styles.textInput\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          style: styles.textInput,\n          secureTextEntry: true\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.push(\"Reset password\");\n        },\n        style: {\n          alignItems: \"flex-end\"\n        },\n        children: _jsxs(Text, {\n          style: {\n            color: \"#1267E9\",\n            fontSize: 16\n          },\n          children: [\" \", \"Forgot password ?\", \" \"]\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          onPress: handleLogin,\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Verify\"\n          })\n        })\n      })]\n    })\n  });\n};\n\nexport default VerifyAccountScreen;\nvar styles = StyleSheet.create({\n  logoContainer: {\n    alignItems: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"lightgrey\",\n    marginVertical: 5,\n    width: 300\n  },\n  buttonContainer: {\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"100%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonLogo: {},\n  buttonFacebook: {\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderColor: \"#1267E9\",\n    borderWidth: 2,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  buttonGoogle: {\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderColor: \"red\",\n    borderWidth: 2,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  buttonFacebookText: {\n    color: \"#1267E9\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  buttonGoogleText: {\n    color: \"red\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","signInWithEmailAndPassword","SafeAreaView","VerifyAccountScreen","navigation","email","setEmail","password","setPassword","handleLogin","then","userCredentials","user","Alert","alert","goBack","catch","error","styles","container","logoContainer","require","height","width","margin","text","textInput","push","alignItems","color","fontSize","buttonContainer","button","buttonText","StyleSheet","create","flex","justifyContent","backgroundColor","padding","borderRadius","borderWidth","borderColor","marginVertical","marginTop","fontWeight","buttonLogo","buttonFacebook","flexDirection","buttonGoogle","buttonFacebookText","buttonGoogleText"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/screens/VerifyAccountScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { auth } from \"../Firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { Alert } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\n\nconst VerifyAccountScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //const navigation = useNavigation();\n\n  // useEffect(() => {\n  //   const unsubscribe = auth.onAuthStateChanged((user) => {\n  //     if (user) {\n  //       navigation.push(\"Home\");\n  //     }\n  //   });\n\n  //   return unsubscribe;\n  // }, []);\n\n  const handleLogin = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        Alert.alert(\"You have been verified !\", \"You can now safely delete your account\");\n        navigation.goBack()\n      })\n      .catch(\n        (error) =>\n          Alert.alert(\n            \"Invalid login details\"\n          )\n        //\n      );\n  };\n\n  // const provider = () => {\n  //   GoogleAuthProvider();\n  // };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        <View style={styles.logoContainer}>\n          <Image\n            source={require(\"./../assets/logoSquare.png\")}\n            style={{ height: 65, width: 65, margin: 30 }}\n          />\n        </View>\n        <View>\n          <TextInput\n            placeholder=\"Email\"\n            autoCapitalize=\"none\"\n            //autoFocus={true}\n            value={email}\n            onChangeText={(text) => setEmail(text)}\n            style={styles.textInput}\n          />\n          <TextInput\n            placeholder=\"Password\"\n            value={password}\n            onChangeText={(text) => setPassword(text)}\n            style={styles.textInput}\n            secureTextEntry\n          />\n        </View>\n\n        <TouchableOpacity\n          onPress={() => navigation.push(\"Reset password\")}\n          style={{ alignItems: \"flex-end\" }}\n        >\n          <Text style={{ color: \"#1267E9\", fontSize: 16 }}>\n            {\" \"}\n            Forgot password ?{\" \"}\n          </Text>\n        </TouchableOpacity>\n\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity onPress={handleLogin} style={styles.button}>\n            <Text style={styles.buttonText}>Verify</Text>\n          </TouchableOpacity>\n        </View>\n        {/* LOGIN WIHT FACEBOOK AND LOGIN WITH GOOGLE BUTTONS */}\n        {/* <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            //onPress={() => navigation.push(\"Register\")}\n            style={[styles.button, styles.buttonFacebook]}\n          >\n            <FontAwesome name=\"facebook\" size={24} color=\"#1267E9\" />\n            <Text style={styles.buttonFacebookText}>Login with Facebook</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            onPress={() =>{}}\n            style={[styles.button, styles.buttonGoogle]}\n          >\n            <AntDesign name=\"google\" size={24} color=\"red\" />\n            <Text style={styles.buttonGoogleText}>Login with Google</Text>\n          </TouchableOpacity>\n        </View> */}\n\n        \n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default VerifyAccountScreen;\n\nconst styles = StyleSheet.create({\n  logoContainer: {\n    alignItems: \"center\",\n  },\n\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"lightgrey\",\n    marginVertical: 5,\n    width: 300,\n  },\n  buttonContainer: {\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"100%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n  buttonLogo: {},\n  buttonFacebook: {\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderColor: \"#1267E9\",\n    borderWidth: 2,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n  buttonGoogle: {\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderColor: \"red\",\n    borderWidth: 2,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n\n  buttonFacebookText: {\n    color: \"#1267E9\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n  buttonGoogleText: {\n    color: \"red\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
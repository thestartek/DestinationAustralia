{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { isString } from \"../common\";\nimport { MobileAds } from \"../MobileAds\";\nimport { validateAdRequestOptions } from \"../validateAdRequestOptions\";\nimport { MobileAd } from \"./MobileAd\";\nexport var InterstitialAd = function (_MobileAd) {\n  _inherits(InterstitialAd, _MobileAd);\n  var _super = _createSuper(InterstitialAd);\n  function InterstitialAd() {\n    _classCallCheck(this, InterstitialAd);\n    return _super.apply(this, arguments);\n  }\n  _createClass(InterstitialAd, [{\n    key: \"addAdEventsListener\",\n    value: function addAdEventsListener(listener) {\n      return this._addAdEventsListener(listener);\n    }\n  }, {\n    key: \"addAdEventListener\",\n    value: function addAdEventListener(type, listener) {\n      return this._addAdEventListener(type, listener);\n    }\n  }], [{\n    key: \"createForAdRequest\",\n    value: function createForAdRequest(adUnitId, requestOptions) {\n      if (!isString(adUnitId)) {\n        throw new Error(\"InterstitialAd.createForAdRequest(*) 'adUnitId' expected an string value.\");\n      }\n      var options = {};\n      try {\n        options = validateAdRequestOptions(requestOptions);\n      } catch (e) {\n        if (e instanceof Error) {\n          throw new Error(\"InterstitialAd.createForAdRequest(_, *) \" + e.message + \".\");\n        }\n      }\n      var requestId = InterstitialAd._interstitialRequest++;\n      return new InterstitialAd('interstitial', MobileAds(), requestId, adUnitId, options);\n    }\n  }]);\n  return InterstitialAd;\n}(MobileAd);\n_defineProperty(InterstitialAd, \"_interstitialRequest\", 0);","map":{"version":3,"sources":["InterstitialAd.ts"],"names":["isString","MobileAds","validateAdRequestOptions","MobileAd","InterstitialAd","adUnitId","requestOptions","Error","options","e","message","requestId","_interstitialRequest","addAdEventsListener","listener","_addAdEventsListener","addAdEventListener","type","_addAdEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;AAiBA,SAASA,QAAQ;AACjB,SAASC,SAAS;AAClB,SAASC,wBAAwB;AACjC,SAASC,QAAQ;AA6CjB,WAAaC,cAAc;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OA0CzBS,6BAA2CC,QAA6B,EAAE;MACxE,OAAO,IAAI,CAACC,oBAAoB,CAACD,QAAQ,CAAC;IAC5C;EAAA;IAAA;IAAA,OAEAE,4BAA0CC,IAAO,EAAEH,QAA4B,EAAE;MAC/E,OAAO,IAAI,CAACI,mBAAmB,CAACD,IAAI,EAAEH,QAAQ,CAAC;IACjD;EAAA;IAAA;IAAA,OAxBA,4BAA0BT,QAAgB,EAAEC,cAA+B,EAAE;MAC3E,IAAI,CAACN,QAAQ,CAACK,QAAQ,CAAC,EAAE;QACvB,MAAM,IAAIE,KAAK,CAAC,2EAA2E,CAAC;MAC9F;MAEA,IAAIC,OAAO,GAAG,CAAC,CAAC;MAChB,IAAI;QACFA,OAAO,GAAGN,wBAAwB,CAACI,cAAc,CAAC;MACpD,CAAC,CAAC,OAAOG,CAAC,EAAE;QACV,IAAIA,CAAC,YAAYF,KAAK,EAAE;UACtB,MAAM,IAAIA,KAAK,8CAA4CE,CAAC,CAACC,OAAQ,OAAG;QAC1E;MACF;MAEA,IAAMC,SAAS,GAAGP,cAAc,CAACQ,oBAAoB,EAAE;MACvD,OAAO,IAAIR,cAAc,CAAC,cAAc,EAAEH,SAAS,EAAE,EAAEU,SAAS,EAAEN,QAAQ,EAAEG,OAAO,CAAC;IACtF;EAAA;EAAA;AAAA,EAxCkCL,QAAQ;AAiD3C,eAAA,CAjDYC,cAAc,EAAA,sBAAA,EACe,CAAC,CAAA","sourceRoot":"../../src","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isString } from '../common';\nimport { MobileAds } from '../MobileAds';\nimport { validateAdRequestOptions } from '../validateAdRequestOptions';\nimport { MobileAd } from './MobileAd';\n/**\n * A class for interacting and showing Interstitial Ads.\n *\n * An Interstitial advert can be pre-loaded and shown at a suitable point in your apps flow, such as at the end of a level\n * in a game. An Interstitial is a full screen advert, laid on-top of your entire application which the user can interact with.\n * Interactions are passed back via events which should be handled accordingly inside of your app.\n *\n * #### Example\n *\n * First create a new Interstitial instance, passing in your Ad Unit ID from the Google Mobile Ads configuration console, and any additional\n * request options. The example below will present a test advert, and only request a non-personalized ad.\n *\n * ```js\n * import { InterstitialAd, TestIds } from 'react-native-google-mobile-ads';\n *\n * const interstitial = InterstitialAd.createForAdRequest(TestIds.INTERSTITIAL, {\n *     requestNonPersonalizedAdsOnly: true,\n * });\n *  ```\n *\n * Each advert needs to be loaded from Google Mobile Ads before being shown. It is recommended this is performed before the user\n * reaches the checkpoint to show the advert, so it's ready to go. Before loading the advert, we need to setup\n * event listeners to listen for updates from Google Mobile Ads, such as advert loaded or failed to load.\n *\n * Event types match the `AdEventType` interface. Once the advert has loaded, we can trigger it to show:\n *\n * ```js\n * import { AdEventType } from 'react-native-google-mobile-ads';\n *\n * interstitialAd.addAdEventListener(AdEventType.Loaded, () => {\n *   interstitialAd.show();\n * });\n *\n * interstitial.load();\n *  ```\n *\n * The advert will be presented to the user, and several more events can be triggered such as the user clicking the\n * advert or closing it.\n */\nexport class InterstitialAd extends MobileAd {\n  /**\n   * Creates a new InterstitialAd instance.\n   *\n   * #### Example\n   *\n   * ```js\n   * import { InterstitialAd, AdEventType, TestIds } from 'react-native-google-mobile-ads';\n   *\n   * const interstitialAd = await InterstitialAd.createForAdRequest(TestIds.INTERSTITIAL, {\n   *   requestAgent: 'CoolAds',\n   * });\n   *\n   * interstitialAd.addAdEventListener(AdEventType.Loaded, () => {\n   *   interstitialAd.show();\n   * });\n   *\n   * interstitialAd.load();\n   * ```\n   *\n   * @param adUnitId The Ad Unit ID for the Interstitial. You can find this on your Google Mobile Ads dashboard.\n   * @param requestOptions Optional RequestOptions used to load the ad.\n   */\n  static createForAdRequest(adUnitId, requestOptions) {\n    if (!isString(adUnitId)) {\n      throw new Error(\"InterstitialAd.createForAdRequest(*) 'adUnitId' expected an string value.\");\n    }\n    let options = {};\n    try {\n      options = validateAdRequestOptions(requestOptions);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw new Error(`InterstitialAd.createForAdRequest(_, *) ${e.message}.`);\n      }\n    }\n    const requestId = InterstitialAd._interstitialRequest++;\n    return new InterstitialAd('interstitial', MobileAds(), requestId, adUnitId, options);\n  }\n  addAdEventsListener(listener) {\n    return this._addAdEventsListener(listener);\n  }\n  addAdEventListener(type, listener) {\n    return this._addAdEventListener(type, listener);\n  }\n}\n_defineProperty(InterstitialAd, \"_interstitialRequest\", 0);\n//# sourceMappingURL=InterstitialAd.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _excluded = [\"repeats\"],\n  _excluded2 = [\"channelId\"],\n  _excluded3 = [\"channelId\"],\n  _excluded4 = [\"channelId\"],\n  _excluded5 = [\"channelId\"],\n  _excluded6 = [\"channelId\"];\nimport { Platform, UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function scheduleNotificationAsync(_x) {\n  return _scheduleNotificationAsync.apply(this, arguments);\n}\nfunction _scheduleNotificationAsync() {\n  _scheduleNotificationAsync = _asyncToGenerator(function* (request) {\n    var _request$identifier;\n    if (!NotificationScheduler.scheduleNotificationAsync) {\n      throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n    }\n    return yield NotificationScheduler.scheduleNotificationAsync((_request$identifier = request.identifier) != null ? _request$identifier : uuidv4(), request.content, parseTrigger(request.trigger));\n  });\n  return _scheduleNotificationAsync.apply(this, arguments);\n}\nvar DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS = ['hour', 'minute'];\nvar WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS = ['weekday', 'hour', 'minute'];\nvar YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS = ['day', 'month', 'hour', 'minute'];\nexport function parseTrigger(userFacingTrigger) {\n  if (userFacingTrigger === null) {\n    return null;\n  }\n  if (userFacingTrigger === undefined) {\n    throw new TypeError('Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.');\n  }\n  if (isDateTrigger(userFacingTrigger)) {\n    return parseDateTrigger(userFacingTrigger);\n  } else if (isDailyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'daily',\n      channelId: userFacingTrigger.channelId,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute\n    };\n  } else if (isWeeklyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'weekly',\n      channelId: userFacingTrigger.channelId,\n      weekday: userFacingTrigger.weekday,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute\n    };\n  } else if (isYearlyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'yearly',\n      channelId: userFacingTrigger.channelId,\n      day: userFacingTrigger.day,\n      month: userFacingTrigger.month,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute\n    };\n  } else if (isSecondsPropertyMisusedInCalendarTriggerInput(userFacingTrigger)) {\n    throw new TypeError('Could not have inferred the notification trigger type: if you want to use a time interval trigger, pass in only `seconds` with or without `repeats` property; if you want to use calendar-based trigger, pass in `second`.');\n  } else if ('seconds' in userFacingTrigger) {\n    var _userFacingTrigger$re;\n    return {\n      type: 'timeInterval',\n      channelId: userFacingTrigger.channelId,\n      seconds: userFacingTrigger.seconds,\n      repeats: (_userFacingTrigger$re = userFacingTrigger.repeats) != null ? _userFacingTrigger$re : false\n    };\n  } else if (isCalendarTrigger(userFacingTrigger)) {\n    var repeats = userFacingTrigger.repeats,\n      calendarTrigger = _objectWithoutProperties(userFacingTrigger, _excluded);\n    return {\n      type: 'calendar',\n      value: calendarTrigger,\n      repeats: repeats\n    };\n  } else {\n    return Platform.select({\n      default: null,\n      android: {\n        type: 'channel',\n        channelId: userFacingTrigger.channelId\n      }\n    });\n  }\n}\nfunction isCalendarTrigger(trigger) {\n  var channelId = trigger.channelId,\n    triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded2);\n  return Object.keys(triggerWithoutChannelId).length > 0;\n}\nfunction isDateTrigger(trigger) {\n  return trigger instanceof Date || typeof trigger === 'number' || typeof trigger === 'object' && 'date' in trigger;\n}\nfunction parseDateTrigger(trigger) {\n  if (trigger instanceof Date || typeof trigger === 'number') {\n    return {\n      type: 'date',\n      timestamp: toTimestamp(trigger)\n    };\n  }\n  return {\n    type: 'date',\n    timestamp: toTimestamp(trigger.date),\n    channelId: trigger.channelId\n  };\n}\nfunction toTimestamp(date) {\n  if (date instanceof Date) {\n    return date.getTime();\n  }\n  return date;\n}\nfunction isDailyTriggerInput(trigger) {\n  if (typeof trigger !== 'object') return false;\n  var channelId = trigger.channelId,\n    triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded3);\n  return Object.keys(triggerWithoutChannelId).length === DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 && DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(function (component) {\n    return component in triggerWithoutChannelId;\n  }) && 'repeats' in triggerWithoutChannelId && triggerWithoutChannelId.repeats === true;\n}\nfunction isWeeklyTriggerInput(trigger) {\n  if (typeof trigger !== 'object') return false;\n  var channelId = trigger.channelId,\n    triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded4);\n  return Object.keys(triggerWithoutChannelId).length === WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 && WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(function (component) {\n    return component in triggerWithoutChannelId;\n  }) && 'repeats' in triggerWithoutChannelId && triggerWithoutChannelId.repeats === true;\n}\nfunction isYearlyTriggerInput(trigger) {\n  if (typeof trigger !== 'object') return false;\n  var channelId = trigger.channelId,\n    triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded5);\n  return Object.keys(triggerWithoutChannelId).length === YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 && YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(function (component) {\n    return component in triggerWithoutChannelId;\n  }) && 'repeats' in triggerWithoutChannelId && triggerWithoutChannelId.repeats === true;\n}\nfunction isSecondsPropertyMisusedInCalendarTriggerInput(trigger) {\n  var channelId = trigger.channelId,\n    triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded6);\n  return 'seconds' in triggerWithoutChannelId && 'repeats' in triggerWithoutChannelId && Object.keys(triggerWithoutChannelId).length > 2 || 'seconds' in triggerWithoutChannelId && !('repeats' in triggerWithoutChannelId) && Object.keys(triggerWithoutChannelId).length > 1;\n}\nfunction validateDateComponentsInTrigger(trigger, components) {\n  var anyTriggerType = trigger;\n  components.forEach(function (component) {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(\"The \" + component + \" parameter needs to be present\");\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(\"The \" + component + \" parameter should be a number\");\n    }\n    switch (component) {\n      case 'month':\n        {\n          var month = anyTriggerType.month;\n          if (month < 0 || month > 11) {\n            throw new RangeError(\"The month parameter needs to be between 0 and 11. Found: \" + month);\n          }\n          break;\n        }\n      case 'day':\n        {\n          var day = anyTriggerType.day,\n            _month = anyTriggerType.month;\n          var daysInGivenMonth = daysInMonth(_month);\n          if (day < 1 || day > daysInGivenMonth) {\n            throw new RangeError(\"The day parameter for month \" + _month + \" must be between 1 and \" + daysInGivenMonth + \". Found: \" + day);\n          }\n          break;\n        }\n      case 'weekday':\n        {\n          var weekday = anyTriggerType.weekday;\n          if (weekday < 1 || weekday > 7) {\n            throw new RangeError(\"The weekday parameter needs to be between 1 and 7. Found: \" + weekday);\n          }\n          break;\n        }\n      case 'hour':\n        {\n          var hour = anyTriggerType.hour;\n          if (hour < 0 || hour > 23) {\n            throw new RangeError(\"The hour parameter needs to be between 0 and 23. Found: \" + hour);\n          }\n          break;\n        }\n      case 'minute':\n        {\n          var minute = anyTriggerType.minute;\n          if (minute < 0 || minute > 59) {\n            throw new RangeError(\"The minute parameter needs to be between 0 and 59. Found: \" + minute);\n          }\n          break;\n        }\n    }\n  });\n}\nfunction daysInMonth() {\n  var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var year = arguments.length > 1 ? arguments[1] : undefined;\n  return new Date(year != null ? year : 2000, month + 1, 0).getDate();\n}","map":{"version":3,"sources":["../src/scheduleNotificationAsync.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform, UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { NotificationTriggerInput as NativeNotificationTriggerInput } from './NotificationScheduler.types';\nimport {\n  NotificationRequestInput,\n  NotificationTriggerInput,\n  DailyTriggerInput,\n  WeeklyTriggerInput,\n  YearlyTriggerInput,\n  CalendarTriggerInput,\n  TimeIntervalTriggerInput,\n  DateTriggerInput,\n  ChannelAwareTriggerInput,\n  SchedulableNotificationTriggerInput,\n} from './Notifications.types';\n\nexport default async function scheduleNotificationAsync(\n  request: NotificationRequestInput\n): Promise<string> {\n  if (!NotificationScheduler.scheduleNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n  }\n\n  return await NotificationScheduler.scheduleNotificationAsync(\n    request.identifier ?? uuidv4(),\n    request.content,\n    parseTrigger(request.trigger)\n  );\n}\n\ntype ValidTriggerDateComponents = 'month' | 'day' | 'weekday' | 'hour' | 'minute';\n\nconst DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS: readonly ValidTriggerDateComponents[] = [\n  'hour',\n  'minute',\n];\nconst WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS: readonly ValidTriggerDateComponents[] = [\n  'weekday',\n  'hour',\n  'minute',\n];\nconst YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS: readonly ValidTriggerDateComponents[] = [\n  'day',\n  'month',\n  'hour',\n  'minute',\n];\n\nexport function parseTrigger(\n  userFacingTrigger: NotificationTriggerInput\n): NativeNotificationTriggerInput {\n  if (userFacingTrigger === null) {\n    return null;\n  }\n\n  if (userFacingTrigger === undefined) {\n    throw new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    );\n  }\n\n  if (isDateTrigger(userFacingTrigger)) {\n    return parseDateTrigger(userFacingTrigger);\n  } else if (isDailyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'daily',\n      channelId: userFacingTrigger.channelId,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute,\n    };\n  } else if (isWeeklyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'weekly',\n      channelId: userFacingTrigger.channelId,\n      weekday: userFacingTrigger.weekday,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute,\n    };\n  } else if (isYearlyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'yearly',\n      channelId: userFacingTrigger.channelId,\n      day: userFacingTrigger.day,\n      month: userFacingTrigger.month,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute,\n    };\n  } else if (isSecondsPropertyMisusedInCalendarTriggerInput(userFacingTrigger)) {\n    throw new TypeError(\n      'Could not have inferred the notification trigger type: if you want to use a time interval trigger, pass in only `seconds` with or without `repeats` property; if you want to use calendar-based trigger, pass in `second`.'\n    );\n  } else if ('seconds' in userFacingTrigger) {\n    return {\n      type: 'timeInterval',\n      channelId: userFacingTrigger.channelId,\n      seconds: userFacingTrigger.seconds,\n      repeats: userFacingTrigger.repeats ?? false,\n    };\n  } else if (isCalendarTrigger(userFacingTrigger)) {\n    const { repeats, ...calendarTrigger } = userFacingTrigger;\n    return { type: 'calendar', value: calendarTrigger, repeats };\n  } else {\n    return Platform.select({\n      default: null, // There's no notion of channels on platforms other than Android.\n      android: { type: 'channel', channelId: userFacingTrigger.channelId },\n    });\n  }\n}\n\nfunction isCalendarTrigger(\n  trigger: CalendarTriggerInput | ChannelAwareTriggerInput\n): trigger is CalendarTriggerInput {\n  const { channelId, ...triggerWithoutChannelId } = trigger;\n  return Object.keys(triggerWithoutChannelId).length > 0;\n}\n\nfunction isDateTrigger(\n  trigger:\n    | DateTriggerInput\n    | WeeklyTriggerInput\n    | DailyTriggerInput\n    | CalendarTriggerInput\n    | TimeIntervalTriggerInput\n): trigger is DateTriggerInput {\n  return (\n    trigger instanceof Date ||\n    typeof trigger === 'number' ||\n    (typeof trigger === 'object' && 'date' in trigger)\n  );\n}\n\nfunction parseDateTrigger(trigger: DateTriggerInput): NativeNotificationTriggerInput {\n  if (trigger instanceof Date || typeof trigger === 'number') {\n    return { type: 'date', timestamp: toTimestamp(trigger) };\n  }\n  return { type: 'date', timestamp: toTimestamp(trigger.date), channelId: trigger.channelId };\n}\n\nfunction toTimestamp(date: number | Date) {\n  if (date instanceof Date) {\n    return date.getTime();\n  }\n  return date;\n}\n\nfunction isDailyTriggerInput(\n  trigger: SchedulableNotificationTriggerInput\n): trigger is DailyTriggerInput {\n  if (typeof trigger !== 'object') return false;\n  const { channelId, ...triggerWithoutChannelId } = trigger as DailyTriggerInput;\n  return (\n    Object.keys(triggerWithoutChannelId).length ===\n      DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 &&\n    DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(\n      (component) => component in triggerWithoutChannelId\n    ) &&\n    'repeats' in triggerWithoutChannelId &&\n    triggerWithoutChannelId.repeats === true\n  );\n}\n\nfunction isWeeklyTriggerInput(\n  trigger: SchedulableNotificationTriggerInput\n): trigger is WeeklyTriggerInput {\n  if (typeof trigger !== 'object') return false;\n  const { channelId, ...triggerWithoutChannelId } = trigger as WeeklyTriggerInput;\n  return (\n    Object.keys(triggerWithoutChannelId).length ===\n      WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 &&\n    WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(\n      (component) => component in triggerWithoutChannelId\n    ) &&\n    'repeats' in triggerWithoutChannelId &&\n    triggerWithoutChannelId.repeats === true\n  );\n}\n\nfunction isYearlyTriggerInput(\n  trigger: SchedulableNotificationTriggerInput\n): trigger is YearlyTriggerInput {\n  if (typeof trigger !== 'object') return false;\n  const { channelId, ...triggerWithoutChannelId } = trigger as YearlyTriggerInput;\n  return (\n    Object.keys(triggerWithoutChannelId).length ===\n      YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 &&\n    YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(\n      (component) => component in triggerWithoutChannelId\n    ) &&\n    'repeats' in triggerWithoutChannelId &&\n    triggerWithoutChannelId.repeats === true\n  );\n}\n\nfunction isSecondsPropertyMisusedInCalendarTriggerInput(\n  trigger: TimeIntervalTriggerInput | CalendarTriggerInput\n) {\n  const { channelId, ...triggerWithoutChannelId } = trigger;\n  return (\n    // eg. { seconds: ..., repeats: ..., hour: ... }\n    ('seconds' in triggerWithoutChannelId &&\n      'repeats' in triggerWithoutChannelId &&\n      Object.keys(triggerWithoutChannelId).length > 2) ||\n    // eg. { seconds: ..., hour: ... }\n    ('seconds' in triggerWithoutChannelId &&\n      !('repeats' in triggerWithoutChannelId) &&\n      Object.keys(triggerWithoutChannelId).length > 1)\n  );\n}\n\nfunction validateDateComponentsInTrigger(\n  trigger: NonNullable<NotificationTriggerInput>,\n  components: readonly ValidTriggerDateComponents[]\n) {\n  const anyTriggerType = trigger as any;\n  components.forEach((component) => {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const { day, month } = anyTriggerType;\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  });\n}\n\n/**\n * Determines the number of days in the given month (or January if omitted).\n * If year is specified, it will include leap year logic, else it will always assume a leap year\n */\nfunction daysInMonth(month: number = 0, year?: number) {\n  return new Date(year ?? 2000, month + 1, 0).getDate();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
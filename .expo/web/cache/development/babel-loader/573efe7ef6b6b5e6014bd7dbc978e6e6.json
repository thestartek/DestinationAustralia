{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"index\", \"total\", \"siblings\", \"style\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar CardContent = function CardContent(_ref) {\n  var index = _ref.index,\n    total = _ref.total,\n    siblings = _ref.siblings,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var cover = 'withInternalTheme(CardCover)';\n  var title = 'withInternalTheme(CardTitle)';\n  var contentStyle, prev, next;\n  if (typeof index === 'number' && siblings) {\n    prev = siblings[index - 1];\n    next = siblings[index + 1];\n  }\n  if (prev === cover && next === cover || prev === title && next === title || total === 1) {\n    contentStyle = styles.only;\n  } else if (index === 0) {\n    if (next === cover || next === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.first;\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    if (prev === cover || prev === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.last;\n    }\n  } else if (prev === cover || prev === title) {\n    contentStyle = styles.first;\n  } else if (next === cover || next === title) {\n    contentStyle = styles.last;\n  }\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, contentStyle, style]\n  }));\n};\nCardContent.displayName = 'Card.Content';\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16\n  },\n  first: {\n    paddingTop: 16\n  },\n  last: {\n    paddingBottom: 16\n  },\n  only: {\n    paddingVertical: 16\n  }\n});\nexport default CardContent;","map":{"version":3,"sources":["CardContent.tsx"],"names":["React","CardContent","index","total","siblings","style","rest","cover","title","contentStyle","prev","next","styles","only","first","last","container","displayName","StyleSheet","create","paddingHorizontal","paddingTop","paddingBottom","paddingVertical"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAkD9B,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAG,IAAA,EAAuD;EAAtD,IAAEC,KAAK,GAA0C,IAAA,CAA/CA,KAAK;IAAEC,KAAK,GAAmC,IAAA,CAAxCA,KAAK;IAAEC,QAAQ,GAAyB,IAAA,CAAjCA,QAAQ;IAAEC,KAAK,GAAkB,IAAA,CAAvBA,KAAK;IAAKC,IAAAA,4BAAa,IAAA;EACpE,IAAMC,KAAK,GAAG,8BAA8B;EAC5C,IAAMC,KAAK,GAAG,8BAA8B;EAE5C,IAAIC,YAAY,EAAEC,IAAI,EAAEC,IAAI;EAE5B,IAAI,OAAOT,KAAK,KAAK,QAAQ,IAAIE,QAAQ,EAAE;IACzCM,IAAI,GAAGN,QAAQ,CAACF,KAAK,GAAG,CAAC,CAAC;IAC1BS,IAAI,GAAGP,QAAQ,CAACF,KAAK,GAAG,CAAC,CAAC;EAC5B;EAEA,IACGQ,IAAI,KAAKH,KAAK,IAAII,IAAI,KAAKJ,KAAK,IAChCG,IAAI,KAAKF,KAAK,IAAIG,IAAI,KAAKH,KAAM,IAClCL,KAAK,KAAK,CAAC,EACX;IACAM,YAAY,GAAGG,MAAM,CAACC,IAAI;EAC5B,CAAC,MAAM,IAAIX,KAAK,KAAK,CAAC,EAAE;IACtB,IAAIS,IAAI,KAAKJ,KAAK,IAAII,IAAI,KAAKH,KAAK,EAAE;MACpCC,YAAY,GAAGG,MAAM,CAACC,IAAI;IAC5B,CAAC,MAAM;MACLJ,YAAY,GAAGG,MAAM,CAACE,KAAK;IAC7B;EACF,CAAC,MAAM,IAAI,OAAOX,KAAK,KAAK,QAAQ,IAAID,KAAK,KAAKC,KAAK,GAAG,CAAC,EAAE;IAC3D,IAAIO,IAAI,KAAKH,KAAK,IAAIG,IAAI,KAAKF,KAAK,EAAE;MACpCC,YAAY,GAAGG,MAAM,CAACC,IAAI;IAC5B,CAAC,MAAM;MACLJ,YAAY,GAAGG,MAAM,CAACG,IAAI;IAC5B;EACF,CAAC,MAAM,IAAIL,IAAI,KAAKH,KAAK,IAAIG,IAAI,KAAKF,KAAK,EAAE;IAC3CC,YAAY,GAAGG,MAAM,CAACE,KAAK;EAC7B,CAAC,MAAM,IAAIH,IAAI,KAAKJ,KAAK,IAAII,IAAI,KAAKH,KAAK,EAAE;IAC3CC,YAAY,GAAGG,MAAM,CAACG,IAAI;EAC5B;EAEA,OAAO,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,QAAA,CAAA,CAAA,CAAA,EAAKT,IAAI,EAAA;IAAE,KAAK,EAAE,CAACM,MAAM,CAACI,SAAS,EAAEP,YAAY,EAAEJ,KAAK;EAAE,CAAA,CAAA,CAAG;AAC3E,CAAC;AAEDJ,WAAW,CAACgB,WAAW,GAAG,cAAc;AAExC,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,iBAAiB,EAAE;EACrB,CAAC;EACDN,KAAK,EAAE;IACLO,UAAU,EAAE;EACd,CAAC;EACDN,IAAI,EAAE;IACJO,aAAa,EAAE;EACjB,CAAC;EACDT,IAAI,EAAE;IACJU,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAetB,WAAW","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Items inside the `Card.Content`.\n   */\n  children: React.ReactNode;\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  /**\n   * @internal\n   */\n  siblings?: Array<string>;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show content inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/card-content-example.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Title, Paragraph } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardContent = ({ index, total, siblings, style, ...rest }: Props) => {\n  const cover = 'withInternalTheme(CardCover)';\n  const title = 'withInternalTheme(CardTitle)';\n\n  let contentStyle, prev, next;\n\n  if (typeof index === 'number' && siblings) {\n    prev = siblings[index - 1];\n    next = siblings[index + 1];\n  }\n\n  if (\n    (prev === cover && next === cover) ||\n    (prev === title && next === title) ||\n    total === 1\n  ) {\n    contentStyle = styles.only;\n  } else if (index === 0) {\n    if (next === cover || next === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.first;\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    if (prev === cover || prev === title) {\n      contentStyle = styles.only;\n    } else {\n      contentStyle = styles.last;\n    }\n  } else if (prev === cover || prev === title) {\n    contentStyle = styles.first;\n  } else if (next === cover || next === title) {\n    contentStyle = styles.last;\n  }\n\n  return <View {...rest} style={[styles.container, contentStyle, style]} />;\n};\n\nCardContent.displayName = 'Card.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n  },\n  first: {\n    paddingTop: 16,\n  },\n  last: {\n    paddingBottom: 16,\n  },\n  only: {\n    paddingVertical: 16,\n  },\n});\n\nexport default CardContent;\n"]},"metadata":{},"sourceType":"module"}
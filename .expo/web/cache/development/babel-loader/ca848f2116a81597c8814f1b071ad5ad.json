{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"./../Firebase\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ResetPassScreen = function ResetPassScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var resetPassword = function resetPassword() {\n    sendPasswordResetEmail(auth, email).then(function () {\n      Alert.alert(\"Password reset email sent! Please check your email for details\");\n      navigation.goBack();\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      Alert.alert(errorCode);\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.logoContainer,\n        children: _jsx(Image, {\n          source: require(\"./../assets/logoSquare.png\"),\n          style: {\n            height: 65,\n            width: 65,\n            margin: 30\n          }\n        })\n      }), _jsx(View, {\n        children: _jsxs(Text, {\n          style: {\n            fontSize: 16,\n            marginTop: 20\n          },\n          children: [\" \", \"Receive an email link\", \" \"]\n        })\n      }), _jsx(View, {\n        children: _jsx(TextInput, {\n          placeholder: \"Your email address\",\n          autoCapitalize: \"none\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          style: styles.textInput\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: !email ? _jsx(View, {\n          style: [styles.button, styles.buttonDisabled],\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Reset password\"\n          })\n        }) : _jsx(TouchableOpacity, {\n          onPress: resetPassword,\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Reset password\"\n          })\n        })\n      })]\n    })\n  });\n};\n\nexport default ResetPassScreen;\nvar styles = StyleSheet.create({\n  logoContainer: {\n    alignItems: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"lightgrey\",\n    marginTop: 10,\n    marginBottom: 5,\n    width: 300\n  },\n  buttonContainer: {\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 30\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"100%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonDisabled: {\n    backgroundColor: 'darkgrey'\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","SafeAreaView","sendPasswordResetEmail","ResetPassScreen","navigation","email","setEmail","resetPassword","then","Alert","alert","goBack","catch","error","errorCode","code","errorMessage","message","styles","container","logoContainer","require","height","width","margin","fontSize","marginTop","text","textInput","buttonContainer","button","buttonDisabled","buttonText","StyleSheet","create","alignItems","flex","justifyContent","backgroundColor","padding","borderRadius","borderWidth","borderColor","marginBottom","color","fontWeight"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/screens/ResetPassScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { auth } from \"./../Firebase\";\nimport { Alert } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\n\nconst ResetPassScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n\n  const resetPassword = () => {\n    sendPasswordResetEmail(auth, email)\n      .then(() => {\n        Alert.alert(\n          \"Password reset email sent! Please check your email for details\"\n        );\n        navigation.goBack();\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        Alert.alert(errorCode);\n      });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        <View style={styles.logoContainer}>\n          <Image\n            source={require(\"./../assets/logoSquare.png\")}\n            style={{ height: 65, width: 65, margin: 30 }}\n          />\n        </View>\n\n        <View>\n          <Text style={{ fontSize: 16, marginTop: 20 }}>\n            {\" \"}\n            Receive an email link{\" \"}\n          </Text>\n        </View>\n\n        <View>\n          <TextInput\n            placeholder=\"Your email address\"\n            autoCapitalize=\"none\"\n            //autoFocus={true}\n            value={email}\n            onChangeText={(text) => setEmail(text)}\n            style={styles.textInput}\n          />\n        </View>\n\n        <View style={styles.buttonContainer}>\n          {!email ? (\n            <View style={[styles.button, styles.buttonDisabled]}>\n              <Text style={styles.buttonText}>Reset password</Text>\n            </View>\n          ) : (\n            <TouchableOpacity onPress={resetPassword} style={styles.button}>\n              <Text style={styles.buttonText}>Reset password</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default ResetPassScreen;\n\nconst styles = StyleSheet.create({\n  logoContainer: {\n    alignItems: \"center\",\n  },\n\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"lightgrey\",\n    marginTop: 10,\n    marginBottom: 5,\n    width: 300,\n  },\n  buttonContainer: {\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 30,\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"100%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonDisabled: {\n    backgroundColor: 'darkgrey'\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../core/theming\";\nimport Icon, { isEqualIcon, isValidIcon } from \"./Icon\";\nvar CrossFadeIcon = function CrossFadeIcon(_ref) {\n  var color = _ref.color,\n    size = _ref.size,\n    source = _ref.source,\n    theme = _ref.theme;\n  var _React$useState = React.useState(function () {\n      return source;\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    currentIcon = _React$useState2[0],\n    setCurrentIcon = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    previousIcon = _React$useState4[0],\n    setPreviousIcon = _React$useState4[1];\n  var _React$useRef = React.useRef(new Animated.Value(1)),\n    fade = _React$useRef.current;\n  var scale = theme.animation.scale;\n  if (currentIcon !== source) {\n    setPreviousIcon(function () {\n      return currentIcon;\n    });\n    setCurrentIcon(function () {\n      return source;\n    });\n  }\n  React.useEffect(function () {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n  var opacityPrev = fade;\n  var opacityNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }) : 1;\n  var rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg']\n  });\n  var rotateNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  }) : '0deg';\n  return React.createElement(View, {\n    style: [styles.content, {\n      height: size,\n      width: size\n    }]\n  }, previousIcon ? React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityPrev,\n      transform: [{\n        rotate: rotatePrev\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: previousIcon,\n    size: size,\n    color: color\n  })) : null, React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityNext,\n      transform: [{\n        rotate: rotateNext\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: currentIcon,\n    size: size,\n    color: color\n  })));\n};\nexport default withInternalTheme(CrossFadeIcon);\nvar styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["React","withInternalTheme","Icon","isEqualIcon","isValidIcon","CrossFadeIcon","color","size","source","theme","currentIcon","setCurrentIcon","useState","previousIcon","setPreviousIcon","current","fade","useRef","Animated","Value","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","styles","content","height","width","icon","opacity","transform","rotate","StyleSheet","create","alignItems","justifyContent","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\nimport Icon, { IconSource, isEqualIcon, isValidIcon } from './Icon';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withInternalTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
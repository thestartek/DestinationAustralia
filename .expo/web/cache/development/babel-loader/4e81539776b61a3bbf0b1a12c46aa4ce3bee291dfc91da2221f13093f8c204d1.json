{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { isPropertySet, isArray, isBoolean, isObject, isString, isUndefined, isValidUrl } from \"./common\";\nexport function validateAdRequestOptions(options) {\n  var out = {};\n  if (isUndefined(options)) {\n    return out;\n  }\n  if (!isObject(options)) {\n    throw new Error(\"'options' expected an object value\");\n  }\n  if (isPropertySet(options, 'requestNonPersonalizedAdsOnly')) {\n    if (!isBoolean(options.requestNonPersonalizedAdsOnly)) {\n      throw new Error(\"'options.requestNonPersonalizedAdsOnly' expected a boolean value\");\n    }\n    out.requestNonPersonalizedAdsOnly = options.requestNonPersonalizedAdsOnly;\n  }\n  if (options.networkExtras) {\n    if (!isObject(options.networkExtras)) {\n      throw new Error(\"'options.networkExtras' expected an object of key/value pairs\");\n    }\n    Object.entries(options.networkExtras).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      if (!isString(value)) {\n        throw new Error(\"'options.networkExtras' expected a string value for object key \\\"\" + key + \"\\\"\");\n      }\n    });\n    out.networkExtras = options.networkExtras;\n  }\n  if (options.keywords) {\n    if (!isArray(options.keywords)) {\n      throw new Error(\"'options.keywords' expected an array containing string values\");\n    }\n    for (var i = 0; i < options.keywords.length; i++) {\n      var keyword = options.keywords[i];\n      if (!isString(keyword)) {\n        throw new Error(\"'options.keywords' expected an array containing string values\");\n      }\n    }\n    out.keywords = options.keywords;\n  }\n  if (options.contentUrl) {\n    if (!isString(options.contentUrl)) {\n      throw new Error(\"'options.contentUrl' expected a string value\");\n    }\n    if (!isValidUrl(options.contentUrl)) {\n      throw new Error(\"'options.contentUrl' expected a valid HTTP or HTTPS url.\");\n    }\n    if (options.contentUrl.length > 512) {\n      throw new Error(\"'options.contentUrl' maximum length of a content URL is 512 characters.\");\n    }\n    out.contentUrl = options.contentUrl;\n  }\n  if (options.requestAgent) {\n    if (!isString(options.requestAgent)) {\n      throw new Error(\"'options.requestAgent' expected a string value\");\n    }\n    out.requestAgent = options.requestAgent;\n  }\n  if (options.serverSideVerificationOptions) {\n    if (!isObject(options.serverSideVerificationOptions)) {\n      throw new Error(\"'options.serverSideVerificationOptions' expected an object of key/value pairs\");\n    }\n    var ssvOptions = options.serverSideVerificationOptions;\n    if (ssvOptions.userId && !isString(ssvOptions.userId)) {\n      throw new Error(\"'options.serverSideVerificationOptions.userId' expected a string value\");\n    }\n    if (ssvOptions.customData && !isString(ssvOptions.customData)) {\n      throw new Error(\"'options.serverSideVerificationOptions.customData' expected a string value\");\n    }\n    out.serverSideVerificationOptions = options.serverSideVerificationOptions;\n  }\n  if (options.customTargeting) {\n    if (!isObject(options.customTargeting)) {\n      throw new Error(\"'options.customTargeting' expected an object of key/value pairs\");\n    }\n    out.customTargeting = options.customTargeting;\n  }\n  if (options.publisherProvidedId) {\n    if (!isString(options.publisherProvidedId)) {\n      throw new Error(\"'options.publisherProvidedId' expected a string value\");\n    }\n    out.publisherProvidedId = options.publisherProvidedId;\n  }\n  return out;\n}","map":{"version":3,"mappings":"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","names":["isPropertySet","isArray","isBoolean","isObject","isString","isUndefined","isValidUrl","validateAdRequestOptions","options","out","Error","requestNonPersonalizedAdsOnly","networkExtras","Object","entries","forEach","_ref","key","value","keywords","i","length","keyword","contentUrl","requestAgent","serverSideVerificationOptions","ssvOptions","userId","customData","customTargeting","publisherProvidedId"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/node_modules/react-native-google-mobile-ads/src/validateAdRequestOptions.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  isPropertySet,\n  isArray,\n  isBoolean,\n  isObject,\n  isString,\n  isUndefined,\n  isValidUrl,\n} from './common';\nimport { RequestOptions } from './types/RequestOptions';\n\nexport function validateAdRequestOptions(options?: RequestOptions) {\n  const out: RequestOptions = {};\n\n  if (isUndefined(options)) {\n    return out;\n  }\n\n  if (!isObject(options)) {\n    throw new Error(\"'options' expected an object value\");\n  }\n\n  if (isPropertySet(options, 'requestNonPersonalizedAdsOnly')) {\n    if (!isBoolean(options.requestNonPersonalizedAdsOnly)) {\n      throw new Error(\"'options.requestNonPersonalizedAdsOnly' expected a boolean value\");\n    }\n\n    out.requestNonPersonalizedAdsOnly = options.requestNonPersonalizedAdsOnly;\n  }\n\n  if (options.networkExtras) {\n    if (!isObject(options.networkExtras)) {\n      throw new Error(\"'options.networkExtras' expected an object of key/value pairs\");\n    }\n\n    Object.entries(options.networkExtras).forEach(([key, value]) => {\n      if (!isString(value)) {\n        throw new Error(`'options.networkExtras' expected a string value for object key \"${key}\"`);\n      }\n    });\n\n    out.networkExtras = options.networkExtras;\n  }\n\n  if (options.keywords) {\n    if (!isArray(options.keywords)) {\n      throw new Error(\"'options.keywords' expected an array containing string values\");\n    }\n\n    for (let i = 0; i < options.keywords.length; i++) {\n      const keyword = options.keywords[i];\n\n      if (!isString(keyword)) {\n        throw new Error(\"'options.keywords' expected an array containing string values\");\n      }\n    }\n\n    out.keywords = options.keywords;\n  }\n\n  if (options.contentUrl) {\n    if (!isString(options.contentUrl)) {\n      throw new Error(\"'options.contentUrl' expected a string value\");\n    }\n\n    if (!isValidUrl(options.contentUrl)) {\n      throw new Error(\"'options.contentUrl' expected a valid HTTP or HTTPS url.\");\n    }\n\n    if (options.contentUrl.length > 512) {\n      throw new Error(\"'options.contentUrl' maximum length of a content URL is 512 characters.\");\n    }\n\n    out.contentUrl = options.contentUrl;\n  }\n\n  if (options.requestAgent) {\n    if (!isString(options.requestAgent)) {\n      throw new Error(\"'options.requestAgent' expected a string value\");\n    }\n\n    out.requestAgent = options.requestAgent;\n  }\n\n  if (options.serverSideVerificationOptions) {\n    if (!isObject(options.serverSideVerificationOptions)) {\n      throw new Error(\n        \"'options.serverSideVerificationOptions' expected an object of key/value pairs\",\n      );\n    }\n\n    const ssvOptions = options.serverSideVerificationOptions;\n\n    if (ssvOptions.userId && !isString(ssvOptions.userId)) {\n      throw new Error(\"'options.serverSideVerificationOptions.userId' expected a string value\");\n    }\n\n    if (ssvOptions.customData && !isString(ssvOptions.customData)) {\n      throw new Error(\"'options.serverSideVerificationOptions.customData' expected a string value\");\n    }\n\n    out.serverSideVerificationOptions = options.serverSideVerificationOptions;\n  }\n\n  if (options.customTargeting) {\n    if (!isObject(options.customTargeting)) {\n      throw new Error(\"'options.customTargeting' expected an object of key/value pairs\");\n    }\n    out.customTargeting = options.customTargeting;\n  }\n\n  if (options.publisherProvidedId) {\n    if (!isString(options.publisherProvidedId)) {\n      throw new Error(\"'options.publisherProvidedId' expected a string value\");\n    }\n    out.publisherProvidedId = options.publisherProvidedId;\n  }\n\n  return out;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
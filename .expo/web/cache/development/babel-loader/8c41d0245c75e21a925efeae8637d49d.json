{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../home/Header.js\";\nimport Post from \"./Post.js\";\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport { db, auth } from \"../../Firebase\";\nimport { Button, Divider } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PostScreen = function PostScreen(_ref) {\n  var isLoading = _ref.isLoading,\n    navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var user = auth.currentUser;\n  useEffect(function () {\n    var unsub = onSnapshot(query(collection(db, \"posts\"), orderBy(\"created\", \"desc\")), orderBy(\"caption\"), function (snapshot) {\n      setPosts(snapshot.docs.map(function (post) {\n        return _objectSpread({\n          id: post.id\n        }, post.data());\n      }));\n      if (loading) {\n        setLoading(false);\n      }\n    });\n    return unsub;\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Divider, {\n      width: 5\n    }), _jsx(ScrollView, {\n      children: posts.map(function (post, index) {\n        return _jsx(Post, {\n          post: post,\n          navigation: navigation\n        }, index);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1\n  },\n  createPostButton: {\n    height: 40,\n    backgroundColor: \"#1267E9\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  postButtonText: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\",\n    fontSize: 18\n  }\n});\nexport default PostScreen;","map":{"version":3,"names":["React","useEffect","useState","Header","Post","collection","onSnapshot","orderBy","query","db","auth","Button","Divider","PostScreen","isLoading","navigation","posts","setPosts","loading","setLoading","user","currentUser","unsub","snapshot","docs","map","post","id","data","styles","container","index","StyleSheet","create","backgroundColor","flex","createPostButton","height","justifyContent","alignItems","postButtonText","color","fontSize"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/components/post/PostsScreen.js"],"sourcesContent":["import { ScrollView, StyleSheet, View, Text } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../home/Header.js\";\nimport Post from \"./Post.js\";\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport { db, auth } from \"../../Firebase\";\nimport { Button, Divider } from \"react-native-paper\";\n\n\nconst PostScreen = ({ isLoading, navigation }) => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const user = auth.currentUser;\n\n  useEffect(() => {\n    const unsub = onSnapshot(\n      query(collection(db, \"posts\"), orderBy(\"created\", \"desc\")),\n      orderBy(\"caption\"),\n      (snapshot) => {\n        setPosts(\n          snapshot.docs.map((post) => ({ id: post.id, ...post.data() }))\n        );\n        if (loading) {\n          setLoading(false);\n        }\n      }\n    );\n    return unsub;\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Divider width={5} />\n      {/* <CreatePost navigation={navigation} /> */}\n      <ScrollView>\n        {posts.map((post, index) => (\n          <Post post={post} key={index} navigation={navigation} />\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\n// const CreatePost = ({ navigation }) => {\n//   return (\n//     <TouchableOpacity\n//       onPress={() => {\n//         navigation.push(\"New post\");\n//       }}\n//     >\n//       <View style={styles.createPostButton}>\n//         <Text style={styles.postButtonText}>Create a post</Text>\n//       </View>\n//     </TouchableOpacity>\n//   );\n// };\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    flex: 1,\n  },\n  createPostButton: {\n    height: 40,\n    backgroundColor: \"#1267E9\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  postButtonText: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\",\n    fontSize: 18,\n  },\n});\nexport default PostScreen;\n"],"mappings":";;;;;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM;AACb,OAAOC,IAAI;AACX,SAASC,UAAU,EAAEC,UAAU,EAAEC,OAAO,EAAEC,KAAK,QAAQ,oBAAoB;AAC3E,SAASC,EAAE,EAAEC,IAAI;AACjB,SAASC,MAAM,EAAEC,OAAO,QAAQ,oBAAoB;AAAC;AAAA;AAGrD,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAAkC;EAAA,IAA5BC,SAAS,QAATA,SAAS;IAAEC,UAAU,QAAVA,UAAU;EACzC,gBAA0Bb,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/Bc,KAAK;IAAEC,QAAQ;EACtB,iBAA8Bf,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCgB,OAAO;IAAEC,UAAU;EAC1B,IAAMC,IAAI,GAAGV,IAAI,CAACW,WAAW;EAE7BpB,SAAS,CAAC,YAAM;IACd,IAAMqB,KAAK,GAAGhB,UAAU,CACtBE,KAAK,CAACH,UAAU,CAACI,EAAE,EAAE,OAAO,CAAC,EAAEF,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,EAC1DA,OAAO,CAAC,SAAS,CAAC,EAClB,UAACgB,QAAQ,EAAK;MACZN,QAAQ,CACNM,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,UAACC,IAAI;QAAA;UAAQC,EAAE,EAAED,IAAI,CAACC;QAAE,GAAKD,IAAI,CAACE,IAAI,EAAE;MAAA,CAAG,CAAC,CAC/D;MACD,IAAIV,OAAO,EAAE;QACXC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CACF;IACD,OAAOG,KAAK;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,MAAC,IAAI;IAAC,KAAK,EAAEO,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,OAAO;MAAC,KAAK,EAAE;IAAE,EAAG,EAErB,KAAC,UAAU;MAAA,UACRd,KAAK,CAACS,GAAG,CAAC,UAACC,IAAI,EAAEK,KAAK;QAAA,OACrB,KAAC,IAAI;UAAC,IAAI,EAAEL,IAAK;UAAa,UAAU,EAAEX;QAAW,GAA9BgB,KAAK,CAA4B;MAAA,CACzD;IAAC,EACS;EAAA,EACR;AAEX,CAAC;AAgBD,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,eAAe,EAAE,OAAO;IACxBC,IAAI,EAAE;EACR,CAAC;EACDC,gBAAgB,EAAE;IAChBC,MAAM,EAAE,EAAE;IACVH,eAAe,EAAE,SAAS;IAC1BI,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDC,cAAc,EAAE;IACdF,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBE,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AACF,eAAe7B,UAAU"},"metadata":{},"sourceType":"module"}
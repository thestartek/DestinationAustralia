{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, createContext } from \"react\";\nimport TabNavigator from \"./TabNavigator\";\nimport LoginStack from \"./LoginStack\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../Firebase\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginContex = createContext();\nvar LoadingIndicator = function LoadingIndicator() {\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#1267E9\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: [_jsx(Image, {\n      source: require(\"../assets/appIcon_transparent.png\"),\n      style: {\n        width: 140,\n        height: 140\n      }\n    }), _jsx(ActivityIndicator, {\n      color: \"white\",\n      size: \"large\",\n      style: {\n        color: \"white\",\n        size: \"large\"\n      }\n    })]\n  });\n};\nvar AuthNavigation = function AuthNavigation(_ref) {\n  var Children = _ref.Children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentUser = _useState4[0],\n    setCurrentUser = _useState4[1];\n  var useHandler = function useHandler(user) {\n    user ? [setCurrentUser(user), setLoading(false)] : [setCurrentUser(null), setLoading(false)];\n  };\n  useEffect(function () {\n    setLoading(true);\n    onAuthStateChanged(auth, function (user) {\n      return useHandler(user);\n    });\n  }, []);\n  return loading ? _jsx(LoadingIndicator, {}) : currentUser ? _jsx(TabNavigator, {}) : _jsx(LoginStack, {});\n};\nexport default AuthNavigation;","map":{"version":3,"names":["React","useEffect","useState","createContext","TabNavigator","LoginStack","onAuthStateChanged","auth","LoginContex","LoadingIndicator","flex","backgroundColor","justifyContent","alignItems","require","width","height","color","size","AuthNavigation","Children","loading","setLoading","currentUser","setCurrentUser","useHandler","user"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/navigation/AuthNavigation.js"],"sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\nimport TabNavigator from \"./TabNavigator\";\nimport LoginStack from \"./LoginStack\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../Firebase\";\nimport { ActivityIndicator, View, Image } from \"react-native\";\n\nconst LoginContex = createContext();\n\nconst LoadingIndicator = () => {\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: \"#1267E9\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Image\n        source={require(\"../assets/appIcon_transparent.png\")}\n        style={{ width: 140, height: 140 }}\n      />\n      <ActivityIndicator\n        color=\"white\"\n        size=\"large\"\n        style={{ color: \"white\", size: \"large\" }}\n      />\n    </View>\n  );\n};\n\nconst AuthNavigation = ({ Children }) => {\n  const [loading, setLoading] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const useHandler = (user) => {\n    user\n      ? [setCurrentUser(user), setLoading(false)]\n      : [setCurrentUser(null), setLoading(false)];\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    onAuthStateChanged(auth, (user) => useHandler(user));\n  }, []);\n\n  return loading ? (\n    <LoadingIndicator />\n  ) : currentUser ? (\n    <TabNavigator />\n  ) : (\n    <LoginStack />\n  );\n\n  // <LoginContex.Provider value={{loggedIn, setLoggedIn}}>\n  //     {Children}\n  // </LoginContex.Provider>\n};\n\nexport default AuthNavigation;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AACjE,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,IAAI;AAAsB;AAAA;AAAA;AAAA;AAAA;AAGnC,IAAMC,WAAW,GAAGL,aAAa,EAAE;AAEnC,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;EAC7B,OACE,MAAC,IAAI;IACH,KAAK,EAAE;MACLC,IAAI,EAAE,CAAC;MACPC,eAAe,EAAE,SAAS;MAC1BC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IACd,CAAE;IAAA,WAEF,KAAC,KAAK;MACJ,MAAM,EAAEC,OAAO,qCAAsC;MACrD,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IAAE,EACnC,EACF,KAAC,iBAAiB;MAChB,KAAK,EAAC,OAAO;MACb,IAAI,EAAC,OAAO;MACZ,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAQ;IAAE,EACzC;EAAA,EACG;AAEX,CAAC;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAc,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EAChC,gBAA8BlB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCmB,OAAO;IAAEC,UAAU;EAE1B,iBAAsCpB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CqB,WAAW;IAAEC,cAAc;EAElC,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,IAAI,EAAK;IAC3BA,IAAI,GACA,CAACF,cAAc,CAACE,IAAI,CAAC,EAAEJ,UAAU,CAAC,KAAK,CAAC,CAAC,GACzC,CAACE,cAAc,CAAC,IAAI,CAAC,EAAEF,UAAU,CAAC,KAAK,CAAC,CAAC;EAC/C,CAAC;EAEDrB,SAAS,CAAC,YAAM;IACdqB,UAAU,CAAC,IAAI,CAAC;IAChBhB,kBAAkB,CAACC,IAAI,EAAE,UAACmB,IAAI;MAAA,OAAKD,UAAU,CAACC,IAAI,CAAC;IAAA,EAAC;EACtD,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOL,OAAO,GACZ,KAAC,gBAAgB,KAAG,GAClBE,WAAW,GACb,KAAC,YAAY,KAAG,GAEhB,KAAC,UAAU,KACZ;AAKH,CAAC;AAED,eAAeJ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
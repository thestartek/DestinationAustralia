{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { Module } from \"./internal\";\nimport { validateAdRequestConfiguration } from \"./validateAdRequestConfiguration\";\nimport { version } from \"./version\";\nvar namespace = 'google_mobile_ads';\nvar nativeModuleName = ['RNGoogleMobileAdsModule', 'RNGoogleMobileAdsAppOpenModule', 'RNGoogleMobileAdsInterstitialModule', 'RNGoogleMobileAdsRewardedModule', 'RNGoogleMobileAdsRewardedInterstitialModule'];\nvar MobileAdsModule = function (_Module) {\n  _inherits(MobileAdsModule, _Module);\n  var _super = _createSuper(MobileAdsModule);\n  function MobileAdsModule(app, config) {\n    var _this;\n    _classCallCheck(this, MobileAdsModule);\n    _this = _super.call(this, app, config);\n    _this.emitter.addListener('google_mobile_ads_app_open_event', function (event) {\n      _this.emitter.emit(\"google_mobile_ads_app_open_event:\" + event.adUnitId + \":\" + event.requestId, event);\n    });\n    _this.emitter.addListener('google_mobile_ads_interstitial_event', function (event) {\n      _this.emitter.emit(\"google_mobile_ads_interstitial_event:\" + event.adUnitId + \":\" + event.requestId, event);\n    });\n    _this.emitter.addListener('google_mobile_ads_rewarded_event', function (event) {\n      _this.emitter.emit(\"google_mobile_ads_rewarded_event:\" + event.adUnitId + \":\" + event.requestId, event);\n    });\n    _this.emitter.addListener('google_mobile_ads_rewarded_interstitial_event', function (event) {\n      _this.emitter.emit(\"google_mobile_ads_rewarded_interstitial_event:\" + event.adUnitId + \":\" + event.requestId, event);\n    });\n    return _this;\n  }\n  _createClass(MobileAdsModule, [{\n    key: \"initialize\",\n    value: function initialize() {\n      return this.native.initialize();\n    }\n  }, {\n    key: \"setRequestConfiguration\",\n    value: function setRequestConfiguration(requestConfiguration) {\n      var config;\n      try {\n        config = validateAdRequestConfiguration(requestConfiguration);\n      } catch (e) {\n        if (e instanceof Error) {\n          throw new Error(\"googleMobileAds.setRequestConfiguration(*) \" + e.message);\n        }\n      }\n      return this.native.setRequestConfiguration(config);\n    }\n  }, {\n    key: \"openAdInspector\",\n    value: function openAdInspector() {\n      return this.native.openAdInspector();\n    }\n  }]);\n  return MobileAdsModule;\n}(Module);\nvar MobileAdsInstance = new MobileAdsModule({\n  name: 'AppName'\n}, {\n  version: version,\n  namespace: namespace,\n  nativeModuleName: nativeModuleName,\n  nativeEvents: ['google_mobile_ads_app_open_event', 'google_mobile_ads_interstitial_event', 'google_mobile_ads_rewarded_event', 'google_mobile_ads_rewarded_interstitial_event']\n});\nexport var MobileAds = function MobileAds() {\n  return MobileAdsInstance;\n};\nexport default MobileAds;","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,MAAM;AACf,SAASC,8BAA8B;AACvC,SAASC,OAAO;AAKhB,IAAMC,SAAS,GAAG,mBAAmB;AAErC,IAAMC,gBAAgB,GAAG,CACvB,yBAAyB,EACzB,gCAAgC,EAChC,qCAAqC,EACrC,iCAAiC,EACjC,6CAA6C,CAC9C;AAAA,IAOKC,eAAe;EAAA;EAAA;EACnBC,yBAAYC,GAAQ,EAAEC,MAAc,EAAE;IAAA;IAAA;IACpC,0BAAMD,GAAG,EAAEC,MAAM;IAEjB,MAAKC,OAAO,CAACC,WAAW,CAAC,kCAAkC,EAAGC,eAAY,EAAK;MAC7E,MAAKF,OAAO,CAACG,IAAI,uCACqBD,KAAK,CAACE,QAAS,SAAGF,KAAK,CAACG,SAAU,EACtEH,KAAK,CACN;IACH,CAAC,CAAC;IAEF,MAAKF,OAAO,CAACC,WAAW,CAAC,sCAAsC,EAAGC,eAAY,EAAK;MACjF,MAAKF,OAAO,CAACG,IAAI,2CACyBD,KAAK,CAACE,QAAS,SAAGF,KAAK,CAACG,SAAU,EAC1EH,KAAK,CACN;IACH,CAAC,CAAC;IAEF,MAAKF,OAAO,CAACC,WAAW,CAAC,kCAAkC,EAAGC,eAAY,EAAK;MAC7E,MAAKF,OAAO,CAACG,IAAI,uCACqBD,KAAK,CAACE,QAAS,SAAGF,KAAK,CAACG,SAAU,EACtEH,KAAK,CACN;IACH,CAAC,CAAC;IAEF,MAAKF,OAAO,CAACC,WAAW,CAAC,+CAA+C,EAAGC,eAAY,EAAK;MAC1F,MAAKF,OAAO,CAACG,IAAI,oDACkCD,KAAK,CAACE,QAAS,SAAGF,KAAK,CAACG,SAAU,EACnFH,KAAK,CACN;IACH,CAAC,CAAC;IAAA;EACJ;EAAA;IAAA;IAAA,OAEAI,sBAAa;MACX,OAAO,IAAI,CAACC,MAAM,CAACD,UAAU,EAAE;IACjC;EAAA;IAAA;IAAA,OAEAE,iCAAwBC,oBAA0C,EAAE;MAClE,IAAIV,MAAM;MACV,IAAI;QACFA,MAAM,GAAGP,8BAA8B,CAACiB,oBAAoB,CAAC;MAC/D,CAAC,CAAC,OAAOC,CAAC,EAAE;QACV,IAAIA,CAAC,YAAYC,KAAK,EAAE;UACtB,MAAM,IAAIA,KAAK,iDAA+CD,CAAC,CAACE,OAAQ,CAAE;QAC5E;MACF;MAEA,OAAO,IAAI,CAACL,MAAM,CAACC,uBAAuB,CAACT,MAAM,CAAC;IACpD;EAAA;IAAA;IAAA,OAEAc,2BAAkB;MAChB,OAAO,IAAI,CAACN,MAAM,CAACM,eAAe,EAAE;IACtC;EAAA;EAAA;AAAA,EApD4BtB,MAAM;AAuDpC,IAAMuB,iBAAiB,GAAG,IAAIlB,eAAe,CAC3C;EAAEmB,IAAI,EAAE;AAAU,CAAC,EACnB;EACEtB,OAAO,EAAPA,OAAO;EACPC,SAAS,EAATA,SAAS;EACTC,gBAAgB,EAAhBA,gBAAgB;EAChBqB,YAAY,EAAE,CACZ,kCAAkC,EAClC,sCAAsC,EACtC,kCAAkC,EAClC,+CAA+C;AAEnD,CAAC,CACF;AAED,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;EAC7B,OAAOH,iBAAiB;AAC1B,CAAC;AAED,eAAeG,SAAS","names":["Module","validateAdRequestConfiguration","version","namespace","nativeModuleName","MobileAdsModule","constructor","app","config","emitter","addListener","event","emit","adUnitId","requestId","initialize","native","setRequestConfiguration","requestConfiguration","e","Error","message","openAdInspector","MobileAdsInstance","name","nativeEvents","MobileAds"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/node_modules/react-native-google-mobile-ads/src/MobileAds.ts"],"sourcesContent":["import { Module } from './internal';\nimport { validateAdRequestConfiguration } from './validateAdRequestConfiguration';\nimport { version } from './version';\nimport { MobileAdsModuleInterface } from './types/MobileAdsModule.interface';\nimport { RequestConfiguration } from './types/RequestConfiguration';\nimport { App, Config } from './types/Module.interface';\n\nconst namespace = 'google_mobile_ads';\n\nconst nativeModuleName = [\n  'RNGoogleMobileAdsModule',\n  'RNGoogleMobileAdsAppOpenModule',\n  'RNGoogleMobileAdsInterstitialModule',\n  'RNGoogleMobileAdsRewardedModule',\n  'RNGoogleMobileAdsRewardedInterstitialModule',\n];\n\ntype Event = {\n  adUnitId: string;\n  requestId: number;\n};\n\nclass MobileAdsModule extends Module implements MobileAdsModuleInterface {\n  constructor(app: App, config: Config) {\n    super(app, config);\n\n    this.emitter.addListener('google_mobile_ads_app_open_event', (event: Event) => {\n      this.emitter.emit(\n        `google_mobile_ads_app_open_event:${event.adUnitId}:${event.requestId}`,\n        event,\n      );\n    });\n\n    this.emitter.addListener('google_mobile_ads_interstitial_event', (event: Event) => {\n      this.emitter.emit(\n        `google_mobile_ads_interstitial_event:${event.adUnitId}:${event.requestId}`,\n        event,\n      );\n    });\n\n    this.emitter.addListener('google_mobile_ads_rewarded_event', (event: Event) => {\n      this.emitter.emit(\n        `google_mobile_ads_rewarded_event:${event.adUnitId}:${event.requestId}`,\n        event,\n      );\n    });\n\n    this.emitter.addListener('google_mobile_ads_rewarded_interstitial_event', (event: Event) => {\n      this.emitter.emit(\n        `google_mobile_ads_rewarded_interstitial_event:${event.adUnitId}:${event.requestId}`,\n        event,\n      );\n    });\n  }\n\n  initialize() {\n    return this.native.initialize();\n  }\n\n  setRequestConfiguration(requestConfiguration: RequestConfiguration) {\n    let config;\n    try {\n      config = validateAdRequestConfiguration(requestConfiguration);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw new Error(`googleMobileAds.setRequestConfiguration(*) ${e.message}`);\n      }\n    }\n\n    return this.native.setRequestConfiguration(config);\n  }\n\n  openAdInspector() {\n    return this.native.openAdInspector();\n  }\n}\n\nconst MobileAdsInstance = new MobileAdsModule(\n  { name: 'AppName' },\n  {\n    version,\n    namespace,\n    nativeModuleName,\n    nativeEvents: [\n      'google_mobile_ads_app_open_event',\n      'google_mobile_ads_interstitial_event',\n      'google_mobile_ads_rewarded_event',\n      'google_mobile_ads_rewarded_interstitial_event',\n    ],\n  },\n);\n\nexport const MobileAds = () => {\n  return MobileAdsInstance;\n};\n\nexport default MobileAds;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
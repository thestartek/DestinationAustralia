{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState, useEffect } from \"react\";\nimport Comments from \"../components/post/Comments\";\nimport { auth, db } from \"../Firebase\";\nimport { onSnapshot, doc, orderBy, collection } from \"firebase/firestore\";\nimport AddComment from \"../components/post/AddComment\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CommentsScreen = function CommentsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var user = auth.currentUser;\n  useEffect(function () {\n    var unsub = onSnapshot(collection(db, \"posts\"), orderBy(\"creatd\"), function (snapshot) {\n      setPosts(snapshot.docs.map(function (post) {\n        return _objectSpread({\n          id: post.id\n        }, post.data());\n      }));\n      if (loading) {\n        setLoading(false);\n      }\n    });\n    return unsub;\n  }, []);\n  return _jsx(View, {\n    children: _jsx(Text, {\n      style: {\n        margin: 10,\n        fontWeight: \"bold\"\n      },\n      children: \"Comments are on the way.\"\n    })\n  });\n};\nexport default CommentsScreen;","map":{"version":3,"names":["React","useState","useEffect","Comments","auth","db","onSnapshot","doc","orderBy","collection","AddComment","ScrollView","CommentsScreen","navigation","posts","setPosts","loading","setLoading","user","currentUser","unsub","snapshot","docs","map","post","id","data","margin","fontWeight"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/screens/CommentsScreen.js"],"sourcesContent":["import { View, Text } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport Comments from \"../components/post/Comments\";\nimport { auth, db } from \"../Firebase\";\nimport { onSnapshot, doc, orderBy, collection } from \"firebase/firestore\";\nimport AddComment from \"../components/post/AddComment\"\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nconst CommentsScreen = ({ navigation }) => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const user = auth.currentUser;\n\n  useEffect(() => {\n    const unsub = onSnapshot(\n      collection(db, \"posts\"),\n      orderBy(\"creatd\"),\n      (snapshot) => {\n        setPosts(\n          snapshot.docs.map((post) => ({ id: post.id, ...post.data() }))\n        );\n        if (loading) {\n          setLoading(false);\n        }\n      }\n    );\n    return unsub;\n  }, []);\n\n  return (\n    <View>\n      <Text style={{ margin: 10, fontWeight: \"bold\" }}>\n        Comments are on the way.\n      </Text>\n      {/* {posts.map((post, index) => (\n        <AddComment post={post} key={index} />\n      ))}\n      <ScrollView>\n        {posts.map((post, index) => (\n          <Comments post={post} key={index} navigation={navigation} />\n        ))}\n      </ScrollView>\n\n      <Divider /> */}\n    </View>\n  );\n};\n\nexport default CommentsScreen;\n"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ;AACf,SAASC,IAAI,EAAEC,EAAE;AACjB,SAASC,UAAU,EAAEC,GAAG,EAAEC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AACzE,OAAOC,UAAU;AACjB,SAASC,UAAU,QAAQ,8BAA8B;AAAC;AAE1D,IAAMC,cAAc,GAAG,SAAjBA,cAAc,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAClC,gBAA0BZ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/Ba,KAAK;IAAEC,QAAQ;EACtB,iBAA8Bd,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCe,OAAO;IAAEC,UAAU;EAC1B,IAAMC,IAAI,GAAGd,IAAI,CAACe,WAAW;EAE7BjB,SAAS,CAAC,YAAM;IACd,IAAMkB,KAAK,GAAGd,UAAU,CACtBG,UAAU,CAACJ,EAAE,EAAE,OAAO,CAAC,EACvBG,OAAO,CAAC,QAAQ,CAAC,EACjB,UAACa,QAAQ,EAAK;MACZN,QAAQ,CACNM,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,UAACC,IAAI;QAAA;UAAQC,EAAE,EAAED,IAAI,CAACC;QAAE,GAAKD,IAAI,CAACE,IAAI,EAAE;MAAA,CAAG,CAAC,CAC/D;MACD,IAAIV,OAAO,EAAE;QACXC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CACF;IACD,OAAOG,KAAK;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,KAAC,IAAI;IAAA,UACH,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEO,MAAM,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAA;IAAA;EAEzC,EAWF;AAEX,CAAC;AAED,eAAehB,cAAc"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Platform } from 'expo-modules-core';\nvar warningHasBeenShown = false;\nexport default {\n  addListener: function addListener() {\n    if (!warningHasBeenShown) {\n      console.warn(\"[expo-notifications] Emitting notifications is not yet fully supported on \" + Platform.OS + \". Adding a listener will have no effect.\");\n      warningHasBeenShown = true;\n    }\n  },\n  removeListeners: function removeListeners() {}\n};","map":{"version":3,"sources":["../src/NotificationsEmitterModule.ts"],"names":[],"mappings":"AAAA,SAAS,QAAQ,QAAQ,mBAAmB;AAI5C,IAAI,mBAAmB,GAAG,KAAK;AAE/B,eAAe;EACb,WAAW,EAAE,uBAAK;IAChB,IAAI,CAAC,mBAAmB,EAAE;MACxB,OAAO,CAAC,IAAI,gFACmE,QAAQ,CAAC,EAAE,8CACzF;MACD,mBAAmB,GAAG,IAAI;IAC3B;EACH,CAAC;EACD,eAAe,EAAE,2BAAK,CAAE;CACK","sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { NotificationsEmitterModule } from './NotificationsEmitterModule.types';\n\nlet warningHasBeenShown = false;\n\nexport default {\n  addListener: () => {\n    if (!warningHasBeenShown) {\n      console.warn(\n        `[expo-notifications] Emitting notifications is not yet fully supported on ${Platform.OS}. Adding a listener will have no effect.`\n      );\n      warningHasBeenShown = true;\n    }\n  },\n  removeListeners: () => {},\n} as NotificationsEmitterModule;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"action\", \"icon\", \"onIconPress\", \"iconAccessibilityLabel\", \"duration\", \"onDismiss\", \"children\", \"elevation\", \"wrapperStyle\", \"style\", \"theme\"],\n  _excluded2 = [\"style\", \"label\", \"onPress\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { withInternalTheme } from \"../core/theming\";\nimport Button from \"./Button/Button\";\nimport IconButton from \"./IconButton/IconButton\";\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nvar DURATION_SHORT = 4000;\nvar DURATION_MEDIUM = 7000;\nvar DURATION_LONG = 10000;\nvar Snackbar = function Snackbar(_ref) {\n  var visible = _ref.visible,\n    action = _ref.action,\n    icon = _ref.icon,\n    onIconPress = _ref.onIconPress,\n    _ref$iconAccessibilit = _ref.iconAccessibilityLabel,\n    iconAccessibilityLabel = _ref$iconAccessibilit === void 0 ? 'Close icon' : _ref$iconAccessibilit,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? DURATION_MEDIUM : _ref$duration,\n    onDismiss = _ref.onDismiss,\n    children = _ref.children,\n    _ref$elevation = _ref.elevation,\n    elevation = _ref$elevation === void 0 ? 2 : _ref$elevation,\n    wrapperStyle = _ref.wrapperStyle,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n    bottom = _useSafeAreaInsets.bottom,\n    right = _useSafeAreaInsets.right,\n    left = _useSafeAreaInsets.left;\n  var _React$useRef = React.useRef(new Animated.Value(0.0)),\n    opacity = _React$useRef.current;\n  var hideTimeout = React.useRef(undefined);\n  var _React$useState = React.useState(!visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hidden = _React$useState2[0],\n    setHidden = _React$useState2[1];\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    return function () {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n  React.useLayoutEffect(function () {\n    if (visible) {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        easing: Easing.out(Easing.ease),\n        useNativeDriver: true\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n        if (finished) {\n          var isInfinity = duration === Number.POSITIVE_INFINITY || duration === Number.NEGATIVE_INFINITY;\n          if (!isInfinity) {\n            hideTimeout.current = setTimeout(onDismiss, duration);\n          }\n        }\n      });\n    } else {\n      if (hideTimeout.current) {\n        clearTimeout(hideTimeout.current);\n      }\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true\n      }).start(function (_ref3) {\n        var finished = _ref3.finished;\n        if (finished) {\n          setHidden(true);\n        }\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n  var colors = theme.colors,\n    roundness = theme.roundness,\n    isV3 = theme.isV3;\n  if (hidden) {\n    return null;\n  }\n  var _ref5 = action || {},\n    actionStyle = _ref5.style,\n    actionLabel = _ref5.label,\n    onPressAction = _ref5.onPress,\n    actionProps = _objectWithoutProperties(_ref5, _excluded2);\n  var buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;\n  var textColor = isV3 ? colors.inverseOnSurface : colors === null || colors === void 0 ? void 0 : colors.surface;\n  var backgroundColor = isV3 ? colors.inverseSurface : colors === null || colors === void 0 ? void 0 : colors.onSurface;\n  var isIconButton = isV3 && onIconPress;\n  var marginLeft = action ? -12 : -16;\n  var wrapperPaddings = {\n    paddingBottom: bottom,\n    paddingHorizontal: Math.max(left, right)\n  };\n  var renderChildrenWithWrapper = function renderChildrenWithWrapper() {\n    if (typeof children === 'string') {\n      return React.createElement(Text, {\n        variant: \"bodyMedium\",\n        style: [styles.content, {\n          color: textColor\n        }]\n      }, children);\n    }\n    return React.createElement(View, {\n      style: styles.content\n    }, React.createElement(View, null, children));\n  };\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.wrapper, wrapperPaddings, wrapperStyle]\n  }, React.createElement(Surface, _extends({\n    pointerEvents: \"box-none\",\n    accessibilityLiveRegion: \"polite\",\n    style: [!isV3 && styles.elevation, styles.container, {\n      backgroundColor: backgroundColor,\n      borderRadius: roundness,\n      opacity: opacity,\n      transform: [{\n        scale: visible ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.9, 1]\n        }) : 1\n      }]\n    }, style]\n  }, isV3 && {\n    elevation: elevation\n  }, rest), renderChildrenWithWrapper(), (action || isIconButton) && React.createElement(View, {\n    style: [styles.actionsContainer, {\n      marginLeft: marginLeft\n    }]\n  }, action ? React.createElement(Button, _extends({\n    onPress: function onPress(event) {\n      onPressAction === null || onPressAction === void 0 ? void 0 : onPressAction(event);\n      onDismiss();\n    },\n    style: [styles.button, actionStyle],\n    textColor: buttonTextColor,\n    compact: !isV3,\n    mode: \"text\"\n  }, actionProps), actionLabel) : null, isIconButton ? React.createElement(IconButton, {\n    accessibilityRole: \"button\",\n    borderless: true,\n    onPress: onIconPress,\n    iconColor: theme.colors.inverseOnSurface,\n    icon: icon || function (_ref4) {\n      var size = _ref4.size,\n        color = _ref4.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"close\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    accessibilityLabel: iconAccessibilityLabel,\n    style: styles.icon\n  }) : null)));\n};\nSnackbar.DURATION_SHORT = DURATION_SHORT;\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\nSnackbar.DURATION_LONG = DURATION_LONG;\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 8,\n    borderRadius: 4,\n    minHeight: 48\n  },\n  content: {\n    marginHorizontal: 16,\n    marginVertical: 14,\n    flex: 1\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight: 48\n  },\n  button: {\n    marginRight: 8,\n    marginLeft: 4\n  },\n  elevation: {\n    elevation: 6\n  },\n  icon: {\n    width: 40,\n    height: 40,\n    margin: 0\n  }\n});\nexport default withInternalTheme(Snackbar);","map":{"version":3,"sources":["Snackbar.tsx"],"names":["React","useSafeAreaInsets","withInternalTheme","Button","IconButton","MaterialCommunityIcon","Surface","Text","DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","visible","action","icon","onIconPress","iconAccessibilityLabel","duration","onDismiss","children","elevation","wrapperStyle","style","theme","rest","bottom","right","left","current","opacity","useRef","Animated","Value","hideTimeout","undefined","hidden","setHidden","useState","scale","animation","useEffect","clearTimeout","useLayoutEffect","timing","toValue","easing","Easing","out","ease","useNativeDriver","start","finished","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","colors","roundness","isV3","actionStyle","label","actionLabel","onPress","onPressAction","actionProps","buttonTextColor","inversePrimary","accent","textColor","inverseOnSurface","surface","backgroundColor","inverseSurface","onSurface","isIconButton","marginLeft","wrapperPaddings","paddingBottom","paddingHorizontal","Math","max","renderChildrenWithWrapper","styles","content","color","wrapper","container","borderRadius","transform","interpolate","inputRange","outputRange","actionsContainer","event","button","size","I18nManager","getConstants","isRTL","StyleSheet","create","position","width","flexDirection","justifyContent","margin","minHeight","marginHorizontal","marginVertical","flex","alignItems","marginRight","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\nimport Button from './Button/Button';\nimport type { IconSource } from './Icon';\nimport IconButton from './IconButton/IconButton';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: Omit<React.ComponentProps<typeof Button>, 'children'> & {\n    label: string;\n  };\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Icon to display when `onIconPress` is defined. Default will be `close` icon.\n   */\n  icon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Function to execute on icon button press. The icon button appears only when this prop is specified.\n   */\n  onIconPress?: () => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Accessibility label for the icon button. This is read by the screen reader when the user taps the button.\n   */\n  iconAccessibilityLabel?: string;\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Snackbar shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default uses `onSurface` color from theme.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Snackbar = ({\n  visible,\n  action,\n  icon,\n  onIconPress,\n  iconAccessibilityLabel = 'Close icon',\n  duration = DURATION_MEDIUM,\n  onDismiss,\n  children,\n  elevation = 2,\n  wrapperStyle,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { bottom, right, left } = useSafeAreaInsets();\n\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(0.0)\n  );\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const [hidden, setHidden] = React.useState(!visible);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    return () => {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (visible) {\n      // show\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        easing: Easing.out(Easing.ease),\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          const isInfinity =\n            duration === Number.POSITIVE_INFINITY ||\n            duration === Number.NEGATIVE_INFINITY;\n\n          if (!isInfinity) {\n            hideTimeout.current = setTimeout(\n              onDismiss,\n              duration\n            ) as unknown as NodeJS.Timeout;\n          }\n        }\n      });\n    } else {\n      // hide\n      if (hideTimeout.current) {\n        clearTimeout(hideTimeout.current);\n      }\n\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          setHidden(true);\n        }\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n\n  const { colors, roundness, isV3 } = theme;\n\n  if (hidden) {\n    return null;\n  }\n\n  const {\n    style: actionStyle,\n    label: actionLabel,\n    onPress: onPressAction,\n    ...actionProps\n  } = action || {};\n\n  const buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;\n  const textColor = isV3 ? colors.inverseOnSurface : colors?.surface;\n  const backgroundColor = isV3 ? colors.inverseSurface : colors?.onSurface;\n\n  const isIconButton = isV3 && onIconPress;\n\n  const marginLeft = action ? -12 : -16;\n\n  const wrapperPaddings = {\n    paddingBottom: bottom,\n    paddingHorizontal: Math.max(left, right),\n  };\n\n  const renderChildrenWithWrapper = () => {\n    if (typeof children === 'string') {\n      return (\n        <Text\n          variant=\"bodyMedium\"\n          style={[styles.content, { color: textColor }]}\n        >\n          {children}\n        </Text>\n      );\n    }\n\n    return (\n      <View style={styles.content}>\n        {/* View is added to allow multiple lines support for Text component as children */}\n        <View>{children}</View>\n      </View>\n    );\n  };\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.wrapper, wrapperPaddings, wrapperStyle]}\n    >\n      <Surface\n        pointerEvents=\"box-none\"\n        accessibilityLiveRegion=\"polite\"\n        style={\n          [\n            !isV3 && styles.elevation,\n            styles.container,\n            {\n              backgroundColor,\n              borderRadius: roundness,\n              opacity: opacity,\n              transform: [\n                {\n                  scale: visible\n                    ? opacity.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.9, 1],\n                      })\n                    : 1,\n                },\n              ],\n            },\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        {...(isV3 && { elevation })}\n        {...rest}\n      >\n        {renderChildrenWithWrapper()}\n        {(action || isIconButton) && (\n          <View style={[styles.actionsContainer, { marginLeft }]}>\n            {action ? (\n              <Button\n                onPress={(event) => {\n                  onPressAction?.(event);\n                  onDismiss();\n                }}\n                style={[styles.button, actionStyle]}\n                textColor={buttonTextColor}\n                compact={!isV3}\n                mode=\"text\"\n                {...actionProps}\n              >\n                {actionLabel}\n              </Button>\n            ) : null}\n            {isIconButton ? (\n              <IconButton\n                accessibilityRole=\"button\"\n                borderless\n                onPress={onIconPress}\n                iconColor={theme.colors.inverseOnSurface}\n                icon={\n                  icon ||\n                  (({ size, color }) => {\n                    return (\n                      <MaterialCommunityIcon\n                        name=\"close\"\n                        color={color}\n                        size={size}\n                        direction={\n                          I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n                        }\n                      />\n                    );\n                  })\n                }\n                accessibilityLabel={iconAccessibilityLabel}\n                style={styles.icon}\n              />\n            ) : null}\n          </View>\n        )}\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Show the Snackbar for a short duration.\n */\nSnackbar.DURATION_SHORT = DURATION_SHORT;\n\n/**\n * Show the Snackbar for a medium duration.\n */\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n\n/**\n * Show the Snackbar for a long duration.\n */\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 8,\n    borderRadius: 4,\n    minHeight: 48,\n  },\n  content: {\n    marginHorizontal: 16,\n    marginVertical: 14,\n    flex: 1,\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight: 48,\n  },\n  button: {\n    marginRight: 8,\n    marginLeft: 4,\n  },\n  elevation: {\n    elevation: 6,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n    margin: 0,\n  },\n});\n\nexport default withInternalTheme(Snackbar);\n"]},"metadata":{},"sourceType":"module"}
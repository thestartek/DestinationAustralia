{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport ExpoDevMenu from \"./ExpoDevMenu\";\nexport function openMenu() {\n  ExpoDevMenu.openMenu();\n}\nvar hasRegisteredCallbackListener = false;\nfunction registerCallbackListener() {\n  if (!hasRegisteredCallbackListener) {\n    DeviceEventEmitter.addListener('registeredCallbackFired', function (name) {\n      hasRegisteredCallbackListener = true;\n      var handler = handlers.get(name);\n      if (handler != null) {\n        handler();\n      }\n    });\n  }\n}\nregisterCallbackListener();\nvar handlers = new Map();\nexport function registerDevMenuItems(_x) {\n  return _registerDevMenuItems.apply(this, arguments);\n}\nfunction _registerDevMenuItems() {\n  _registerDevMenuItems = _asyncToGenerator(function* (items) {\n    if (!__DEV__) {\n      return;\n    }\n    handlers = new Map();\n    var callbackNames = [];\n    items.forEach(function (item) {\n      handlers.set(item.name, item.callback);\n      callbackNames.push(item.name);\n    });\n    return yield ExpoDevMenu.addDevMenuCallbacks(callbackNames);\n  });\n  return _registerDevMenuItems.apply(this, arguments);\n}","map":{"version":3,"mappings":";;AAEA,OAAOA,WAAW;AAGlB,OAAM,SAAUC,QAAQ;EACtBD,WAAW,CAACC,QAAQ,EAAE;AACxB;AAEA,IAAIC,6BAA6B,GAAG,KAAK;AAEzC,SAASC,wBAAwB;EAC/B,IAAI,CAACD,6BAA6B,EAAE;IAClCE,kBAAkB,CAACC,WAAW,CAAC,yBAAyB,EAAE,UAACC,IAAY,EAAI;MACzEJ,6BAA6B,GAAG,IAAI;MACpC,IAAMK,OAAO,GAAGC,QAAQ,CAACC,GAAG,CAACH,IAAI,CAAC;MAElC,IAAIC,OAAO,IAAI,IAAI,EAAE;QACnBA,OAAO,EAAE;;IAEb,CAAC,CAAC;;AAEN;AAEAJ,wBAAwB,EAAE;AAE1B,IAAIK,QAAQ,GAAG,IAAIE,GAAG,EAAsB;AAE5C,gBAAsBC,oBAAoB;EAAA;AAAA;AAezC;EAAA,0CAfM,WAAoCC,KAAwB;IACjE,IAAI,CAACC,OAAO,EAAE;MAEZ;;IAGFL,QAAQ,GAAG,IAAIE,GAAG,EAAE;IACpB,IAAMI,aAAa,GAAa,EAAE;IAElCF,KAAK,CAACG,OAAO,CAAC,UAACC,IAAI,EAAI;MACrBR,QAAQ,CAACS,GAAG,CAACD,IAAI,CAACV,IAAI,EAAEU,IAAI,CAACE,QAAQ,CAAC;MACtCJ,aAAa,CAACK,IAAI,CAACH,IAAI,CAACV,IAAI,CAAC;IAC/B,CAAC,CAAC;IAEF,aAAaN,WAAW,CAACoB,mBAAmB,CAACN,aAAa,CAAC;EAC7D,CAAC;EAAA;AAAA","names":["ExpoDevMenu","openMenu","hasRegisteredCallbackListener","registerCallbackListener","DeviceEventEmitter","addListener","name","handler","handlers","get","Map","registerDevMenuItems","items","__DEV__","callbackNames","forEach","item","set","callback","push","addDevMenuCallbacks"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/node_modules/expo-dev-menu/src/DevMenu.ts"],"sourcesContent":["import { DeviceEventEmitter } from 'react-native';\n\nimport ExpoDevMenu from './ExpoDevMenu';\nimport { ExpoDevMenuItem } from './ExpoDevMenu.types';\n\nexport function openMenu(): void {\n  ExpoDevMenu.openMenu();\n}\n\nlet hasRegisteredCallbackListener = false;\n\nfunction registerCallbackListener() {\n  if (!hasRegisteredCallbackListener) {\n    DeviceEventEmitter.addListener('registeredCallbackFired', (name: string) => {\n      hasRegisteredCallbackListener = true;\n      const handler = handlers.get(name);\n\n      if (handler != null) {\n        handler();\n      }\n    });\n  }\n}\n\nregisterCallbackListener();\n\nlet handlers = new Map<string, () => void>();\n\nexport async function registerDevMenuItems(items: ExpoDevMenuItem[]) {\n  if (!__DEV__) {\n    // resolve undefined\n    return;\n  }\n\n  handlers = new Map();\n  const callbackNames: string[] = [];\n\n  items.forEach((item) => {\n    handlers.set(item.name, item.callback);\n    callbackNames.push(item.name);\n  });\n\n  return await ExpoDevMenu.addDevMenuCallbacks(callbackNames);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
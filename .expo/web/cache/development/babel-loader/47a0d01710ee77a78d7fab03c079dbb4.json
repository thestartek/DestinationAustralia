{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { auth, db } from \"../../Firebase\";\nimport { signInWithEmailAndPassword, GoogleAuthProvider, signInWithCredential } from \"firebase/auth\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { GoogleSignin } from \"@react-native-google-signin/google-signin\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    googleLoading = _useState8[0],\n    setGoogleLoading = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    facebookLoading = _useState10[0],\n    setFacebookLoading = _useState10[1];\n  GoogleSignin.configure({\n    webClientId: \"126633133869-s0m5p25e3ccme62qhg2ire4lr0jtv4u9.apps.googleusercontent.com\",\n    androidClientId: \"126633133869-hq7rrnm2dk7677v71861p772ua34uoiu.apps.googleusercontent.com\"\n  });\n  var GoogleSignIn = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setGoogleLoading(true);\n      yield GoogleSignin.hasPlayServices({\n        showPlayServicesUpdateDialog: true\n      });\n      var userInfo = yield GoogleSignin.signIn();\n      var user = userInfo.user;\n      console.log(user.name + \" is signed in with email: \" + user.email);\n      var googleCredential = GoogleAuthProvider.credential(userInfo.idToken);\n      yield signInWithCredential(auth, googleCredential).then(function () {\n        setDoc(doc(db, \"users\", \"user.email\"), {\n          uid: user.id,\n          fullname: user.name,\n          email: user.email,\n          profile_picture: user.photo\n        });\n        console.log(\"User added to database\");\n        Alert.alert(\"User registered successfully\", user.email);\n        setGoogleLoading(false);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n    return function GoogleSignIn() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Logged in with:\", user.email);\n    }).catch(function (error) {\n      return Alert.alert(\"Invalid login details\", \"If you do not have an account yet, Please Register\", [{\n        text: \"Ok\",\n        onPress: function onPress() {\n          return setLoading(false);\n        },\n        style: \"cancel\"\n      }, {\n        text: \"Register\",\n        onPress: function onPress() {\n          navigation.push(\"Register\"), setLoading(false);\n        }\n      }]);\n    });\n    setLoading(true);\n  };\n  return _jsx(ScrollView, {\n    style: styles.outerContainer,\n    children: _jsxs(View, {\n      style: {\n        alignItems: \"center\"\n      },\n      children: [_jsxs(View, {\n        style: styles.logoContainer,\n        children: [_jsx(Image, {\n          source: require(\"../../assets/appIcon_transparent.png\"),\n          style: {\n            height: 100,\n            width: 100,\n            marginTop: 20\n          }\n        }), _jsx(Text, {\n          style: [styles.text, {\n            color: \"grey\",\n            marginBottom: 20\n          }],\n          children: \"Your friend for Australia related contents\"\n        })]\n      }), _jsx(Text, {\n        style: [styles.text, {\n          marginBottom: 10\n        }],\n        children: \"Login with\"\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsxs(TouchableOpacity, {\n          onPress: GoogleSignIn,\n          style: [styles.button, styles.buttonGoogle],\n          children: [googleLoading ? _jsx(ActivityIndicator, {}) : _jsx(AntDesign, {\n            name: \"google\",\n            size: 24,\n            color: \"white\"\n          }), _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Google\"\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: [styles.button, styles.buttonFacebook],\n          children: [facebookLoading ? _jsx(ActivityIndicator, {}) : _jsx(AntDesign, {\n            name: \"facebook-square\",\n            size: 24,\n            color: \"white\"\n          }), _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Facebook\"\n          })]\n        })]\n      }), _jsx(Text, {\n        style: [styles.text, {\n          marginVertical: 10\n        }],\n        children: \"-------------------- OR --------------------\"\n      }), _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Email\",\n          autoCapitalize: \"none\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          style: styles.textInput\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          style: styles.textInput,\n          secureTextEntry: true\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.push(\"Reset password\");\n          },\n          style: {\n            alignItems: \"flex-end\"\n          },\n          children: _jsxs(Text, {\n            style: {\n              color: \"#1267E9\",\n              fontSize: 16,\n              marginVertical: 10\n            },\n            children: [\"Forgot password ?\", \" \"]\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          onPress: handleLogin,\n          style: styles.button,\n          children: loading ? _jsx(ActivityIndicator, {}) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Login\"\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          marginTop: 30,\n          justifyContent: \"center\"\n        },\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \" Don't have an account ? \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.push(\"Register\");\n          },\n          children: _jsx(Text, {\n            style: [styles.buttonText, {\n              color: \"#1267E9\"\n            }],\n            children: \"Register\"\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  outerContainer: {\n    marginHorizontal: 10,\n    backgroundColor: \"white\"\n  },\n  logoContainer: {\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    marginHorizontal: 10,\n    justifyContent: \"center\"\n  },\n  button: {\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\",\n    marginHorizontal: 10,\n    marginVertical: 10,\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    width: 140,\n    backgroundColor: \"#1267E9\"\n  },\n  buttonFacebook: {\n    backgroundColor: \"#1267E9\"\n  },\n  buttonGoogle: {\n    backgroundColor: \"red\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n    marginLeft: 10\n  },\n  text: {\n    fontSize: 16\n  },\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"darkgrey\",\n    marginVertical: 5,\n    width: 300\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","db","signInWithEmailAndPassword","GoogleAuthProvider","signInWithCredential","setDoc","doc","GoogleSignin","AntDesign","LoginScreen","navigation","email","setEmail","password","setPassword","loading","setLoading","googleLoading","setGoogleLoading","facebookLoading","setFacebookLoading","configure","webClientId","androidClientId","GoogleSignIn","hasPlayServices","showPlayServicesUpdateDialog","userInfo","signIn","user","console","log","name","googleCredential","credential","idToken","then","uid","id","fullname","profile_picture","photo","Alert","alert","catch","error","handleLogin","userCredentials","text","onPress","style","push","styles","outerContainer","alignItems","logoContainer","require","height","width","marginTop","color","marginBottom","buttonContainer","button","buttonGoogle","buttonText","buttonFacebook","marginVertical","textInput","fontSize","flexDirection","justifyContent","StyleSheet","create","marginHorizontal","backgroundColor","padding","borderRadius","fontWeight","marginLeft","borderWidth","borderColor"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/components/login/LoginScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n} from \"react-native\";\nimport { auth, db } from \"../../Firebase\";\nimport {\n  signInWithEmailAndPassword,\n  GoogleAuthProvider,\n  signInWithCredential,\n} from \"firebase/auth\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { GoogleSignin } from \"@react-native-google-signin/google-signin\";\nimport { Alert } from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [googleLoading, setGoogleLoading] = useState(false);\n  const [facebookLoading, setFacebookLoading] = useState(false);\n\n  GoogleSignin.configure({\n    webClientId:\n      \"126633133869-s0m5p25e3ccme62qhg2ire4lr0jtv4u9.apps.googleusercontent.com\",\n    androidClientId:\n      \"126633133869-hq7rrnm2dk7677v71861p772ua34uoiu.apps.googleusercontent.com\",\n  });\n\n  const GoogleSignIn = async () => {\n    setGoogleLoading(true);\n    await GoogleSignin.hasPlayServices({ showPlayServicesUpdateDialog: true });\n    const userInfo = await GoogleSignin.signIn();\n    // console.log(userInfo)\n    const user = userInfo.user;\n    console.log(user.name + \" is signed in with email: \" + user.email);\n    const googleCredential = GoogleAuthProvider.credential(userInfo.idToken);\n    await signInWithCredential(auth, googleCredential)\n      .then(() => {\n        setDoc(doc(db, \"users\", \"user.email\"), {\n          uid: user.id,\n          fullname: user.name,\n          email: user.email,\n          // city: city,\n          // country: country,\n          // info: info,\n          profile_picture: user.photo,\n        });\n        console.log(\"User added to database\");\n        Alert.alert(\"User registered successfully\", user.email);\n        setGoogleLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    // await setDoc(doc(db, \"users\", user.email), {\n    //   uid: user.id,\n    //   fullname: user.givenName + \" \" + user.familyName,\n    //   email: user.email,\n    //   // city: city,\n    //   // country: country,\n    //   // info: info,\n    //   profile_picture: user.photo,\n    // });\n    // console.log(\"User added to database\");\n    // // Alert.alert(\"User registered successfully\", user.email);\n    // setGoogleLoading(false);\n\n    // return signInWithCredential(auth, googleCredential);\n  };\n\n  const handleLogin = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        console.log(\"Logged in with:\", user.email);\n      })\n      .catch(\n        (error) =>\n          Alert.alert(\n            \"Invalid login details\",\n            \"If you do not have an account yet, Please Register\",\n            [\n              {\n                text: \"Ok\",\n                onPress: () => setLoading(false),\n                style: \"cancel\",\n              },\n              {\n                text: \"Register\",\n                onPress: () => {\n                  navigation.push(\"Register\"), setLoading(false);\n                },\n              },\n            ]\n          )\n        //\n      );\n    setLoading(true);\n  };\n\n  return (\n    <ScrollView style={styles.outerContainer}>\n      <View style={{ alignItems: \"center\" }}>\n        <View style={styles.logoContainer}>\n          <Image\n            source={require(\"../../assets/appIcon_transparent.png\")}\n            style={{ height: 100, width: 100, marginTop: 20 }}\n          />\n          <Text style={[styles.text, { color: \"grey\", marginBottom: 20 }]}>\n            Your friend for Australia related contents\n          </Text>\n        </View>\n\n        <Text style={[styles.text, { marginBottom: 10 }]}>Login with</Text>\n\n        {/* LOGIN WIHT FACEBOOK AND LOGIN WITH GOOGLE BUTTONS */}\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            onPress={GoogleSignIn}\n            style={[styles.button, styles.buttonGoogle]}\n          >\n            {googleLoading ? (\n              <ActivityIndicator />\n            ) : (\n              <AntDesign name=\"google\" size={24} color=\"white\" />\n            )}\n            <Text style={styles.buttonText}>Google</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            //onPress={() => navigation.push(\"Register\")}\n            style={[styles.button, styles.buttonFacebook]}\n          >\n            {facebookLoading ? (\n              <ActivityIndicator />\n            ) : (\n              <AntDesign name=\"facebook-square\" size={24} color=\"white\" />\n            )}\n            <Text style={styles.buttonText}>Facebook</Text>\n          </TouchableOpacity>\n        </View>\n        <Text style={[styles.text, { marginVertical: 10 }]}>\n          -------------------- OR --------------------\n        </Text>\n\n        <View>\n          <TextInput\n            placeholder=\"Email\"\n            autoCapitalize=\"none\"\n            //autoFocus={true}\n            value={email}\n            onChangeText={(text) => setEmail(text)}\n            style={styles.textInput}\n          />\n          <TextInput\n            placeholder=\"Password\"\n            value={password}\n            onChangeText={(text) => setPassword(text)}\n            style={styles.textInput}\n            secureTextEntry\n          />\n          <TouchableOpacity\n            onPress={() => navigation.push(\"Reset password\")}\n            style={{ alignItems: \"flex-end\" }}\n          >\n            <Text\n              style={{ color: \"#1267E9\", fontSize: 16, marginVertical: 10 }}\n            >\n              Forgot password ?{\" \"}\n            </Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity onPress={handleLogin} style={styles.button}>\n            {loading ? (\n              <ActivityIndicator />\n            ) : (\n              <Text style={styles.buttonText}>Login</Text>\n            )}\n            {/* <Text style={styles.buttonText}>Login</Text> */}\n          </TouchableOpacity>\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            marginTop: 30,\n            justifyContent: \"center\",\n          }}\n        >\n          <Text style={styles.text}> Don't have an account ? </Text>\n          <TouchableOpacity onPress={() => navigation.push(\"Register\")}>\n            <Text style={[styles.buttonText, { color: \"#1267E9\" }]}>\n              Register\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  outerContainer: {\n    marginHorizontal: 10,\n    backgroundColor: \"white\",\n  },\n  logoContainer: {\n    alignItems: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    marginHorizontal: 10,\n    // width: 300,\n    justifyContent: \"center\",\n    // marginTop: 20,\n  },\n  button: {\n    padding: 12,\n    // height: 50,\n    borderRadius: 10,\n    alignItems: \"center\",\n    marginHorizontal: 10,\n    marginVertical: 10,\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    width: 140,\n    backgroundColor: \"#1267E9\",\n    // marginTop: 10,\n  },\n  buttonFacebook: {\n    backgroundColor: \"#1267E9\",\n  },\n  buttonGoogle: {\n    backgroundColor: \"red\",\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n    marginLeft: 10,\n  },\n  text: {\n    fontSize: 16,\n  },\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"darkgrey\",\n    marginVertical: 5,\n    width: 300,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport ExpoMailComposer from \"./ExpoMailComposer\";\nexport function composeAsync(_x) {\n  return _composeAsync.apply(this, arguments);\n}\nfunction _composeAsync() {\n  _composeAsync = _asyncToGenerator(function* (options) {\n    return yield ExpoMailComposer.composeAsync(options);\n  });\n  return _composeAsync.apply(this, arguments);\n}\nexport function isAvailableAsync() {\n  return _isAvailableAsync.apply(this, arguments);\n}\nfunction _isAvailableAsync() {\n  _isAvailableAsync = _asyncToGenerator(function* () {\n    return yield ExpoMailComposer.isAvailableAsync();\n  });\n  return _isAvailableAsync.apply(this, arguments);\n}\nexport * from \"./MailComposer.types\";","map":{"version":3,"mappings":";AAAA,OAAOA,gBAAgB;AAWvB,gBAAsBC,YAAY;EAAA;AAAA;AAEjC;EAAA,kCAFM,WAA4BC,OAA4B;IAC7D,aAAaF,gBAAgB,CAACC,YAAY,CAACC,OAAO,CAAC;EACrD,CAAC;EAAA;AAAA;AAWD,gBAAsBC,gBAAgB;EAAA;AAAA;AAErC;EAAA,sCAFM,aAA+B;IACpC,aAAaH,gBAAgB,CAACG,gBAAgB,EAAE;EAClD,CAAC;EAAA;AAAA;AAED","names":["ExpoMailComposer","composeAsync","options","isAvailableAsync"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/node_modules/expo-mail-composer/src/MailComposer.ts"],"sourcesContent":["import ExpoMailComposer from './ExpoMailComposer';\nimport { MailComposerOptions, MailComposerResult } from './MailComposer.types';\n\n// @needsAudit\n/**\n * Opens a mail modal for iOS and a mail app intent for Android and fills the fields with provided\n * data. On iOS you will need to be signed into the Mail app.\n * @return A promise fulfilled with an object containing a `status` field that specifies whether an\n * email was sent, saved, or cancelled. Android does not provide this info, so the status is always\n * set as if the email were sent.\n */\nexport async function composeAsync(options: MailComposerOptions): Promise<MailComposerResult> {\n  return await ExpoMailComposer.composeAsync(options);\n}\n\n// @needsAudit\n/**\n * Determine if the `MailComposer` API can be used in this app.\n * @return A promise resolves to `true` if the API can be used, and `false` otherwise.\n * - Returns `true` on iOS when the device has a default email setup for sending mail.\n * - Can return `false` on iOS if an MDM profile is setup to block outgoing mail. If this is the\n * case, you may want to use the Linking API instead.\n * - Always returns `true` in the browser and on Android.\n */\nexport async function isAvailableAsync(): Promise<boolean> {\n  return await ExpoMailComposer.isAvailableAsync();\n}\n\nexport * from './MailComposer.types';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"leftInset\", \"horizontalInset\", \"style\", \"theme\", \"bold\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { withInternalTheme } from \"../core/theming\";\nimport { black, white } from \"../styles/themes/v2/colors\";\nvar Divider = function Divider(_ref) {\n  var leftInset = _ref.leftInset,\n    _ref$horizontalInset = _ref.horizontalInset,\n    horizontalInset = _ref$horizontalInset === void 0 ? false : _ref$horizontalInset,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$bold = _ref.bold,\n    bold = _ref$bold === void 0 ? false : _ref$bold,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var isDarkTheme = theme.dark,\n    isV3 = theme.isV3;\n  var dividerColor = isV3 ? theme.colors.outlineVariant : color(isDarkTheme ? white : black).alpha(0.12).rgb().string();\n  return React.createElement(View, _extends({}, rest, {\n    style: [{\n      height: StyleSheet.hairlineWidth,\n      backgroundColor: dividerColor\n    }, leftInset && (isV3 ? styles.v3LeftInset : styles.leftInset), isV3 && horizontalInset && styles.horizontalInset, isV3 && bold && styles.bold, style]\n  }));\n};\nvar styles = StyleSheet.create({\n  leftInset: {\n    marginLeft: 72\n  },\n  v3LeftInset: {\n    marginLeft: 16\n  },\n  horizontalInset: {\n    marginLeft: 16,\n    marginRight: 16\n  },\n  bold: {\n    height: 1\n  }\n});\nexport default withInternalTheme(Divider);","map":{"version":3,"sources":["Divider.tsx"],"names":["React","color","withInternalTheme","black","white","Divider","leftInset","horizontalInset","style","theme","bold","rest","dark","isDarkTheme","isV3","dividerColor","colors","outlineVariant","alpha","rgb","string","height","StyleSheet","hairlineWidth","backgroundColor","styles","v3LeftInset","create","marginLeft","marginRight"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAG9B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,iBAAiB;AAC1B,SAASC,KAAK,EAAEC,KAAK;AAqDrB,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAG,IAAA,EAOH;EAPI,IACfC,SAAS,GAMH,IAAA,CANNA,SAAS;IAAA,uBAMH,IAAA,CALNC,eAAe;IAAfA,eAAe,qCAAG,KAAK;IACvBC,KAAK,GAIC,IAAA,CAJNA,KAAK;IACLC,KAAK,GAGC,IAAA,CAHNA,KAAK;IAAA,YAGC,IAAA,CAFNC,IAAI;IAAJA,IAAI,0BAAG,KAAK;IACTC,IAAAA,4BACG,IAAA;EACN,IAAcE,WAAW,GAAWJ,KAAK,CAAjCG,IAAI;IAAeE,IAAAA,GAASL,KAAK,CAAdK,IAAAA;EAE3B,IAAMC,YAAY,GAAGD,IAAI,GACrBL,KAAK,CAACO,MAAM,CAACC,cAAc,GAC3BhB,KAAK,CAACY,WAAW,GAAGT,KAAK,GAAGD,KAAK,CAAC,CAC/Be,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,EAAE,CACLC,MAAM,EAAE;EAEf,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,QAAA,CAAA,CAAA,CAAA,EACCT,IAAI,EAAA;IACR,KAAK,EAAE,CACL;MAAEU,MAAM,EAAEC,UAAU,CAACC,aAAa;MAAEC,eAAe,EAAET;IAAa,CAAC,EACnET,SAAS,KAAKQ,IAAI,GAAGW,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACnB,SAAS,CAAC,EAC3DQ,IAAI,IAAIP,eAAe,IAAIkB,MAAM,CAAClB,eAAe,EACjDO,IAAI,IAAIJ,IAAI,IAAIe,MAAM,CAACf,IAAI,EAC3BF,KAAK;EACL,CAAA,CAAA,CACF;AAEN,CAAC;AAED,IAAMiB,MAAM,GAAGH,UAAU,CAACK,MAAM,CAAC;EAC/BrB,SAAS,EAAE;IACTsB,UAAU,EAAE;EACd,CAAC;EACDF,WAAW,EAAE;IACXE,UAAU,EAAE;EACd,CAAC;EACDrB,eAAe,EAAE;IACfqB,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE;EACf,CAAC;EACDnB,IAAI,EAAE;IACJW,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAenB,iBAAiB,CAACG,OAAO,CAAC","sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport type { $RemoveChildren, InternalTheme } from '../types';\n\nexport type Props = $RemoveChildren<typeof View> & {\n  /**\n   * @renamed Renamed from 'inset' to 'leftInset` in v5.x\n   * Whether divider has a left inset.\n   */\n  leftInset?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *  Whether divider has a horizontal inset on both sides.\n   */\n  horizontalInset?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *  Whether divider should be bolded.\n   */\n  bold?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({\n  leftInset,\n  horizontalInset = false,\n  style,\n  theme,\n  bold = false,\n  ...rest\n}: Props) => {\n  const { dark: isDarkTheme, isV3 } = theme;\n\n  const dividerColor = isV3\n    ? theme.colors.outlineVariant\n    : color(isDarkTheme ? white : black)\n        .alpha(0.12)\n        .rgb()\n        .string();\n\n  return (\n    <View\n      {...rest}\n      style={[\n        { height: StyleSheet.hairlineWidth, backgroundColor: dividerColor },\n        leftInset && (isV3 ? styles.v3LeftInset : styles.leftInset),\n        isV3 && horizontalInset && styles.horizontalInset,\n        isV3 && bold && styles.bold,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  leftInset: {\n    marginLeft: 72,\n  },\n  v3LeftInset: {\n    marginLeft: 16,\n  },\n  horizontalInset: {\n    marginLeft: 16,\n    marginRight: 16,\n  },\n  bold: {\n    height: 1,\n  },\n});\n\nexport default withInternalTheme(Divider);\n"]},"metadata":{},"sourceType":"module"}
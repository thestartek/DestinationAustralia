{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { getNativeModule } from \"./registry/nativeModule\";\nimport { SharedEventEmitter } from \"./SharedEventEmitter\";\nexport var AppModule = function () {\n  function AppModule(app, config) {\n    _classCallCheck(this, AppModule);\n    _defineProperty(this, \"_app\", void 0);\n    _defineProperty(this, \"_nativeModule\", void 0);\n    _defineProperty(this, \"_config\", void 0);\n    this._app = app;\n    this._nativeModule = null;\n    this._config = Object.assign({}, config);\n  }\n  _createClass(AppModule, [{\n    key: \"app\",\n    get: function get() {\n      return this._app;\n    }\n  }, {\n    key: \"emitter\",\n    get: function get() {\n      return SharedEventEmitter;\n    }\n  }, {\n    key: \"eventNameForApp\",\n    value: function eventNameForApp() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return this.app.name + \"-\" + args.join('-');\n    }\n  }, {\n    key: \"native\",\n    get: function get() {\n      if (this._nativeModule) {\n        return this._nativeModule;\n      }\n      this._nativeModule = getNativeModule(this);\n      return this._nativeModule;\n    }\n  }]);\n  return AppModule;\n}();\n_defineProperty(AppModule, \"__extended__\", {});\nAppModule.__extended__ = {};","map":{"version":3,"sources":["Module.ts"],"names":["getNativeModule","SharedEventEmitter","AppModule","constructor","app","config","_app","_nativeModule","_config","Object","assign","eventNameForApp","args","name","join","__extended__"],"mappings":";;;;;;;;;;;;;;;AAiBA,SAASA,eAAe;AACxB,SAASC,kBAAkB;AAI3B,WAAaC,SAAS;EAOpBC,mBAAYC,GAAQ,EAAEC,MAAc,EAAE;IAAA;IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAA;IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA;IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;IACpC,IAAI,CAACC,IAAI,GAAGF,GAAG;IACf,IAAI,CAACG,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,MAAM,CAAC;EAC1C;EAAA;IAAA;IAAA,KAEA,eAAU;MACR,OAAO,IAAI,CAACC,IAAI;IAClB;EAAA;IAAA;IAAA,KAEA,eAAc;MACZ,OAAOL,kBAAkB;IAC3B;EAAA;IAAA;IAAA,OAEAU,2BAAmC;MAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAhBC,IAAI,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;QAAJA,IAAI,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;MAAA;MACrB,OAAU,IAAI,CAACR,GAAG,CAACS,IAAK,SAAGD,IAAI,CAACE,IAAI,CAAC,GAAG,CAAE;IAC5C;EAAA;IAAA;IAAA,KAEA,eAAa;MACX,IAAI,IAAI,CAACP,aAAa,EAAE;QACtB,OAAO,IAAI,CAACA,aAAa;MAC3B;MACA,IAAI,CAACA,aAAa,GAAGP,eAAe,CAAC,IAAI,CAAC;MAC1C,OAAO,IAAI,CAACO,aAAa;IAC3B;EAAA;EAAA;AAAA;AAGF,eAAA,CAlCaL,SAAS,EAAA,cAAA,EAKE,CAAC,CAAC,CAAA;AA8B1BA,SAAS,CAACa,YAAY,GAAG,CAAC,CAAC","sourceRoot":"../../src","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { getNativeModule } from './registry/nativeModule';\nimport { SharedEventEmitter } from './SharedEventEmitter';\nexport class AppModule {\n  constructor(app, config) {\n    _defineProperty(this, \"_app\", void 0);\n    _defineProperty(this, \"_nativeModule\", void 0);\n    _defineProperty(this, \"_config\", void 0);\n    this._app = app;\n    this._nativeModule = null;\n    this._config = Object.assign({}, config);\n  }\n  get app() {\n    return this._app;\n  }\n  get emitter() {\n    return SharedEventEmitter;\n  }\n  eventNameForApp() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return `${this.app.name}-${args.join('-')}`;\n  }\n  get native() {\n    if (this._nativeModule) {\n      return this._nativeModule;\n    }\n    this._nativeModule = getNativeModule(this);\n    return this._nativeModule;\n  }\n}\n\n// Instance of checks don't work once compiled\n_defineProperty(AppModule, \"__extended__\", {});\nAppModule.__extended__ = {};\n//# sourceMappingURL=Module.js.map"]},"metadata":{},"sourceType":"module"}
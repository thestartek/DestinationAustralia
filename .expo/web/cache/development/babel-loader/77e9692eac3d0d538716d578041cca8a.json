{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PhotoUploader from \"./PhotoUploader\";\nimport ChooseCity from \"./ChooseCity\";\nimport ChooseCategory from \"./ChooseCategory\";\nimport { Button } from \"react-native-elements/dist/buttons/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar UploadPostSchema = Yup.object().shape({\n  caption: [Yup.string().min(2, \"Caption must be at least 2 characters long\"), Yup.string().max(2200, \" Character limit reached\")]\n});\n\nvar NewPostForm = function NewPostForm(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(Formik, {\n    initialValues: {\n      caption: \"\",\n      photo: \"\",\n      category: \"\",\n      city: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n      console.log(\"Your post was submitted succefully\");\n      navigation.goBack();\n    },\n    validateonSchema: UploadPostSchema,\n    validateOnMount: true,\n    children: function children(_ref2) {\n      var handleBlur = _ref2.handleBlur,\n          handleChange = _ref2.handleChange,\n          handleSubmit = _ref2.handleSubmit,\n          values = _ref2.values,\n          errors = _ref2.errors,\n          isValid = _ref2.isValid;\n      return _jsx(_Fragment, {\n        children: _jsxs(View, {\n          children: [_jsx(TextInput, {\n            style: styles.postBox,\n            placeholder: \"Share something...\",\n            placeholderTextColor: \"gray\",\n            multiline: true,\n            onChangeText: handleChange(\"caption\"),\n            onBlur: handleBlur(\"caption\"),\n            value: values.caption\n          }), _jsxs(View, {\n            style: styles.optionsBar,\n            children: [_jsx(PhotoUploader, {}), _jsxs(View, {\n              children: [_jsx(ChooseCategory, {}), _jsx(ChooseCity, {})]\n            })]\n          }), _jsx(Button, {\n            style: styles.postButton(isValid),\n            onPress: handleSubmit,\n            title: \"Post\"\n          })]\n        })\n      });\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  headerContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginHorizontal: 10,\n    marginBottom: 10\n  },\n  postBox: {\n    height: 200,\n    marginHorizontal: 10,\n    marginTop: 5,\n    fontSize: 16,\n    backgroundColor: \"white\",\n    borderRadius: 8,\n    padding: 5\n  },\n  imageContainer: {\n    flexDirection: \"row\"\n  },\n  postButton: function postButton(isValid) {\n    return {\n      backgroundColor: isValid ? \"#1267E9\" : \"#99c4e0\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: 42,\n      borderRadius: 10,\n      marginVertical: 10,\n      marginHorizontal: 60\n    };\n  },\n  optionsBar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginHorizontal: 10,\n    marginVertical: 10,\n    backgroundColor: \"white\",\n    borderRadius: 10\n  },\n  blankSpace: {\n    height: 5,\n    width: \"100%\",\n    backgroundColor: \"lightgrey\"\n  }\n});\nexport default NewPostForm;","map":{"version":3,"names":["React","Yup","Formik","PhotoUploader","ChooseCity","ChooseCategory","Button","UploadPostSchema","object","shape","caption","string","min","max","NewPostForm","navigation","photo","category","city","values","console","log","goBack","handleBlur","handleChange","handleSubmit","errors","isValid","styles","postBox","optionsBar","postButton","StyleSheet","create","headerContainer","flexDirection","justifyContent","alignItems","marginHorizontal","marginBottom","height","marginTop","fontSize","backgroundColor","borderRadius","padding","imageContainer","minHeight","marginVertical","blankSpace","width"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/components/newPost/NewPostForm.js"],"sourcesContent":["import { View, StyleSheet } from \"react-native\";\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { TextInput } from \"react-native\";\nimport PhotoUploader from \"./PhotoUploader\";\n\nimport ChooseCity from \"./ChooseCity\";\nimport ChooseCategory from \"./ChooseCategory\";\nimport { Button } from \"react-native-elements/dist/buttons/Button\";\n\nconst UploadPostSchema = Yup.object().shape({\n  //imageUrl: Yup.string().url().required('Image required'),\n  caption: [\n    Yup.string().min(2, \"Caption must be at least 2 characters long\"),\n    Yup.string().max(2200, \" Character limit reached\"),\n  ],\n});\n\nconst NewPostForm = ({ navigation }) => {\n  return (\n    <Formik\n      initialValues={{ caption: \"\", photo: \"\", category: \"\", city: \"\" }}\n      onSubmit={(values) => {\n        //uploadPostToFirebase(values.caption, values.photo)\n        console.log(values);\n        console.log(\"Your post was submitted succefully\");\n        navigation.goBack();\n      }}\n      validateonSchema={UploadPostSchema}\n      validateOnMount={true}\n    >\n      {({\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        values,\n        errors,\n        isValid,\n      }) => (\n        <>\n          <View>\n            <TextInput\n              style={styles.postBox}\n              placeholder=\"Share something...\"\n              placeholderTextColor=\"gray\"\n              multiline={true}\n              onChangeText={handleChange(\"caption\")}\n              onBlur={handleBlur(\"caption\")}\n              value={values.caption}\n            />\n\n            <View style={styles.optionsBar}>\n              <PhotoUploader />\n              <View>\n                <ChooseCategory />\n                <ChooseCity />\n              </View>\n            </View>\n\n            <Button\n              style={styles.postButton(isValid)}\n              onPress={handleSubmit}\n              title=\"Post\"\n            ></Button>\n          </View>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginHorizontal: 10,\n    marginBottom: 10,\n  },\n\n  postBox: {\n    height: 200,\n    marginHorizontal: 10,\n    marginTop: 5,\n    fontSize: 16,\n    backgroundColor: \"white\",\n    // borderWidth: 0.25,\n    // borderColor: 'gray',\n    borderRadius: 8,\n    padding: 5,\n  },\n\n  imageContainer: {\n    flexDirection: \"row\",\n  },\n\n  postButton: (isValid) => ({\n    backgroundColor: isValid ? \"#1267E9\" : \"#99c4e0\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: 42,\n    borderRadius: 10,\n    marginVertical: 10,\n    marginHorizontal: 60,\n  }),\n\n  optionsBar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginHorizontal: 10,\n    marginVertical: 10,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n\n  blankSpace: {\n    height: 5,\n    width: \"100%\",\n    backgroundColor: \"lightgrey\",\n  },\n});\nexport default NewPostForm;\n"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,OAAOC,aAAP;AAEA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,SAASC,MAAT,QAAuB,2CAAvB;;;;AAEA,IAAMC,gBAAgB,GAAGN,GAAG,CAACO,MAAJ,GAAaC,KAAb,CAAmB;EAE1CC,OAAO,EAAE,CACPT,GAAG,CAACU,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoB,4CAApB,CADO,EAEPX,GAAG,CAACU,MAAJ,GAAaE,GAAb,CAAiB,IAAjB,EAAuB,0BAAvB,CAFO;AAFiC,CAAnB,CAAzB;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;EACtC,OACE,KAAC,MAAD;IACE,aAAa,EAAE;MAAEL,OAAO,EAAE,EAAX;MAAeM,KAAK,EAAE,EAAtB;MAA0BC,QAAQ,EAAE,EAApC;MAAwCC,IAAI,EAAE;IAA9C,CADjB;IAEE,QAAQ,EAAE,kBAACC,MAAD,EAAY;MAEpBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAC,OAAO,CAACC,GAAR,CAAY,oCAAZ;MACAN,UAAU,CAACO,MAAX;IACD,CAPH;IAQE,gBAAgB,EAAEf,gBARpB;IASE,eAAe,EAAE,IATnB;IAAA,UAWG;MAAA,IACCgB,UADD,SACCA,UADD;MAAA,IAECC,YAFD,SAECA,YAFD;MAAA,IAGCC,YAHD,SAGCA,YAHD;MAAA,IAICN,MAJD,SAICA,MAJD;MAAA,IAKCO,MALD,SAKCA,MALD;MAAA,IAMCC,OAND,SAMCA,OAND;MAAA,OAQC;QAAA,UACE,MAAC,IAAD;UAAA,WACE,KAAC,SAAD;YACE,KAAK,EAAEC,MAAM,CAACC,OADhB;YAEE,WAAW,EAAC,oBAFd;YAGE,oBAAoB,EAAC,MAHvB;YAIE,SAAS,EAAE,IAJb;YAKE,YAAY,EAAEL,YAAY,CAAC,SAAD,CAL5B;YAME,MAAM,EAAED,UAAU,CAAC,SAAD,CANpB;YAOE,KAAK,EAAEJ,MAAM,CAACT;UAPhB,EADF,EAWE,MAAC,IAAD;YAAM,KAAK,EAAEkB,MAAM,CAACE,UAApB;YAAA,WACE,KAAC,aAAD,KADF,EAEE,MAAC,IAAD;cAAA,WACE,KAAC,cAAD,KADF,EAEE,KAAC,UAAD,KAFF;YAAA,EAFF;UAAA,EAXF,EAmBE,KAAC,MAAD;YACE,KAAK,EAAEF,MAAM,CAACG,UAAP,CAAkBJ,OAAlB,CADT;YAEE,OAAO,EAAEF,YAFX;YAGE,KAAK,EAAC;UAHR,EAnBF;QAAA;MADF,EARD;IAAA;EAXH,EADF;AAkDD,CAnDD;;AAqDA,IAAMG,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BC,eAAe,EAAE;IACfC,aAAa,EAAE,KADA;IAEfC,cAAc,EAAE,eAFD;IAGfC,UAAU,EAAE,QAHG;IAIfC,gBAAgB,EAAE,EAJH;IAKfC,YAAY,EAAE;EALC,CADc;EAS/BV,OAAO,EAAE;IACPW,MAAM,EAAE,GADD;IAEPF,gBAAgB,EAAE,EAFX;IAGPG,SAAS,EAAE,CAHJ;IAIPC,QAAQ,EAAE,EAJH;IAKPC,eAAe,EAAE,OALV;IAQPC,YAAY,EAAE,CARP;IASPC,OAAO,EAAE;EATF,CATsB;EAqB/BC,cAAc,EAAE;IACdX,aAAa,EAAE;EADD,CArBe;EAyB/BJ,UAAU,EAAE,oBAACJ,OAAD;IAAA,OAAc;MACxBgB,eAAe,EAAEhB,OAAO,GAAG,SAAH,GAAe,SADf;MAExBU,UAAU,EAAE,QAFY;MAGxBD,cAAc,EAAE,QAHQ;MAIxBW,SAAS,EAAE,EAJa;MAKxBH,YAAY,EAAE,EALU;MAMxBI,cAAc,EAAE,EANQ;MAOxBV,gBAAgB,EAAE;IAPM,CAAd;EAAA,CAzBmB;EAmC/BR,UAAU,EAAE;IACVK,aAAa,EAAE,KADL;IAEVC,cAAc,EAAE,eAFN;IAGVE,gBAAgB,EAAE,EAHR;IAIVU,cAAc,EAAE,EAJN;IAKVL,eAAe,EAAE,OALP;IAMVC,YAAY,EAAE;EANJ,CAnCmB;EA4C/BK,UAAU,EAAE;IACVT,MAAM,EAAE,CADE;IAEVU,KAAK,EAAE,MAFG;IAGVP,eAAe,EAAE;EAHP;AA5CmB,CAAlB,CAAf;AAkDA,eAAe7B,WAAf"},"metadata":{},"sourceType":"module"}
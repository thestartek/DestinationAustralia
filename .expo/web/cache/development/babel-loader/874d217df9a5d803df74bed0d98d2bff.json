{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { withInternalTheme } from \"../../core/theming\";\nimport Card from \"../Card/Card\";\nimport Text from \"../Typography/Text\";\nimport FAB from \"./FAB\";\nimport { getFABGroupColors } from \"./utils\";\nvar FABGroup = function FABGroup(_ref) {\n  var actions = _ref.actions,\n    icon = _ref.icon,\n    open = _ref.open,\n    _onPress = _ref.onPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    theme = _ref.theme,\n    style = _ref.style,\n    fabStyle = _ref.fabStyle,\n    visible = _ref.visible,\n    testID = _ref.testID,\n    onStateChange = _ref.onStateChange,\n    colorProp = _ref.color,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    customBackdropColor = _ref.backdropColor;\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n    backdrop = _React$useRef.current;\n  var animations = React.useRef(actions.map(function () {\n    return new Animated.Value(open ? 1 : 0);\n  }));\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    prevActions = _React$useState2[0],\n    setPrevActions = _React$useState2[1];\n  var scale = theme.animation.scale;\n  var isV3 = theme.isV3;\n  React.useEffect(function () {\n    if (open) {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), Animated.stagger(isV3 ? 15 : 50 * scale, animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      }).reverse())]).start();\n    } else {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      })].concat(_toConsumableArray(animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      })))).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n  var close = function close() {\n    return onStateChange({\n      open: false\n    });\n  };\n  var toggle = function toggle() {\n    return onStateChange({\n      open: !open\n    });\n  };\n  var _getFABGroupColors = getFABGroupColors({\n      theme: theme,\n      customBackdropColor: customBackdropColor\n    }),\n    labelColor = _getFABGroupColors.labelColor,\n    backdropColor = _getFABGroupColors.backdropColor,\n    stackedFABBackgroundColor = _getFABGroupColors.stackedFABBackgroundColor;\n  var backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  var opacities = animations.current;\n  var scales = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n  });\n  var translations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [24, -8]\n    }) : -8;\n  });\n  var labelTranslations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [8, -8]\n    }) : -8;\n  });\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n    top = _useSafeAreaInsets.top,\n    bottom = _useSafeAreaInsets.bottom,\n    right = _useSafeAreaInsets.right,\n    left = _useSafeAreaInsets.left;\n  var containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top\n  };\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map(function (_, i) {\n      return animations.current[i] || new Animated.Value(open ? 1 : 0);\n    });\n    setPrevActions(actions);\n  }\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, containerPaddings, style]\n  }, React.createElement(TouchableWithoutFeedback, {\n    accessibilityRole: \"button\",\n    onPress: close\n  }, React.createElement(Animated.View, {\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: backdropColor\n    }]\n  })), React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map(function (it, i) {\n    var _it$labelTextColor;\n    var labelTextStyle = _objectSpread({\n      color: (_it$labelTextColor = it.labelTextColor) !== null && _it$labelTextColor !== void 0 ? _it$labelTextColor : labelColor\n    }, isV3 ? theme.fonts.titleMedium : {});\n    var marginHorizontal = typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n    var accessibilityLabel = typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label;\n    var size = typeof it.size !== 'undefined' ? it.size : 'small';\n    return React.createElement(View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal: marginHorizontal\n      }],\n      pointerEvents: open ? 'box-none' : 'none'\n    }, it.label && React.createElement(View, null, React.createElement(Card, _extends({\n      accessibilityHint: it.accessibilityHint,\n      style: [styles.containerStyle, {\n        transform: [isV3 ? {\n          translateY: labelTranslations[i]\n        } : {\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, isV3 && styles.v3ContainerStyle, it.containerStyle],\n      onPress: function onPress(e) {\n        it.onPress(e);\n        close();\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\"\n    }, isV3 && {\n      elevation: 0\n    }), React.createElement(Text, {\n      variant: \"titleMedium\",\n      style: [labelTextStyle, it.labelStyle]\n    }, it.label))), React.createElement(FAB, {\n      size: size,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: stackedFABBackgroundColor\n      }, isV3 && {\n        transform: [{\n          translateY: translations[i]\n        }]\n      }, it.style],\n      onPress: function onPress(e) {\n        it.onPress(e);\n        close();\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      testID: it.testID,\n      visible: open\n    }));\n  })), React.createElement(FAB, {\n    onPress: function onPress(e) {\n      _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n      toggle();\n    },\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    visible: visible,\n    testID: testID,\n    variant: variant\n  })));\n};\nFABGroup.displayName = 'FAB.Group';\nexport default withInternalTheme(FABGroup);\nvar FABGroupWithTheme = withInternalTheme(FABGroup);\nexport { FABGroupWithTheme as FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0\n  }\n});","map":{"version":3,"sources":["FABGroup.tsx"],"names":["React","useSafeAreaInsets","withInternalTheme","Card","Text","FAB","getFABGroupColors","FABGroup","actions","icon","open","onPress","accessibilityLabel","theme","style","fabStyle","visible","testID","onStateChange","color","colorProp","variant","backdropColor","customBackdropColor","current","backdrop","useRef","Animated","Value","animations","map","prevActions","setPrevActions","useState","scale","animation","isV3","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","close","toggle","labelColor","stackedFABBackgroundColor","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","translations","labelTranslations","top","bottom","right","left","containerPaddings","paddingBottom","paddingRight","paddingLeft","paddingTop","length","_","i","styles","container","backgroundColor","safeArea","it","labelTextStyle","labelTextColor","fonts","titleMedium","marginHorizontal","size","label","item","accessibilityHint","containerStyle","transform","translateY","v3ContainerStyle","e","elevation","labelStyle","expanded","fab","displayName","FABGroupWithTheme","StyleSheet","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport Card from '../Card/Card';\nimport type { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\nimport FAB from './FAB';\nimport { getFABGroupColors } from './utils';\n\nexport type Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `accessibilityHint`: accessibility hint for the action\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\n   * - `testID`: testID to be used on tests\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    accessibilityHint?: string;\n    style?: StyleProp<ViewStyle>;\n    containerStyle?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<TextStyle>;\n    onPress: (e: GestureResponderEvent) => void;\n    size?: 'small' | 'medium';\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/fab-group.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           visible\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  testID,\n  onStateChange,\n  color: colorProp,\n  variant = 'primary',\n  backdropColor: customBackdropColor,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: (e: GestureResponderEvent) => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n  const { isV3 } = theme;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          isV3 ? 15 : 50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\n    getFABGroupColors({ theme, customBackdropColor });\n\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1],\n        })\n      : 1\n  );\n\n  const translations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [24, -8],\n        })\n      : -8\n  );\n  const labelTranslations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [8, -8],\n        })\n      : -8\n  );\n\n  const { top, bottom, right, left } = useSafeAreaInsets();\n  const containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top,\n  };\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.container, containerPaddings, style]}\n    >\n      <TouchableWithoutFeedback accessibilityRole=\"button\" onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: backdropColor,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <View pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => {\n            const labelTextStyle = {\n              color: it.labelTextColor ?? labelColor,\n              ...(isV3 ? theme.fonts.titleMedium : {}),\n            };\n            const marginHorizontal =\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n            const accessibilityLabel =\n              typeof it.accessibilityLabel !== 'undefined'\n                ? it.accessibilityLabel\n                : it.label;\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\n\n            return (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={[\n                  styles.item,\n                  {\n                    marginHorizontal,\n                  },\n                ]}\n                pointerEvents={open ? 'box-none' : 'none'}\n              >\n                {it.label && (\n                  <View>\n                    <Card\n                      accessibilityHint={it.accessibilityHint}\n                      style={\n                        [\n                          styles.containerStyle,\n                          {\n                            transform: [\n                              isV3\n                                ? { translateY: labelTranslations[i] }\n                                : { scale: scales[i] },\n                            ],\n                            opacity: opacities[i],\n                          },\n                          isV3 && styles.v3ContainerStyle,\n                          it.containerStyle,\n                        ] as StyleProp<ViewStyle>\n                      }\n                      onPress={(e) => {\n                        it.onPress(e);\n                        close();\n                      }}\n                      accessibilityLabel={accessibilityLabel}\n                      accessibilityRole=\"button\"\n                      {...(isV3 && { elevation: 0 })}\n                    >\n                      <Text\n                        variant=\"titleMedium\"\n                        style={[labelTextStyle, it.labelStyle]}\n                      >\n                        {it.label}\n                      </Text>\n                    </Card>\n                  </View>\n                )}\n                <FAB\n                  size={size}\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: stackedFABBackgroundColor,\n                      },\n                      isV3 && { transform: [{ translateY: translations[i] }] },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={(e) => {\n                    it.onPress(e);\n                    close();\n                  }}\n                  accessibilityLabel={accessibilityLabel}\n                  accessibilityRole=\"button\"\n                  testID={it.testID}\n                  visible={open}\n                />\n              </View>\n            );\n          })}\n        </View>\n        <FAB\n          onPress={(e) => {\n            onPress?.(e);\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          testID={testID}\n          variant={variant}\n        />\n      </View>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withInternalTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withInternalTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, createContext } from 'react';\nimport TabNavigator from \"./components/TabNavigator\";\nimport LoginStack from \"./components/LoginStack\";\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from \"./Firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LoginContex = createContext();\n\nvar AuthNavigation = function AuthNavigation(_ref) {\n  var Children = _ref.Children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var useHandler = function useHandler(user) {\n    return user ? setCurrentUser(user) : setCurrentUser(null);\n  };\n\n  useEffect(function () {\n    return onAuthStateChanged(auth, function (user) {\n      return useHandler(user);\n    });\n  }, []);\n  return currentUser ? _jsx(TabNavigator, {}) : _jsx(LoginStack, {});\n};\n\nexport default AuthNavigation;","map":{"version":3,"names":["React","useEffect","useState","createContext","TabNavigator","LoginStack","onAuthStateChanged","auth","LoginContex","AuthNavigation","Children","currentUser","setCurrentUser","useHandler","user"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/AuthNavigation.js"],"sourcesContent":["import React, { useEffect, useState, createContext } from 'react'\nimport TabNavigator from './components/TabNavigator'\nimport LoginStack from './components/LoginStack'\nimport { onAuthStateChanged } from 'firebase/auth'\nimport { auth } from './Firebase'\n\nconst LoginContex = createContext()\n\nconst AuthNavigation = ({Children}) => {\n    // const [loggedIn, setLoggedIn] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState(null)\n\n  const useHandler = user =>\n    user ? setCurrentUser(user) : setCurrentUser(null)\n  \n    useEffect(() => \n    onAuthStateChanged(auth, user => useHandler(user)),\n  \n  [])\n    return currentUser ? <TabNavigator/> : <LoginStack/>\n\n    // <LoginContex.Provider value={{loggedIn, setLoggedIn}}>\n    //     {Children}\n    // </LoginContex.Provider>\n    \n    \n}\n\nexport default AuthNavigation;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,IAAT;;AAEA,IAAMC,WAAW,GAAGL,aAAa,EAAjC;;AAEA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,OAAgB;EAAA,IAAdC,QAAc,QAAdA,QAAc;;EAGrC,gBAAsCR,QAAQ,CAAC,IAAD,CAA9C;EAAA;EAAA,IAAOS,WAAP;EAAA,IAAoBC,cAApB;;EAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI;IAAA,OACrBA,IAAI,GAAGF,cAAc,CAACE,IAAD,CAAjB,GAA0BF,cAAc,CAAC,IAAD,CADvB;EAAA,CAAvB;;EAGEX,SAAS,CAAC;IAAA,OACVK,kBAAkB,CAACC,IAAD,EAAO,UAAAO,IAAI;MAAA,OAAID,UAAU,CAACC,IAAD,CAAd;IAAA,CAAX,CADR;EAAA,CAAD,EAGX,EAHW,CAAT;EAIA,OAAOH,WAAW,GAAG,KAAC,YAAD,KAAH,GAAqB,KAAC,UAAD,KAAvC;AAOH,CAnBD;;AAqBA,eAAeF,cAAf"},"metadata":{},"sourceType":"module"}
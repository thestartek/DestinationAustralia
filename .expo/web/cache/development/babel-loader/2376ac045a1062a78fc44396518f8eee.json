{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\nimport NotificationPresenter from \"./NotificationPresenterModule\";\nvar warningMessageShown = false;\nexport default function presentNotificationAsync(_x) {\n  return _presentNotificationAsync.apply(this, arguments);\n}\nfunction _presentNotificationAsync() {\n  _presentNotificationAsync = _asyncToGenerator(function* (content) {\n    var identifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : uuidv4();\n    if (__DEV__ && !warningMessageShown) {\n      console.warn('`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.');\n      warningMessageShown = true;\n    }\n    if (!NotificationPresenter.presentNotificationAsync) {\n      throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n    }\n    return yield NotificationPresenter.presentNotificationAsync(identifier, content);\n  });\n  return _presentNotificationAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/presentNotificationAsync.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAmB,QAAQ,mBAAmB;AACvD,SAAS,EAAE,IAAI,MAAM,QAAQ,MAAM;AAEnC,OAAO,qBAAqB;AAG5B,IAAI,mBAAmB,GAAG,KAAK;AAM/B,wBAA8B,wBAAwB;EAAA;AAAA;AAgBrD;EAAA,8CAhBc,WACb,OAAiC,EACJ;IAAA,IAA7B,UAAA,uEAAqB,MAAM,EAAE;IAE7B,IAAI,OAAO,IAAI,CAAC,mBAAmB,EAAE;MACnC,OAAO,CAAC,IAAI,CACV,qMAAqM,CACtM;MACD,mBAAmB,GAAG,IAAI;IAC3B;IAED,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,EAAE;MACnD,MAAM,IAAI,mBAAmB,CAAC,eAAe,EAAE,0BAA0B,CAAC;IAC3E;IAED,aAAa,qBAAqB,CAAC,wBAAwB,CAAC,UAAU,EAAE,OAAO,CAAC;EAClF,CAAC;EAAA;AAAA","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { NotificationContentInput } from './Notifications.types';\n\nlet warningMessageShown = false;\n\n/**\n * @deprecated Use `scheduleNotificationAsync` with an explicit notification handler.\n * [Read more](https://expo.fyi/presenting-notifications-deprecated).\n */\nexport default async function presentNotificationAsync(\n  content: NotificationContentInput,\n  identifier: string = uuidv4()\n): Promise<string> {\n  if (__DEV__ && !warningMessageShown) {\n    console.warn(\n      '`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.'\n    );\n    warningMessageShown = true;\n  }\n\n  if (!NotificationPresenter.presentNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n  }\n\n  return await NotificationPresenter.presentNotificationAsync(identifier, content);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
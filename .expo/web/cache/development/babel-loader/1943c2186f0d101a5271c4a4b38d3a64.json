{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport Animated from \"react-native-reanimated\";\nimport { useRef } from \"react\";\nimport { onGestureEvent, panGestureHandler, pinchGestureHandler, rotationGestureHandler, tapGestureHandler, scrollHandler } from \"./Gesture\";\nimport { vec } from \"./Vectors\";\nimport { loop } from \"./AnimationRunners\";\nvar Clock = Animated.Clock,\n    Value = Animated.Value,\n    diff = Animated.diff,\n    set = Animated.set,\n    useCode = Animated.useCode,\n    debug = Animated.debug,\n    block = Animated.block;\nexport function useConst(initialValue) {\n  var ref = useRef();\n\n  if (ref.current === undefined) {\n    ref.current = {\n      value: typeof initialValue === \"function\" ? initialValue() : initialValue\n    };\n  }\n\n  return ref.current.value;\n}\nexport var useGestureHandler = function useGestureHandler(nativeEvent) {\n  return useConst(function () {\n    return onGestureEvent(nativeEvent);\n  });\n};\nexport var usePanGestureHandler = function usePanGestureHandler() {\n  return useConst(function () {\n    return panGestureHandler();\n  });\n};\nexport var useRotationGestureHandler = function useRotationGestureHandler() {\n  return useConst(function () {\n    return rotationGestureHandler();\n  });\n};\nexport var usePinchGestureHandler = function usePinchGestureHandler() {\n  return useConst(function () {\n    return pinchGestureHandler();\n  });\n};\nexport var useTapGestureHandler = function useTapGestureHandler() {\n  return useConst(function () {\n    return tapGestureHandler();\n  });\n};\nexport var useScrollHandler = function useScrollHandler() {\n  return useConst(function () {\n    return scrollHandler();\n  });\n};\nexport var useVector = function useVector() {\n  for (var _len = arguments.length, defaultValues = new Array(_len), _key = 0; _key < _len; _key++) {\n    defaultValues[_key] = arguments[_key];\n  }\n\n  return useConst(function () {\n    return vec.createValue.apply(vec, defaultValues);\n  });\n};\nexport var useVectors = function useVectors() {\n  for (var _len2 = arguments.length, defaultValues = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    defaultValues[_key2] = arguments[_key2];\n  }\n\n  return useConst(function () {\n    return defaultValues.map(function (values) {\n      return vec.createValue.apply(vec, _toConsumableArray(values));\n    });\n  });\n};\nexport var useClock = function useClock() {\n  return useConst(function () {\n    return new Clock();\n  });\n};\nexport var useValue = function useValue(value) {\n  return useConst(function () {\n    return new Value(value);\n  });\n};\nexport var usePhysicsState = function usePhysicsState() {\n  return {\n    time: useValue(0),\n    position: useValue(0),\n    velocity: useValue(0),\n    finished: useValue(0)\n  };\n};\nexport var useSpringConfig = function useSpringConfig(config) {\n  return _objectSpread({\n    toValue: useValue(0),\n    damping: 15,\n    mass: 1,\n    stiffness: 150,\n    overshootClamping: false,\n    restSpeedThreshold: 1,\n    restDisplacementThreshold: 1\n  }, config);\n};\nexport var useLoop = function useLoop() {\n  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n  var boomerang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var progress = useValue(0);\n  useCode(function () {\n    return set(progress, loop({\n      duration: duration,\n      boomerang: boomerang\n    }));\n  }, [progress]);\n  return progress;\n};\nexport var useValues = function useValues() {\n  for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    values[_key3] = arguments[_key3];\n  }\n\n  return useConst(function () {\n    return values.map(function (v) {\n      return new Value(v);\n    });\n  });\n};\nexport var useClocks = function useClocks(numberOfClocks) {\n  return useConst(function () {\n    return new Array(numberOfClocks).fill(0).map(function () {\n      return new Clock();\n    });\n  });\n};\nexport var useDiff = function useDiff(node) {\n  var dDiff = useValue(0);\n  useCode(function () {\n    return set(dDiff, diff(node));\n  }, [dDiff, node]);\n  return dDiff;\n};\nexport var useDebug = function useDebug(values) {\n  var keys = Object.keys(values);\n  useCode(function () {\n    return block(keys.map(function (name) {\n      return debug(name, values[name]);\n    }));\n  }, [keys, values]);\n};","map":{"version":3,"sources":["Hooks.ts"],"names":["Clock","Value","diff","set","useCode","debug","block","Animated","ref","useRef","value","initialValue","useGestureHandler","useConst","onGestureEvent","usePanGestureHandler","panGestureHandler","useRotationGestureHandler","rotationGestureHandler","usePinchGestureHandler","pinchGestureHandler","useTapGestureHandler","tapGestureHandler","useScrollHandler","scrollHandler","useVector","defaultValues","vec","useVectors","useClock","useValue","usePhysicsState","time","position","velocity","finished","useSpringConfig","toValue","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","useLoop","duration","boomerang","progress","loop","useValues","values","useClocks","useDiff","dDiff","useDebug","keys","Object"],"mappings":"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","sourcesContent":["import Animated from \"react-native-reanimated\";\nimport { useRef } from \"react\";\n\nimport {\n  onGestureEvent,\n  panGestureHandler,\n  pinchGestureHandler,\n  rotationGestureHandler,\n  tapGestureHandler,\n  scrollHandler,\n} from \"./Gesture\";\nimport type { Vector } from \"./Vectors\";\nimport { vec } from \"./Vectors\";\nimport { loop } from \"./AnimationRunners\";\n\nconst { Clock, Value, diff, set, useCode, debug, block } = Animated;\n\nexport function useConst<T>(initialValue: T | (() => T)): T {\n  const ref = useRef<{ value: T }>();\n  if (ref.current === undefined) {\n    // Box the value in an object so we can tell if it's initialized even if the initializer\n    // returns/is undefined\n    ref.current = {\n      value:\n        typeof initialValue === \"function\"\n          ? // eslint-disable-next-line @typescript-eslint/ban-types\n            (initialValue as Function)()\n          : initialValue,\n    };\n  }\n  return ref.current.value;\n}\n\nexport const useGestureHandler = (\n  nativeEvent: Parameters<typeof onGestureEvent>[0]\n) => useConst(() => onGestureEvent(nativeEvent));\n\nexport const usePanGestureHandler = () => useConst(() => panGestureHandler());\nexport const useRotationGestureHandler = () =>\n  useConst(() => rotationGestureHandler());\nexport const usePinchGestureHandler = () =>\n  useConst(() => pinchGestureHandler());\nexport const useTapGestureHandler = () => useConst(() => tapGestureHandler());\nexport const useScrollHandler = () => useConst(() => scrollHandler());\n\ntype Atomic = string | number | boolean;\n\nexport const useVector = (\n  ...defaultValues: Parameters<typeof vec.createValue>\n) => useConst(() => vec.createValue(...defaultValues));\n\ntype P = Parameters<typeof vec.createValue>;\ntype R = Vector<Animated.Value<number>>;\ntype UseVectors = {\n  (...v: [P]): [R];\n  (...v: [P, P]): [R, R];\n  (...v: [P, P, P]): [R, R, R];\n  (...v: [P, P, P, P]): [R, R, R, R];\n  (...v: [P, P, P, P, P]): [R, R, R, R, R];\n  (...v: [P, P, P, P, P, P]): [R, R, R, R, R, R];\n  (...v: P[]): R[];\n};\n\nexport const useVectors = (((\n  ...defaultValues: Parameters<typeof vec.createValue>[]\n) =>\n  useConst(() =>\n    defaultValues.map((values) => vec.createValue(...values))\n  )) as unknown) as UseVectors;\n\nexport const useClock = () => useConst(() => new Clock());\n\nexport const useValue = <V extends Atomic>(value: V) =>\n  useConst(() => new Value(value));\n\nexport const usePhysicsState = () => ({\n  time: useValue(0),\n  position: useValue(0),\n  velocity: useValue(0),\n  finished: useValue(0),\n});\n\nexport const useSpringConfig = (\n  config: Partial<Omit<Animated.SpringConfig, \"toValue\">>\n) => ({\n  toValue: useValue(0),\n  damping: 15,\n  mass: 1,\n  stiffness: 150,\n  overshootClamping: false,\n  restSpeedThreshold: 1,\n  restDisplacementThreshold: 1,\n  ...config,\n});\n\nexport const useLoop = (duration = 1000, boomerang = true) => {\n  const progress = useValue(0);\n  useCode(() => set(progress, loop({ duration, boomerang })), [progress]);\n  return progress;\n};\n\ntype UseValues = {\n  <V extends Atomic>(v: V): [Animated.Value<V>];\n  <V1 extends Atomic, V2 extends Atomic>(v1: V1, v2: V2): [\n    Animated.Value<V1>,\n    Animated.Value<V2>\n  ];\n  <V1 extends Atomic, V2 extends Atomic, V3 extends Atomic>(\n    v1: V1,\n    v2: V2,\n    v3: V3\n  ): [Animated.Value<V1>, Animated.Value<V2>, Animated.Value<V3>];\n  <V1 extends Atomic, V2 extends Atomic, V3 extends Atomic, V4 extends Atomic>(\n    v1: V1,\n    v2: V2,\n    v3: V3,\n    v4: V4\n  ): [\n    Animated.Value<V1>,\n    Animated.Value<V2>,\n    Animated.Value<V3>,\n    Animated.Value<V4>\n  ];\n  <\n    V1 extends Atomic,\n    V2 extends Atomic,\n    V3 extends Atomic,\n    V4 extends Atomic,\n    V5 extends Atomic\n  >(\n    v1: V1,\n    v2: V2,\n    v3: V3,\n    v4: V4,\n    v5: V5\n  ): [\n    Animated.Value<V1>,\n    Animated.Value<V2>,\n    Animated.Value<V3>,\n    Animated.Value<V4>,\n    Animated.Value<V5>\n  ];\n  <V extends Atomic>(...values: V[]): Animated.Value<V>[];\n};\n\nexport const useValues = ((<V extends Atomic>(...values: [V, ...V[]]) =>\n  useConst(() => values.map((v) => new Value(v)))) as unknown) as UseValues;\n\nexport const useClocks = (numberOfClocks: number): Animated.Clock[] =>\n  useConst(() => new Array(numberOfClocks).fill(0).map(() => new Clock()));\n\nexport const useDiff = (node: Animated.Node<number>) => {\n  const dDiff = useValue(0);\n  useCode(() => set(dDiff, diff(node)), [dDiff, node]);\n  return dDiff;\n};\n\nexport const useDebug = (values: { [key: string]: Animated.Node<number> }) => {\n  const keys = Object.keys(values);\n  useCode(() => block(keys.map((name) => debug(name, values[name]))), [\n    keys,\n    values,\n  ]);\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../../Firebase\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { ActivityIndicator } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResetPasswordScreen = function ResetPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var resetPassword = function resetPassword() {\n    sendPasswordResetEmail(auth, email).then(function () {\n      Alert.alert(\"Password reset email sent! If you didn't receive the link in your Inbox, please check the Spam folder.\");\n      navigation.goBack();\n      setLoading(false);\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      Alert.alert(errorCode);\n      setLoading(false);\n    });\n    setLoading(true);\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.logoContainer,\n        children: _jsx(Image, {\n          source: {\n            uri: \"https://firebasestorage.googleapis.com/v0/b/journeytoaustralia-b21d4.appspot.com/o/appIcon_transparent.png?alt=media&token=b6a92da5-ff9d-4d51-9e32-3bf1b7e44801\"\n          },\n          style: {\n            height: 100,\n            width: 100,\n            margin: 30\n          }\n        })\n      }), _jsx(View, {\n        children: _jsxs(Text, {\n          style: {\n            fontSize: 16,\n            marginTop: 20\n          },\n          children: [\" \", \"Receive an email link\", \" \"]\n        })\n      }), _jsx(View, {\n        children: _jsx(TextInput, {\n          placeholder: \"Your email address\",\n          autoCapitalize: \"none\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          style: styles.textInput\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: !email ? _jsx(View, {\n          style: [styles.button, styles.buttonDisabled],\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Reset password\"\n          })\n        }) : _jsx(TouchableOpacity, {\n          onPress: resetPassword,\n          style: styles.button,\n          children: loading ? _jsx(ActivityIndicator, {}) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Reset password\"\n          })\n        })\n      })]\n    })\n  });\n};\nexport default ResetPasswordScreen;\nvar styles = StyleSheet.create({\n  logoContainer: {\n    alignItems: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"lightgrey\",\n    marginTop: 10,\n    marginBottom: 5,\n    width: 300\n  },\n  buttonContainer: {\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 30\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"100%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonDisabled: {\n    backgroundColor: \"grey\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","SafeAreaView","sendPasswordResetEmail","ActivityIndicator","ResetPasswordScreen","navigation","email","setEmail","loading","setLoading","resetPassword","then","Alert","alert","goBack","catch","error","errorCode","code","errorMessage","message","styles","container","logoContainer","uri","height","width","margin","fontSize","marginTop","text","textInput","buttonContainer","button","buttonDisabled","buttonText","StyleSheet","create","alignItems","flex","justifyContent","backgroundColor","padding","borderRadius","borderWidth","borderColor","marginBottom","color","fontWeight"],"sources":["C:/Users/awasthit/journeytoaustralia/components/login/ResetPasswordScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  Image,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { auth } from \"../../Firebase\";\r\nimport { Alert } from \"react-native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { sendPasswordResetEmail } from \"firebase/auth\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\n\r\nconst ResetPasswordScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const resetPassword = () => {\r\n    sendPasswordResetEmail(auth, email)\r\n      .then(() => {\r\n        Alert.alert(\r\n          \"Password reset email sent! If you didn't receive the link in your Inbox, please check the Spam folder.\"\r\n        );\r\n        navigation.goBack();\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        Alert.alert(errorCode);\r\n        setLoading(false);\r\n      });\r\n    setLoading(true);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n        <View style={styles.logoContainer}>\r\n          <Image\r\n            source={{\r\n              uri: \"https://firebasestorage.googleapis.com/v0/b/journeytoaustralia-b21d4.appspot.com/o/appIcon_transparent.png?alt=media&token=b6a92da5-ff9d-4d51-9e32-3bf1b7e44801\",\r\n            }}\r\n            style={{ height: 100, width: 100, margin: 30 }}\r\n          />\r\n        </View>\r\n\r\n        <View>\r\n          <Text style={{ fontSize: 16, marginTop: 20 }}>\r\n            {\" \"}\r\n            Receive an email link{\" \"}\r\n          </Text>\r\n        </View>\r\n\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Your email address\"\r\n            autoCapitalize=\"none\"\r\n            //autoFocus={true}\r\n            value={email}\r\n            onChangeText={(text) => setEmail(text)}\r\n            style={styles.textInput}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.buttonContainer}>\r\n          {!email ? (\r\n            <View style={[styles.button, styles.buttonDisabled]}>\r\n              <Text style={styles.buttonText}>Reset password</Text>\r\n            </View>\r\n          ) : (\r\n            <TouchableOpacity onPress={resetPassword} style={styles.button}>\r\n              {loading ? (\r\n                <ActivityIndicator />\r\n              ) : (\r\n                <Text style={styles.buttonText}>Reset password</Text>\r\n              )}\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  logoContainer: {\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  textInput: {\r\n    backgroundColor: \"white\",\r\n    padding: 12,\r\n    borderRadius: 10,\r\n    borderWidth: 1.5,\r\n    borderColor: \"lightgrey\",\r\n    marginTop: 10,\r\n    marginBottom: 5,\r\n    width: 300,\r\n  },\r\n  buttonContainer: {\r\n    width: 300,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#1267E9\",\r\n    width: \"100%\",\r\n    padding: 12,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: \"grey\",\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontWeight: \"700\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnD,SAASC,IAAI;AAAyB;AAEtC,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,sBAAsB,QAAQ,eAAe;AACtD,SAASC,iBAAiB,QAAQ,oBAAoB;AAAC;AAAA;AAEvD,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EACvC,gBAA0BN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BO,KAAK;IAAEC,QAAQ;EACtB,iBAA8BR,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCS,OAAO;IAAEC,UAAU;EAE1B,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;IAC1BR,sBAAsB,CAACF,IAAI,EAAEM,KAAK,CAAC,CAChCK,IAAI,CAAC,YAAM;MACVC,KAAK,CAACC,KAAK,CACT,wGAAwG,CACzG;MACDR,UAAU,CAACS,MAAM,EAAE;MACnBL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAAC,UAACC,KAAK,EAAK;MAChB,IAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,IAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClCR,KAAK,CAACC,KAAK,CAACI,SAAS,CAAC;MACtBR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IACJA,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,OACE,KAAC,YAAY;IAAC,KAAK,EAAEY,MAAM,CAACC,SAAU;IAAA,UACpC,MAAC,UAAU;MAAA,WACT,KAAC,IAAI;QAAC,KAAK,EAAED,MAAM,CAACE,aAAc;QAAA,UAChC,KAAC,KAAK;UACJ,MAAM,EAAE;YACNC,GAAG,EAAE;UACP,CAAE;UACF,KAAK,EAAE;YAAEC,MAAM,EAAE,GAAG;YAAEC,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAG;QAAE;MAC/C,EACG,EAEP,KAAC,IAAI;QAAA,UACH,MAAC,IAAI;UAAC,KAAK,EAAE;YAAEC,QAAQ,EAAE,EAAE;YAAEC,SAAS,EAAE;UAAG,CAAE;UAAA,WAC1C,GAAG,EAAC,uBACgB,EAAC,GAAG;QAAA;MACpB,EACF,EAEP,KAAC,IAAI;QAAA,UACH,KAAC,SAAS;UACR,WAAW,EAAC,oBAAoB;UAChC,cAAc,EAAC,MAAM;UAErB,KAAK,EAAEvB,KAAM;UACb,YAAY,EAAE,sBAACwB,IAAI;YAAA,OAAKvB,QAAQ,CAACuB,IAAI,CAAC;UAAA,CAAC;UACvC,KAAK,EAAET,MAAM,CAACU;QAAU;MACxB,EACG,EAEP,KAAC,IAAI;QAAC,KAAK,EAAEV,MAAM,CAACW,eAAgB;QAAA,UACjC,CAAC1B,KAAK,GACL,KAAC,IAAI;UAAC,KAAK,EAAE,CAACe,MAAM,CAACY,MAAM,EAAEZ,MAAM,CAACa,cAAc,CAAE;UAAA,UAClD,KAAC,IAAI;YAAC,KAAK,EAAEb,MAAM,CAACc,UAAW;YAAA,UAAC;UAAc;QAAO,EAChD,GAEP,KAAC,gBAAgB;UAAC,OAAO,EAAEzB,aAAc;UAAC,KAAK,EAAEW,MAAM,CAACY,MAAO;UAAA,UAC5DzB,OAAO,GACN,KAAC,iBAAiB,KAAG,GAErB,KAAC,IAAI;YAAC,KAAK,EAAEa,MAAM,CAACc,UAAW;YAAA,UAAC;UAAc;QAC/C;MAEJ,EACI;IAAA;EACI,EACA;AAEnB,CAAC;AAED,eAAe/B,mBAAmB;AAElC,IAAMiB,MAAM,GAAGe,UAAU,CAACC,MAAM,CAAC;EAC/Bd,aAAa,EAAE;IACbe,UAAU,EAAE;EACd,CAAC;EAEDhB,SAAS,EAAE;IACTiB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBF,UAAU,EAAE;EACd,CAAC;EAEDP,SAAS,EAAE;IACTU,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,GAAG;IAChBC,WAAW,EAAE,WAAW;IACxBhB,SAAS,EAAE,EAAE;IACbiB,YAAY,EAAE,CAAC;IACfpB,KAAK,EAAE;EACT,CAAC;EACDM,eAAe,EAAE;IACfN,KAAK,EAAE,GAAG;IACVc,cAAc,EAAE,QAAQ;IACxBF,UAAU,EAAE,QAAQ;IACpBT,SAAS,EAAE;EACb,CAAC;EACDI,MAAM,EAAE;IACNQ,eAAe,EAAE,SAAS;IAC1Bf,KAAK,EAAE,MAAM;IACbgB,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBL,UAAU,EAAE;EACd,CAAC;EACDJ,cAAc,EAAE;IACdO,eAAe,EAAE;EACnB,CAAC;EACDN,UAAU,EAAE;IACVY,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,KAAK;IACjBpB,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}
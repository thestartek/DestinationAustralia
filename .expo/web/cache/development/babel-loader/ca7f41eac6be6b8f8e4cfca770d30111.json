{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useState, useEffect } from \"react\";\nimport AddComment from \"./AddComment\";\nimport { FontAwesome, AntDesign, Feather } from \"@expo/vector-icons\";\nimport Comments from \"./Comments\";\nimport { Divider } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowHeight = Dimensions.get('window').height;\nvar CommentModal = function CommentModal(_ref) {\n  var post = _ref.post;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  return _jsxs(View, {\n    style: styles.centeredView,\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(TouchableOpacity, {\n          style: {\n            marginVertical: 10\n          },\n          onPress: function onPress() {\n            return setModalVisible(!modalVisible);\n          },\n          children: _jsx(Text, {\n            style: styles.doneButtonText,\n            children: \"Back to posts\"\n          })\n        }), _jsx(Comments, {\n          post: post\n        }), _jsx(AddComment, {\n          post: post\n        }), _jsx(View, {\n          style: {\n            height: 40\n          }\n        })]\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(FontAwesome, {\n        name: \"commenting-o\",\n        size: 25,\n        color: \"#545050\"\n      })\n    })]\n  });\n};\nexport default CommentModal;\nvar styles = StyleSheet.create({\n  modalView: {\n    flex: 1,\n    marginTop: 85,\n    height: windowHeight - 85,\n    width: \"100%\",\n    backgroundColor: \"white\",\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 10,\n    padding: 10,\n    elevation: 2,\n    width: 250,\n    marginBottom: 15,\n    padding: 15\n  },\n  buttonOpen: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#1267E9\",\n    borderWidth: 2,\n    borderRadius: 6,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginHorizontal: 5\n  },\n  buttonOpenText: {\n    color: \"#1267E9\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalButton: {\n    backgroundColor: \"#1267E9\"\n  },\n  deleteButton: {\n    borderWidth: 2,\n    borderColor: \"red\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 15\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  doneButtonText: {\n    color: \"grey\",\n    fontWeight: \"900\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","AddComment","FontAwesome","AntDesign","Feather","Comments","Divider","windowHeight","Dimensions","get","height","CommentModal","post","modalVisible","setModalVisible","styles","centeredView","modalView","marginVertical","doneButtonText","StyleSheet","create","flex","marginTop","width","backgroundColor","borderTopLeftRadius","borderTopRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","button","borderRadius","padding","marginBottom","buttonOpen","flexDirection","justifyContent","alignItems","borderColor","borderWidth","paddingVertical","paddingHorizontal","marginHorizontal","buttonOpenText","color","fontWeight","textAlign","modalButton","deleteButton","textStyle","fontSize","modalText"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/components/post/CommentModal.js"],"sourcesContent":["import { View, ScrollView, Image, StyleSheet, Text, Modal, TouchableOpacity, Dimensions } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport AddComment from \"./AddComment\";\nimport { FontAwesome, AntDesign, Feather } from \"@expo/vector-icons\";\nimport Comments from \"./Comments\";\nimport { Divider } from \"react-native-paper\";\n\nconst windowHeight = Dimensions.get('window').height;\n\nconst CommentModal = ({ post }) => {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <View style={styles.centeredView}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={styles.modalView}>\n          {/* <Text style={styles.modalText}>Category</Text> */}\n\n          <TouchableOpacity\n            style={{marginVertical: 10}}\n            onPress={() => setModalVisible(!modalVisible)}\n          >\n            <Text style={styles.doneButtonText}>Back to posts</Text>\n          </TouchableOpacity>\n          \n\n          <Comments post={post}/>\n          <AddComment post={post} />\n          <View style={{height: 40}}></View>\n        </View>\n      </Modal>\n\n      <TouchableOpacity\n        onPress={() => setModalVisible(true)}\n      >\n        <FontAwesome name=\"commenting-o\" size={25} color=\"#545050\" />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default CommentModal;\n\nconst styles = StyleSheet.create({\n  modalView: {\n    flex: 1,\n    marginTop: 85,\n    // marginBottom: 100,\n    // flex: 1,\n    // justifyContent: \"center\",\n    height: windowHeight - 85,\n    width: \"100%\",\n    backgroundColor: \"white\",\n    // borderRadius: 20,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    // borderBottomLeftRadius: 0,\n    // borderBottomRightRadius: 0,\n    // padding: 25,\n    // alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  button: {\n    borderRadius: 10,\n    padding: 10,\n    elevation: 2,\n    width: 250,\n    marginBottom: 15,\n    padding: 15,\n  },\n  buttonOpen: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#1267E9\",\n    borderWidth: 2,\n    borderRadius: 6,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n  },\n  buttonOpenText: {\n    color: \"#1267E9\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  modalButton: {\n    backgroundColor: \"#1267E9\",\n  },\n  deleteButton: {\n    borderWidth: 2,\n    borderColor: \"red\",\n  },\n\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    fontSize: 15,\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n  doneButtonText: {\n    color: \"grey\",\n    fontWeight: \"900\",\n    textAlign: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
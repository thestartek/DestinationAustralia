{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport React, { useEffect, useState } from \"react\";\nimport Post from \"./Post.js\";\nimport { collection, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport { db } from \"../../Firebase\";\nimport { Divider } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\nvar PostScreen = function PostScreen(_ref) {\n  var isLoading = _ref.isLoading,\n    navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    posts = _useState2[0],\n    setPosts = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    users = _useState4[0],\n    setUsers = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    refreshing = _React$useState2[0],\n    setRefreshing = _React$useState2[1];\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  useEffect(function () {\n    var unsub = onSnapshot(query(collection(db, \"posts\"), orderBy(\"created\", \"desc\")), orderBy(\"caption\"), function (snapshot) {\n      setPosts(snapshot.docs.map(function (post) {\n        return _objectSpread({\n          id: post.id\n        }, post.data());\n      }));\n      if (loading) {\n        setLoading(false);\n      }\n    });\n    return unsub;\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Divider, {}), _jsx(ScrollView, {\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: posts.map(function (post, index) {\n        return _jsx(Post, {\n          post: post,\n          navigation: navigation\n        }, index);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"darkgrey\",\n    flex: 1\n  },\n  profile: {\n    width: 44,\n    height: 44,\n    borderRadius: 22\n  },\n  profileThumbnail: {\n    width: 44,\n    height: 44,\n    borderRadius: 22,\n    tintColor: \"grey\"\n  },\n  timstampText: {\n    marginLeft: 10,\n    marginTop: 2,\n    fontSize: 12,\n    color: \"grey\"\n  },\n  createPostButton: {\n    height: 40,\n    backgroundColor: \"#1267E9\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  postButtonText: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\",\n    fontSize: 18\n  }\n});\nexport default PostScreen;","map":{"version":3,"names":["React","useEffect","useState","Post","collection","onSnapshot","orderBy","query","db","Divider","wait","timeout","Promise","resolve","setTimeout","PostScreen","isLoading","navigation","posts","setPosts","users","setUsers","loading","setLoading","refreshing","setRefreshing","onRefresh","useCallback","then","unsub","snapshot","docs","map","post","id","data","styles","container","index","StyleSheet","create","backgroundColor","flex","profile","width","height","borderRadius","profileThumbnail","tintColor","timstampText","marginLeft","marginTop","fontSize","color","createPostButton","justifyContent","alignItems","postButtonText"],"sources":["C:/Users/awasthit/journeytoaustralia/components/post/PostsScreen.js"],"sourcesContent":["import {\r\n  ScrollView,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  RefreshControl,\r\n} from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Post from \"./Post.js\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../Firebase\";\r\nimport { Divider } from \"react-native-paper\";\r\n\r\nconst wait = (timeout) => {\r\n  return new Promise((resolve) => setTimeout(resolve, timeout));\r\n};\r\n\r\nconst PostScreen = ({ isLoading, navigation }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = React.useState(false);\r\n  // const user = auth.currentUser;\r\n\r\n  const onRefresh = React.useCallback(() => {\r\n    setRefreshing(true);\r\n    wait(2000).then(() => setRefreshing(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unsub = onSnapshot(\r\n      query(collection(db, \"posts\"), orderBy(\"created\", \"desc\")),\r\n      orderBy(\"caption\"),\r\n      (snapshot) => {\r\n        setPosts(\r\n          snapshot.docs.map((post) => ({ id: post.id, ...post.data() }))\r\n        );\r\n        if (loading) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    );\r\n    return unsub;\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Divider />\r\n      {/* <PostHeader /> */}\r\n      <ScrollView\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n      >\r\n        {posts.map((post, index) => (\r\n          <Post post={post} key={index} navigation={navigation} />\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"darkgrey\",\r\n    flex: 1,\r\n  },\r\n  profile: {\r\n    width: 44,\r\n    height: 44,\r\n    borderRadius: 22,\r\n    // tintColor: \"#3a3b3c\",\r\n  },\r\n  profileThumbnail: {\r\n    width: 44,\r\n    height: 44,\r\n    borderRadius: 22,\r\n    tintColor: \"grey\",\r\n  },\r\n  timstampText: {\r\n    marginLeft: 10,\r\n    marginTop: 2,\r\n    fontSize: 12,\r\n    color: \"grey\",\r\n  },\r\n  createPostButton: {\r\n    height: 40,\r\n    backgroundColor: \"#1267E9\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  postButtonText: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n    fontSize: 18,\r\n  },\r\n});\r\nexport default PostScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore, getDoc, doc, updateDoc, arrayUnion } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport messaging from \"@react-native-firebase/messaging\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCMaVLSMXRA154XwsnxKnrOWKxfHixcdP4\",\n  authDomain: \"journeytoaustralia-b21d4.firebaseapp.com\",\n  projectId: \"journeytoaustralia-b21d4\",\n  storageBucket: \"journeytoaustralia-b21d4.appspot.com\",\n  messagingSenderId: \"126633133869\",\n  appId: \"1:126633133869:web:dd8f9a00c0e9c2a8a935a4\",\n  measurementId: \"G-8W70ZET86M\"\n};\nexport var requestUserPermission = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var authStatus = yield messaging().requestPermission();\n    var enabled = authStatus === messaging.AuthorizationStatus.AUTHORIZED || authStatus === messaging.AuthorizationStatus.PROVISIONAL;\n    if (enabled) {\n      console.log(\"Authorization status:\", authStatus);\n    }\n  });\n  return function requestUserPermission() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getDeviceToken = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    var token = yield messaging().getToken();\n    console.log(\"Device token:\", token);\n    yield updateDoc(doc(db, \"notifications\", \"token\"), {\n      FCM_token: arrayUnion(token)\n    });\n    return token;\n  });\n  return function getDeviceToken() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var handleIncomingNotification = function handleIncomingNotification(callback) {\n  messaging().onNotificationOpenedApp(function (remoteMessage) {\n    console.log(\"Notification caused app to open from background state:\", remoteMessage.notification);\n    if (callback) {\n      callback(remoteMessage);\n    }\n  });\n  messaging().getInitialNotification().then(function (remoteMessage) {\n    if (remoteMessage) {\n      console.log(\"Notification caused app to open from quit state:\", remoteMessage.notification);\n      if (callback) {\n        callback(remoteMessage);\n      }\n    }\n  });\n};\nexport var handleForegroundNotification = function handleForegroundNotification() {\n  messaging().onMessage(function () {\n    var _ref3 = _asyncToGenerator(function* (remoteMessage) {\n      var message = remoteMessage.notification;\n      Alert.alert(message.title, message.body);\n      console.log(\"Message handled in foreground\", remoteMessage);\n    });\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n};\nexport var handleBackgroundNotification = function handleBackgroundNotification() {\n  messaging().setBackgroundMessageHandler(function () {\n    var _ref4 = _asyncToGenerator(function* (remoteMessage) {\n      console.log(\"Message handled in the background!\", remoteMessage);\n    });\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n};\nvar firebaseApp = initializeApp(firebaseConfig);\nvar analytics = getAnalytics(firebaseApp);\nvar auth = getAuth(firebaseApp);\nvar db = getFirestore(firebaseApp);\nvar storage = getStorage(firebaseApp);\nexport { analytics, auth, db, storage };","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","getDoc","doc","updateDoc","arrayUnion","getStorage","getAnalytics","messaging","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","requestUserPermission","authStatus","requestPermission","enabled","AuthorizationStatus","AUTHORIZED","PROVISIONAL","console","log","getDeviceToken","token","getToken","db","FCM_token","handleIncomingNotification","callback","onNotificationOpenedApp","remoteMessage","notification","getInitialNotification","then","handleForegroundNotification","onMessage","message","Alert","alert","title","body","handleBackgroundNotification","setBackgroundMessageHandler","firebaseApp","analytics","auth","storage"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/Firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { Alert } from \"react-native\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport {\n  getFirestore,\n  getDoc,\n  doc,\n  updateDoc,\n  arrayUnion,\n} from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nimport { getAnalytics } from \"firebase/analytics\";\n\nimport messaging from \"@react-native-firebase/messaging\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCMaVLSMXRA154XwsnxKnrOWKxfHixcdP4\",\n  authDomain: \"journeytoaustralia-b21d4.firebaseapp.com\",\n  projectId: \"journeytoaustralia-b21d4\",\n  storageBucket: \"journeytoaustralia-b21d4.appspot.com\",\n  messagingSenderId: \"126633133869\",\n  appId: \"1:126633133869:web:dd8f9a00c0e9c2a8a935a4\",\n  measurementId: \"G-8W70ZET86M\",\n};\n\n// Request user permission for push notifications\nexport const requestUserPermission = async () => {\n  const authStatus = await messaging().requestPermission();\n  const enabled =\n    authStatus === messaging.AuthorizationStatus.AUTHORIZED ||\n    authStatus === messaging.AuthorizationStatus.PROVISIONAL;\n  if (enabled) {\n    console.log(\"Authorization status:\", authStatus);\n  }\n};\n\n// Get the device token for push notifications\nexport const getDeviceToken = async () => {\n  const token = await messaging().getToken();\n  console.log(\"Device token:\", token);\n  await updateDoc(doc(db, \"notifications\", \"token\"), {\n    FCM_token: arrayUnion(token),\n  });\n  return token;\n};\n\n// Handle incoming push notifications\nexport const handleIncomingNotification = (callback) => {\n  messaging().onNotificationOpenedApp((remoteMessage) => {\n    console.log(\n      \"Notification caused app to open from background state:\",\n      remoteMessage.notification\n    );\n    if (callback) {\n      callback(remoteMessage);\n    }\n  });\n\n  messaging()\n    .getInitialNotification()\n    .then((remoteMessage) => {\n      if (remoteMessage) {\n        console.log(\n          \"Notification caused app to open from quit state:\",\n          remoteMessage.notification\n        );\n        if (callback) {\n          callback(remoteMessage);\n        }\n      }\n    });\n};\n\nexport const handleForegroundNotification = () => {\n  messaging().onMessage(async (remoteMessage) => {\n    const message = remoteMessage.notification;\n    Alert.alert(message.title, message.body);\n    console.log(\"Message handled in foreground\", remoteMessage);\n  });\n};\n\n// Register background handler\nexport const handleBackgroundNotification = () => {\n  messaging().setBackgroundMessageHandler(async (remoteMessage) => {\n    console.log(\"Message handled in the background!\", remoteMessage);\n  });\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(firebaseApp);\nconst auth = getAuth(firebaseApp);\nconst db = getFirestore(firebaseApp);\nconst storage = getStorage(firebaseApp);\n\nexport { analytics, auth, db, storage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
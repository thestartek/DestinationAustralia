{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, createContext } from 'react';\nimport TabNavigator from \"./components/TabNavigator\";\nimport LoginStack from \"./components/LoginStack\";\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from \"./Firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LoginContex = createContext();\nvar AuthNavigation = function AuthNavigation(_ref) {\n  var Children = _ref.Children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  var useHandler = function useHandler(user) {\n    return user ? setCurrentUser(user) : setCurrentUser(null);\n  };\n  useEffect(function () {\n    return onAuthStateChanged(auth, function (user) {\n      return useHandler(user);\n    });\n  }, []);\n  return currentUser ? _jsx(TabNavigator, {}) : _jsx(LoginStack, {});\n};\nexport default AuthNavigation;","map":{"version":3,"names":["React","useEffect","useState","createContext","TabNavigator","LoginStack","onAuthStateChanged","auth","LoginContex","AuthNavigation","Children","currentUser","setCurrentUser","useHandler","user"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/AuthNavigation.js"],"sourcesContent":["import React, { useEffect, useState, createContext } from 'react'\nimport TabNavigator from './components/TabNavigator'\nimport LoginStack from './components/LoginStack'\nimport { onAuthStateChanged } from 'firebase/auth'\nimport { auth } from './Firebase'\n\nconst LoginContex = createContext()\n\nconst AuthNavigation = ({Children}) => {\n    // const [loggedIn, setLoggedIn] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState(null)\n\n  const useHandler = user =>\n    user ? setCurrentUser(user) : setCurrentUser(null)\n  \n    useEffect(() => \n    onAuthStateChanged(auth, user => useHandler(user)),\n  \n  [])\n    return currentUser ? <TabNavigator/> : <LoginStack/>\n\n    // <LoginContex.Provider value={{loggedIn, setLoggedIn}}>\n    //     {Children}\n    // </LoginContex.Provider>\n    \n    \n}\n\nexport default AuthNavigation;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AACjE,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,IAAI;AAAoB;AAEjC,IAAMC,WAAW,GAAGL,aAAa,EAAE;AAEnC,IAAMM,cAAc,GAAG,SAAjBA,cAAc,OAAmB;EAAA,IAAdC,QAAQ,QAARA,QAAQ;EAG/B,gBAAsCR,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CS,WAAW;IAAEC,cAAc;EAElC,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAGC,IAAI;IAAA,OACrBA,IAAI,GAAGF,cAAc,CAACE,IAAI,CAAC,GAAGF,cAAc,CAAC,IAAI,CAAC;EAAA;EAElDX,SAAS,CAAC;IAAA,OACVK,kBAAkB,CAACC,IAAI,EAAE,UAAAO,IAAI;MAAA,OAAID,UAAU,CAACC,IAAI,CAAC;IAAA,EAAC;EAAA,GAEpD,EAAE,CAAC;EACD,OAAOH,WAAW,GAAG,KAAC,YAAY,KAAE,GAAG,KAAC,UAAU,KAAE;AAOxD,CAAC;AAED,eAAeF,cAAc"},"metadata":{},"sourceType":"module"}
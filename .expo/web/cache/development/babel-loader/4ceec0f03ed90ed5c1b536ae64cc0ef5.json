{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport \"react-native-gesture-handler\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport auth from \"./../../Firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar LoginForm = function LoginForm(_ref) {\n  var navigation = _ref.navigation;\n  var LoginFormSchema = Yup.object().shape({\n    email: Yup.string().email().required(\"An email is required\"),\n    password: Yup.string().required().min(6, \"Password must have at least 8 characters\")\n  });\n\n  var onLogin = function onLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Logged in with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsx(ScrollView, {\n    style: styles.wrapper,\n    children: _jsx(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        onLogin(values.email, values.password);\n      },\n      validationSchema: LoginFormSchema,\n      validateOnMount: true,\n      children: function children(_ref2) {\n        var handleChange = _ref2.handleChange,\n            handleBlur = _ref2.handleBlur,\n            handleSubmit = _ref2.handleSubmit,\n            values = _ref2.values,\n            isValid = _ref2.isValid;\n        return _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: [styles.inputField],\n            children: _jsx(TextInput, {\n              placeholderTextColor: \"grey\",\n              fontSize: \"16\",\n              placeholder: \"Email address\",\n              autoCapitalize: \"none\",\n              keyboardType: \"email-address\",\n              textContentType: \"emailAddress\",\n              onChangeText: handleChange(\"email\"),\n              onBlur: handleBlur(\"email\"),\n              value: values.email\n            })\n          }), _jsx(View, {\n            style: styles.inputField,\n            children: _jsx(TextInput, {\n              placeholderTextColor: \"gray\",\n              fontSize: \"16\",\n              placeholder: \"Password\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              secureTextEntry: true,\n              textContentType: \"password\",\n              onChangeText: handleChange(\"password\"),\n              onBlur: handleBlur(\"password\"),\n              value: values.password\n            })\n          }), _jsx(TouchableOpacity, {\n            style: {\n              alignItems: \"flex-end\"\n            },\n            children: _jsxs(Text, {\n              style: {\n                color: \"#1267C9\",\n                marginBottom: 25,\n                fontSize: 16\n              },\n              children: [\" \", \"Forgot password ?\", \" \"]\n            })\n          }), _jsx(Pressable, {\n            style: styles.loginButton(isValid),\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              style: {\n                color: \"white\",\n                fontSize: 16\n              },\n              children: \" Log in \"\n            })\n          }), _jsx(View, {\n            style: styles.signupContainer,\n            children: _jsx(Text, {\n              style: {\n                fontSize: 16\n              },\n              children: \" Don't have an account ? \"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.signupButton,\n            onPress: function onPress() {\n              return navigation.push(\"Register\");\n            },\n            children: _jsx(Text, {\n              style: {\n                color: \"white\",\n                fontSize: 16\n              },\n              children: \" Sign up \"\n            })\n          })]\n        });\n      }\n    })\n  });\n};\n\nexport default LoginForm;\nvar styles = StyleSheet.create({\n  wrapper: {\n    marginTop: 20\n  },\n  inputField: {\n    borderRadius: 4,\n    borderColor: \"gray\",\n    padding: 12,\n    backgroundColor: \"white\",\n    marginBottom: 10,\n    borderWidth: 1,\n    width: 280\n  },\n  loginButton: function loginButton(isValid) {\n    return {\n      backgroundColor: isValid ? \"#1267C9\" : \"#99c4e0\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: 42,\n      borderRadius: 4\n    };\n  },\n  signupContainer: {\n    alignItems: \"center\",\n    marginTop: 50,\n    marginBottom: 10\n  },\n  signupButton: {\n    backgroundColor: \"#1267C9\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: 42,\n    borderRadius: 4\n  }\n});","map":{"version":3,"names":["React","useState","Formik","Yup","auth","signInWithEmailAndPassword","LoginForm","navigation","LoginFormSchema","object","shape","email","string","required","password","min","onLogin","then","userCredentials","user","console","log","catch","error","alert","message","styles","wrapper","values","handleChange","handleBlur","handleSubmit","isValid","inputField","alignItems","color","marginBottom","fontSize","loginButton","signupContainer","signupButton","push","StyleSheet","create","marginTop","borderRadius","borderColor","padding","backgroundColor","borderWidth","width","justifyContent","minHeight"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/components/login/LoginForm.js"],"sourcesContent":["import { View, Text, StyleSheet, Pressable, ScrollView } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { TextInput, TouchableOpacity, Alert } from \"react-native\";\nimport \"react-native-gesture-handler\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n//import async from '@react-native-async-storage/async-storage'\n\nimport auth from \"./../../Firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst LoginForm = ({ navigation }) => {\n  const LoginFormSchema = Yup.object().shape({\n    email: Yup.string().email().required(\"An email is required\"),\n    password: Yup.string()\n      .required()\n      .min(6, \"Password must have at least 8 characters\"),\n  });\n\n  const onLogin = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then(userCredentials => {\n        const user = userCredentials.user;\n        console.log('Logged in with:', user.email);\n      })\n      .catch(error => alert(error.message))\n  }\n\n  return (\n    <ScrollView style={styles.wrapper}>\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        onSubmit={(values) => {\n          onLogin(values.email, values.password);\n        }}\n        validationSchema={LoginFormSchema}\n        validateOnMount={true}\n      >\n        {({ handleChange, handleBlur, handleSubmit, values, isValid }) => (\n          <>\n            <View\n              style={[\n                styles.inputField,\n                //following code changes the color of inputField\n                // {\n                //     borderColor: values.email.length < 1 || Validator.validation(values.email)\n                //     ? 'gray' : 'red,'\n                // },\n              ]}\n            >\n              <TextInput\n                placeholderTextColor=\"grey\"\n                fontSize=\"16\"\n                placeholder=\"Email address\"\n                autoCapitalize=\"none\"\n                keyboardType=\"email-address\"\n                textContentType=\"emailAddress\"\n                //autoFocus={true}\n                onChangeText={handleChange(\"email\")}\n                onBlur={handleBlur(\"email\")}\n                value={values.email}\n              />\n            </View>\n\n            <View style={styles.inputField}>\n              <TextInput\n                placeholderTextColor=\"gray\"\n                fontSize=\"16\"\n                placeholder=\"Password\"\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                secureTextEntry={true}\n                textContentType=\"password\"\n                //autoFocus={true}\n                onChangeText={handleChange(\"password\")}\n                onBlur={handleBlur(\"password\")}\n                value={values.password}\n              />\n            </View>\n\n            <TouchableOpacity style={{ alignItems: \"flex-end\" }}>\n              <Text\n                style={{ color: \"#1267C9\", marginBottom: 25, fontSize: 16 }}\n              >\n                {\" \"}\n                Forgot password ?{\" \"}\n              </Text>\n            </TouchableOpacity>\n\n            <Pressable\n              style={styles.loginButton(isValid)}\n              onPress={handleSubmit}\n            >\n              <Text style={{ color: \"white\", fontSize: 16 }}> Log in </Text>\n            </Pressable>\n\n            <View style={styles.signupContainer}>\n              <Text style={{ fontSize: 16 }}> Don't have an account ? </Text>\n            </View>\n\n            <TouchableOpacity\n              style={styles.signupButton}\n              onPress={() => navigation.push(\"Register\")}\n            >\n              <Text style={{ color: \"white\", fontSize: 16 }}> Sign up </Text>\n            </TouchableOpacity>\n          </>\n        )}\n      </Formik>\n    </ScrollView>\n  );\n};\n\nexport default LoginForm;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    marginTop: 20,\n  },\n\n  inputField: {\n    borderRadius: 4,\n    borderColor: \"gray\",\n    padding: 12,\n    backgroundColor: \"white\",\n    marginBottom: 10,\n    borderWidth: 1,\n    width: 280,\n  },\n\n  loginButton: (isValid) => ({\n    backgroundColor: isValid ? \"#1267C9\" : \"#99c4e0\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: 42,\n    borderRadius: 4,\n  }),\n\n  signupContainer: {\n    //flexDirection: 'row',\n    //width: '100%',\n    alignItems: \"center\",\n    marginTop: 50,\n    marginBottom: 10,\n  },\n  signupButton: {\n    backgroundColor: \"#1267C9\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: 42,\n    borderRadius: 4,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
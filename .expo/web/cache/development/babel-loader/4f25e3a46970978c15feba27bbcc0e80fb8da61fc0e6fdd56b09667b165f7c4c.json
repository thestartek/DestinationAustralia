{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { auth, db } from \"../../Firebase\";\nimport { signInWithEmailAndPassword, GoogleAuthProvider, signInWithCredential } from \"firebase/auth\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { GoogleSignin, GoogleSigninButton } from \"@react-native-google-signin/google-signin\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    googleLoading = _useState8[0],\n    setGoogleLoading = _useState8[1];\n  GoogleSignin.configure({\n    webClientId: \"126633133869-s0m5p25e3ccme62qhg2ire4lr0jtv4u9.apps.googleusercontent.com\",\n    androidClientId: \"126633133869-0gtrkbu5gliin40ivi5a82na4pff06b4.apps.googleusercontent.com\"\n  });\n  var GoogleSignIn = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setGoogleLoading(true);\n      try {\n        yield GoogleSignin.hasPlayServices({\n          showPlayServicesUpdateDialog: true\n        });\n        var userInfo = yield GoogleSignin.signIn();\n        var user = userInfo.user;\n        console.log(user.name + \" is signed in with email: \" + user.email);\n        var googleCredential = GoogleAuthProvider.credential(userInfo.idToken);\n        yield signInWithCredential(auth, googleCredential).then(function () {\n          setDoc(doc(db, \"users\", user.email), {\n            uid: user.id,\n            fullname: user.name,\n            email: user.email,\n            city: \"\",\n            country: \"\",\n            info: \"\",\n            profile_picture: user.photo\n          });\n          console.log(\"User added to database\");\n          Alert.alert(\"Logged in successfully\", user.email);\n          setGoogleLoading(false);\n        }).catch(function (error) {\n          console.log(\"Error 1: \" + error);\n          setGoogleLoading(false);\n        });\n        setGoogleLoading(false);\n      } catch (error) {\n        console.log(\"Error 2: \" + error);\n        setGoogleLoading(false);\n      }\n    });\n    return function GoogleSignIn() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Logged in with:\", user.email);\n    }).catch(function (error) {\n      return Alert.alert(\"Invalid login details\", \"If you do not have an account yet, Please Register\", [{\n        text: \"Ok\",\n        onPress: function onPress() {\n          return setLoading(false);\n        },\n        style: \"cancel\"\n      }, {\n        text: \"Register\",\n        onPress: function onPress() {\n          navigation.push(\"Register\"), setLoading(false);\n        }\n      }]);\n    });\n    setLoading(true);\n  };\n  return _jsx(ScrollView, {\n    style: styles.outerContainer,\n    children: _jsxs(View, {\n      style: {\n        alignItems: \"center\"\n      },\n      children: [_jsxs(View, {\n        style: styles.logoContainer,\n        children: [_jsx(Image, {\n          source: require(\"../../assets/appIcon_transparent.png\"),\n          style: {\n            height: 100,\n            width: 100,\n            marginTop: 20\n          }\n        }), _jsx(Text, {\n          style: [styles.text, {\n            color: \"grey\",\n            marginBottom: 20\n          }],\n          children: \"Your friend for Australia related contents\"\n        })]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          onPress: GoogleSignIn,\n          style: [styles.button, styles.buttonGoogle],\n          children: googleLoading ? _jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(ActivityIndicator, {\n              color: \"white\"\n            }), _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Signing in with Google\"\n            })]\n          }) : _jsxs(View, {\n            style: {\n              flexDirection: \"row\"\n            },\n            children: [_jsx(AntDesign, {\n              name: \"google\",\n              size: 24,\n              color: \"white\"\n            }), _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Sign in with Google\"\n            })]\n          })\n        })\n      }), _jsx(Text, {\n        style: [styles.text, {\n          marginVertical: 10\n        }],\n        children: \"-------------------- OR --------------------\"\n      }), _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Email\",\n          autoCapitalize: \"none\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          style: styles.textInput\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          style: styles.textInput,\n          secureTextEntry: true\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.push(\"Reset password\");\n          },\n          style: {\n            alignItems: \"flex-end\"\n          },\n          children: _jsxs(Text, {\n            style: {\n              color: \"#1267E9\",\n              fontSize: 16,\n              marginVertical: 10\n            },\n            children: [\"Forgot password ?\", \" \"]\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          onPress: handleLogin,\n          style: styles.button,\n          children: loading ? _jsx(ActivityIndicator, {\n            color: \"white\"\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Login\"\n          })\n        })\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          marginVertical: 30,\n          justifyContent: \"center\"\n        },\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \" Don't have an account ? \"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.push(\"Register\");\n          },\n          children: _jsx(Text, {\n            style: [styles.buttonText, {\n              color: \"#1267E9\"\n            }],\n            children: \"Register\"\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  outerContainer: {\n    marginHorizontal: 10,\n    backgroundColor: \"white\"\n  },\n  logoContainer: {\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    marginHorizontal: 10,\n    justifyContent: \"center\"\n  },\n  button: {\n    padding: 12,\n    borderRadius: 40,\n    alignItems: \"center\",\n    marginHorizontal: 10,\n    marginVertical: 10,\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    width: 140,\n    backgroundColor: \"#1267E9\"\n  },\n  buttonFacebook: {\n    backgroundColor: \"#1267E9\"\n  },\n  buttonGoogle: {\n    borderRadius: 8,\n    width: 250\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n    marginLeft: 10\n  },\n  text: {\n    fontSize: 16\n  },\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"darkgrey\",\n    marginVertical: 5,\n    width: 300\n  }\n});","map":{"version":3,"names":["React","useState","auth","db","signInWithEmailAndPassword","GoogleAuthProvider","signInWithCredential","setDoc","doc","GoogleSignin","GoogleSigninButton","AntDesign","LoginScreen","navigation","email","setEmail","password","setPassword","loading","setLoading","googleLoading","setGoogleLoading","configure","webClientId","androidClientId","GoogleSignIn","hasPlayServices","showPlayServicesUpdateDialog","userInfo","signIn","user","console","log","name","googleCredential","credential","idToken","then","uid","id","fullname","city","country","info","profile_picture","photo","Alert","alert","catch","error","handleLogin","userCredentials","text","onPress","style","push","styles","outerContainer","alignItems","logoContainer","require","height","width","marginTop","color","marginBottom","buttonContainer","button","buttonGoogle","flexDirection","buttonText","marginVertical","textInput","fontSize","justifyContent","StyleSheet","create","marginHorizontal","backgroundColor","padding","borderRadius","buttonFacebook","fontWeight","marginLeft","borderWidth","borderColor"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/components/login/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  View,\n  ActivityIndicator,\n} from \"react-native\";\nimport { auth, db } from \"../../Firebase\";\nimport {\n  signInWithEmailAndPassword,\n  GoogleAuthProvider,\n  signInWithCredential,\n} from \"firebase/auth\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport {\n  GoogleSignin,\n  GoogleSigninButton,\n} from \"@react-native-google-signin/google-signin\";\nimport { Alert } from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [googleLoading, setGoogleLoading] = useState(false);\n\n  GoogleSignin.configure({\n    webClientId:\n      \"126633133869-s0m5p25e3ccme62qhg2ire4lr0jtv4u9.apps.googleusercontent.com\",\n    androidClientId:\n      \"126633133869-0gtrkbu5gliin40ivi5a82na4pff06b4.apps.googleusercontent.com\",\n  });\n\n  const GoogleSignIn = async () => {\n    setGoogleLoading(true);\n    try {\n      await GoogleSignin.hasPlayServices({\n        showPlayServicesUpdateDialog: true,\n      });\n      const userInfo = await GoogleSignin.signIn();\n      // console.log(userInfo)\n      const user = userInfo.user;\n      console.log(user.name + \" is signed in with email: \" + user.email);\n      const googleCredential = GoogleAuthProvider.credential(userInfo.idToken);\n      await signInWithCredential(auth, googleCredential)\n        .then(() => {\n          setDoc(doc(db, \"users\", user.email), {\n            uid: user.id,\n            fullname: user.name,\n            email: user.email,\n            city: \"\",\n            country: \"\",\n            info: \"\",\n            profile_picture: user.photo,\n          });\n          console.log(\"User added to database\");\n          Alert.alert(\"Logged in successfully\", user.email);\n          setGoogleLoading(false);\n        })\n        .catch((error) => {\n          console.log(\"Error 1: \" + error);\n          setGoogleLoading(false);\n        });\n      setGoogleLoading(false);\n    } catch (error) {\n      console.log(\"Error 2: \" + error);\n      setGoogleLoading(false);\n    }\n  };\n\n  const handleLogin = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        console.log(\"Logged in with:\", user.email);\n      })\n      .catch(\n        (error) =>\n          Alert.alert(\n            \"Invalid login details\",\n            \"If you do not have an account yet, Please Register\",\n            [\n              {\n                text: \"Ok\",\n                onPress: () => setLoading(false),\n                style: \"cancel\",\n              },\n              {\n                text: \"Register\",\n                onPress: () => {\n                  navigation.push(\"Register\"), setLoading(false);\n                },\n              },\n            ]\n          )\n        //\n      );\n    setLoading(true);\n  };\n\n  return (\n    <ScrollView style={styles.outerContainer}>\n      <View style={{ alignItems: \"center\" }}>\n        <View style={styles.logoContainer}>\n          <Image\n            source={require(\"../../assets/appIcon_transparent.png\")}\n            style={{ height: 100, width: 100, marginTop: 20 }}\n          />\n          <Text style={[styles.text, { color: \"grey\", marginBottom: 20 }]}>\n            Your friend for Australia related contents\n          </Text>\n        </View>\n\n        {/* <Text style={[styles.text, { marginBottom: 10 }]}>Login with</Text> */}\n\n        {/* LOGIN WIHT FACEBOOK AND LOGIN WITH GOOGLE BUTTONS */}\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            onPress={GoogleSignIn}\n            style={[styles.button, styles.buttonGoogle]}\n          >\n            {googleLoading ? (\n              <View style={{ flexDirection: \"row\" }}>\n                <ActivityIndicator color = 'white'/>\n                <Text style={styles.buttonText}>Signing in with Google</Text>\n              </View>\n            ) : (\n              <View style={{ flexDirection: \"row\" }}>\n                <AntDesign name=\"google\" size={24} color=\"white\" />\n                <Text style={styles.buttonText}>Sign in with Google</Text>\n              </View>\n            )}\n            {/* <Text style={styles.buttonText}>Sign in with Google</Text> */}\n          </TouchableOpacity>\n        </View>\n        <Text style={[styles.text, { marginVertical: 10 }]}>\n          -------------------- OR --------------------\n        </Text>\n\n        <View>\n          <TextInput\n            placeholder=\"Email\"\n            autoCapitalize=\"none\"\n            //autoFocus={true}\n            value={email}\n            onChangeText={(text) => setEmail(text)}\n            style={styles.textInput}\n          />\n          <TextInput\n            placeholder=\"Password\"\n            value={password}\n            onChangeText={(text) => setPassword(text)}\n            style={styles.textInput}\n            secureTextEntry\n          />\n          <TouchableOpacity\n            onPress={() => navigation.push(\"Reset password\")}\n            style={{ alignItems: \"flex-end\" }}\n          >\n            <Text\n              style={{ color: \"#1267E9\", fontSize: 16, marginVertical: 10 }}\n            >\n              Forgot password ?{\" \"}\n            </Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity onPress={handleLogin} style={styles.button}>\n            {loading ? (\n              <ActivityIndicator color = 'white'/>\n            ) : (\n              <Text style={styles.buttonText}>Login</Text>\n            )}\n            {/* <Text style={styles.buttonText}>Login</Text> */}\n          </TouchableOpacity>\n        </View>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            marginVertical: 30,\n            justifyContent: \"center\",\n          }}\n        >\n          <Text style={styles.text}> Don't have an account ? </Text>\n          <TouchableOpacity onPress={() => navigation.push(\"Register\")}>\n            <Text style={[styles.buttonText, { color: \"#1267E9\" }]}>\n              Register\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  outerContainer: {\n    marginHorizontal: 10,\n    backgroundColor: \"white\",\n  },\n  logoContainer: {\n    alignItems: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    marginHorizontal: 10,\n    // width: 300,\n    justifyContent: \"center\",\n    // marginTop: 20,\n  },\n  button: {\n    padding: 12,\n    // height: 50,\n    borderRadius: 40,\n    alignItems: \"center\",\n    marginHorizontal: 10,\n    marginVertical: 10,\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    width: 140,\n    backgroundColor: \"#1267E9\",\n    // marginTop: 10,\n  },\n  buttonFacebook: {\n    backgroundColor: \"#1267E9\",\n  },\n  buttonGoogle: {\n    borderRadius: 8,\n    width: 250,\n    // backgroundColor: 'red'\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n    marginLeft: 10,\n  },\n  text: {\n    fontSize: 16,\n  },\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"darkgrey\",\n    marginVertical: 5,\n    width: 300,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxRuntime = require(\"react/jsx-runtime\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar expo_linear_gradient_1 = require(\"expo-linear-gradient\");\n\nvar react_native_reanimated_1 = __importStar(require(\"react-native-reanimated\"));\n\nvar v1_1 = require(\"react-native-redash/lib/module/v1\");\n\nvar Constants_1 = require(\"./Constants\");\n\nvar _react_native_reanima = react_native_reanimated_1.default,\n    useCode = _react_native_reanima.useCode,\n    set = _react_native_reanima.set,\n    cond = _react_native_reanima.cond,\n    eq = _react_native_reanima.eq;\nvar useState = React.useState,\n    useCallback = React.useCallback;\nvar styles = react_native_1.StyleSheet.create({\n  absoluteGradient: {\n    height: '100%',\n    position: 'absolute',\n    width: '100%'\n  },\n  container: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  gradientChild: {\n    flex: 1\n  }\n});\n\nvar useLayout = function useLayout() {\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      size = _useState2[0],\n      setSize = _useState2[1];\n\n  var onLayout = useCallback(function (event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n    setSize({\n      width: width,\n      height: height\n    });\n  }, []);\n  return [size, onLayout];\n};\n\nvar SkeletonContent = function SkeletonContent(_ref) {\n  var _ref$containerStyle = _ref.containerStyle,\n      containerStyle = _ref$containerStyle === void 0 ? styles.container : _ref$containerStyle,\n      _ref$easing = _ref.easing,\n      easing = _ref$easing === void 0 ? Constants_1.DEFAULT_EASING : _ref$easing,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? Constants_1.DEFAULT_DURATION : _ref$duration,\n      _ref$layout = _ref.layout,\n      layout = _ref$layout === void 0 ? [] : _ref$layout,\n      _ref$animationType = _ref.animationType,\n      animationType = _ref$animationType === void 0 ? Constants_1.DEFAULT_ANIMATION_TYPE : _ref$animationType,\n      _ref$animationDirecti = _ref.animationDirection,\n      animationDirection = _ref$animationDirecti === void 0 ? Constants_1.DEFAULT_ANIMATION_DIRECTION : _ref$animationDirecti,\n      _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? Constants_1.DEFAULT_LOADING : _ref$isLoading,\n      _ref$boneColor = _ref.boneColor,\n      boneColor = _ref$boneColor === void 0 ? Constants_1.DEFAULT_BONE_COLOR : _ref$boneColor,\n      _ref$highlightColor = _ref.highlightColor,\n      highlightColor = _ref$highlightColor === void 0 ? Constants_1.DEFAULT_HIGHLIGHT_COLOR : _ref$highlightColor,\n      children = _ref.children;\n  var animationValue = (0, v1_1.useValue)(0);\n  var loadingValue = (0, v1_1.useValue)(isLoading ? 1 : 0);\n  var shiverValue = (0, v1_1.useValue)(animationType === 'shiver' ? 1 : 0);\n\n  var _useLayout = useLayout(),\n      _useLayout2 = _slicedToArray(_useLayout, 2),\n      componentSize = _useLayout2[0],\n      onLayout = _useLayout2[1];\n\n  useCode(function () {\n    return cond(eq(loadingValue, 1), [cond(eq(shiverValue, 1), [set(animationValue, (0, v1_1.loop)({\n      duration: duration,\n      easing: easing\n    }))], [set(animationValue, (0, v1_1.loop)({\n      duration: duration / 2,\n      easing: easing,\n      boomerang: true\n    }))])]);\n  }, [loadingValue, shiverValue, animationValue]);\n\n  var getBoneWidth = function getBoneWidth(boneLayout) {\n    return (typeof boneLayout.width === 'string' ? componentSize.width : boneLayout.width) || 0;\n  };\n\n  var getBoneHeight = function getBoneHeight(boneLayout) {\n    return (typeof boneLayout.height === 'string' ? componentSize.height : boneLayout.height) || 0;\n  };\n\n  var getGradientEndDirection = function getGradientEndDirection(boneLayout) {\n    var direction = {\n      x: 0,\n      y: 0\n    };\n\n    if (animationType === 'shiver') {\n      if (animationDirection === 'horizontalLeft' || animationDirection === 'horizontalRight') {\n        direction = {\n          x: 1,\n          y: 0\n        };\n      } else if (animationDirection === 'verticalTop' || animationDirection === 'verticalDown') {\n        direction = {\n          x: 0,\n          y: 1\n        };\n      } else if (animationDirection === 'diagonalTopRight' || animationDirection === 'diagonalDownRight' || animationDirection === 'diagonalDownLeft' || animationDirection === 'diagonalTopLeft') {\n        var boneWidth = getBoneWidth(boneLayout);\n        var boneHeight = getBoneHeight(boneLayout);\n        if (boneWidth && boneHeight && boneWidth > boneHeight) return {\n          x: 0,\n          y: 1\n        };\n        return {\n          x: 1,\n          y: 0\n        };\n      }\n    }\n\n    return direction;\n  };\n\n  var getBoneStyles = function getBoneStyles(boneLayout) {\n    var backgroundColor = boneLayout.backgroundColor,\n        borderRadius = boneLayout.borderRadius;\n    var boneWidth = getBoneWidth(boneLayout);\n    var boneHeight = getBoneHeight(boneLayout);\n\n    var boneStyle = _extends({\n      width: boneWidth,\n      height: boneHeight,\n      borderRadius: borderRadius || Constants_1.DEFAULT_BORDER_RADIUS\n    }, boneLayout);\n\n    if (animationType !== 'pulse') {\n      boneStyle.overflow = 'hidden';\n      boneStyle.backgroundColor = backgroundColor || boneColor;\n    }\n\n    if (animationDirection === 'diagonalDownRight' || animationDirection === 'diagonalDownLeft' || animationDirection === 'diagonalTopRight' || animationDirection === 'diagonalTopLeft') {\n      boneStyle.justifyContent = 'center';\n      boneStyle.alignItems = 'center';\n    }\n\n    return boneStyle;\n  };\n\n  var getGradientSize = function getGradientSize(boneLayout) {\n    var boneWidth = getBoneWidth(boneLayout);\n    var boneHeight = getBoneHeight(boneLayout);\n    var gradientStyle = {};\n\n    if (animationDirection === 'diagonalDownRight' || animationDirection === 'diagonalDownLeft' || animationDirection === 'diagonalTopRight' || animationDirection === 'diagonalTopLeft') {\n      gradientStyle.width = boneWidth;\n      gradientStyle.height = boneHeight;\n      if (boneHeight >= boneWidth) gradientStyle.height *= 1.5;else gradientStyle.width *= 1.5;\n    }\n\n    return gradientStyle;\n  };\n\n  var getStaticBoneStyles = function getStaticBoneStyles(boneLayout) {\n    var pulseStyles = [getBoneStyles(boneLayout), {\n      backgroundColor: (0, v1_1.interpolateColor)(animationValue, {\n        inputRange: [0, 1],\n        outputRange: [boneColor, highlightColor]\n      })\n    }];\n    if (animationType === 'none') pulseStyles.pop();\n    return pulseStyles;\n  };\n\n  var getPositionRange = function getPositionRange(boneLayout) {\n    var outputRange = [];\n    var boneWidth = getBoneWidth(boneLayout);\n    var boneHeight = getBoneHeight(boneLayout);\n\n    if (animationDirection === 'horizontalRight') {\n      outputRange.push(-boneWidth, +boneWidth);\n    } else if (animationDirection === 'horizontalLeft') {\n      outputRange.push(+boneWidth, -boneWidth);\n    } else if (animationDirection === 'verticalDown') {\n      outputRange.push(-boneHeight, +boneHeight);\n    } else if (animationDirection === 'verticalTop') {\n      outputRange.push(+boneHeight, -boneHeight);\n    }\n\n    return outputRange;\n  };\n\n  var getGradientTransform = function getGradientTransform(boneLayout) {\n    var transform = {};\n    var boneWidth = getBoneWidth(boneLayout);\n    var boneHeight = getBoneHeight(boneLayout);\n\n    if (animationDirection === 'verticalTop' || animationDirection === 'verticalDown' || animationDirection === 'horizontalLeft' || animationDirection === 'horizontalRight') {\n      var interpolatedPosition = (0, react_native_reanimated_1.interpolateNode)(animationValue, {\n        inputRange: [0, 1],\n        outputRange: getPositionRange(boneLayout)\n      });\n\n      if (animationDirection === 'verticalTop' || animationDirection === 'verticalDown') {\n        transform = {\n          translateY: interpolatedPosition\n        };\n      } else {\n        transform = {\n          translateX: interpolatedPosition\n        };\n      }\n    } else if (animationDirection === 'diagonalDownRight' || animationDirection === 'diagonalTopRight' || animationDirection === 'diagonalDownLeft' || animationDirection === 'diagonalTopLeft') {\n      var diagonal = Math.sqrt(boneHeight * boneHeight + boneWidth * boneWidth);\n      var mainDimension = Math.max(boneHeight, boneWidth);\n      var oppositeDimension = mainDimension === boneWidth ? boneHeight : boneWidth;\n      var diagonalAngle = Math.acos(mainDimension / diagonal);\n      var rotateAngle = animationDirection === 'diagonalDownRight' || animationDirection === 'diagonalTopLeft' ? Math.PI / 2 - diagonalAngle : Math.PI / 2 + diagonalAngle;\n      var additionalRotate = animationDirection === 'diagonalDownRight' || animationDirection === 'diagonalTopLeft' ? 2 * diagonalAngle : -2 * diagonalAngle;\n      var distanceFactor = (diagonal + oppositeDimension) / 2;\n      if (mainDimension === boneWidth && boneWidth !== boneHeight) rotateAngle += additionalRotate;\n      var sinComponent = Math.sin(diagonalAngle) * distanceFactor;\n      var cosComponent = Math.cos(diagonalAngle) * distanceFactor;\n      var xOutputRange = [0, 0];\n      var yOutputRange = [0, 0];\n\n      if (animationDirection === 'diagonalDownRight' || animationDirection === 'diagonalTopLeft') {\n        xOutputRange = animationDirection === 'diagonalDownRight' ? [-sinComponent, sinComponent] : [sinComponent, -sinComponent];\n        yOutputRange = animationDirection === 'diagonalDownRight' ? [-cosComponent, cosComponent] : [cosComponent, -cosComponent];\n      } else {\n        xOutputRange = animationDirection === 'diagonalDownLeft' ? [-sinComponent, sinComponent] : [sinComponent, -sinComponent];\n        yOutputRange = animationDirection === 'diagonalDownLeft' ? [cosComponent, -cosComponent] : [-cosComponent, cosComponent];\n\n        if (mainDimension === boneHeight && boneWidth !== boneHeight) {\n          xOutputRange.reverse();\n          yOutputRange.reverse();\n        }\n      }\n\n      var translateX = (0, react_native_reanimated_1.interpolateNode)(animationValue, {\n        inputRange: [0, 1],\n        outputRange: xOutputRange\n      });\n      var translateY = (0, react_native_reanimated_1.interpolateNode)(animationValue, {\n        inputRange: [0, 1],\n        outputRange: yOutputRange\n      });\n\n      if (mainDimension === boneWidth) {\n        var _ref2 = [translateY, translateX];\n        translateX = _ref2[0];\n        translateY = _ref2[1];\n      }\n\n      var rotate = rotateAngle + \"rad\";\n      transform = {\n        translateX: translateX,\n        translateY: translateY,\n        rotate: rotate\n      };\n    }\n\n    return transform;\n  };\n\n  var getBoneContainer = function getBoneContainer(layoutStyle, childrenBones, key) {\n    return _reactJsxRuntime.jsx(react_native_1.View, {\n      style: layoutStyle,\n      children: childrenBones\n    }, layoutStyle.key || key);\n  };\n\n  var getStaticBone = function getStaticBone(layoutStyle, key) {\n    return _reactJsxRuntime.jsx(react_native_reanimated_1.default.View, {\n      style: getStaticBoneStyles(layoutStyle)\n    }, layoutStyle.key || key);\n  };\n\n  var getShiverBone = function getShiverBone(layoutStyle, key) {\n    var animatedStyle = _extends({\n      transform: [getGradientTransform(layoutStyle)]\n    }, getGradientSize(layoutStyle));\n\n    return _reactJsxRuntime.jsx(react_native_1.View, {\n      style: getBoneStyles(layoutStyle),\n      children: _reactJsxRuntime.jsx(react_native_reanimated_1.default.View, {\n        style: [styles.absoluteGradient, animatedStyle],\n        children: _reactJsxRuntime.jsx(expo_linear_gradient_1.LinearGradient, {\n          colors: [boneColor, highlightColor, boneColor],\n          start: {\n            x: 0,\n            y: 0\n          },\n          end: getGradientEndDirection(layoutStyle),\n          style: styles.gradientChild\n        })\n      })\n    }, layoutStyle.key || key);\n  };\n\n  var getBones = function getBones(bonesLayout, childrenItems) {\n    var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n    if (bonesLayout && bonesLayout.length > 0) {\n      var iterator = new Array(bonesLayout.length).fill(0);\n      return iterator.map(function (_, i) {\n        if (bonesLayout[i].children && bonesLayout[i].children.length > 0) {\n          var containerPrefix = bonesLayout[i].key || \"bone_container_\" + i;\n\n          var _a = bonesLayout[i],\n              childBones = _a.children,\n              layoutStyle = __rest(_a, [\"children\"]);\n\n          return getBoneContainer(layoutStyle, getBones(childBones, [], containerPrefix), containerPrefix);\n        }\n\n        if (animationType === 'pulse' || animationType === 'none') {\n          return getStaticBone(bonesLayout[i], prefix ? prefix + \"_\" + i : i);\n        }\n\n        return getShiverBone(bonesLayout[i], prefix ? prefix + \"_\" + i : i);\n      });\n    }\n\n    return React.Children.map(childrenItems, function (child, i) {\n      var styling = child.props.style || {};\n\n      if (animationType === 'pulse' || animationType === 'none') {\n        return getStaticBone(styling, i);\n      }\n\n      return getShiverBone(styling, i);\n    });\n  };\n\n  return _reactJsxRuntime.jsx(react_native_1.View, {\n    style: containerStyle,\n    onLayout: onLayout,\n    children: isLoading ? getBones(layout, children) : children\n  });\n};\n\nexports.default = React.memo(SkeletonContent);","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__rest","s","e","t","p","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","exports","React","require","expo_linear_gradient_1","react_native_reanimated_1","v1_1","Constants_1","default","useCode","set","cond","eq","useState","useCallback","styles","react_native_1","StyleSheet","absoluteGradient","height","position","width","container","alignItems","flex","justifyContent","gradientChild","useLayout","size","setSize","onLayout","event","nativeEvent","layout","SkeletonContent","containerStyle","easing","DEFAULT_EASING","duration","DEFAULT_DURATION","animationType","DEFAULT_ANIMATION_TYPE","animationDirection","DEFAULT_ANIMATION_DIRECTION","isLoading","DEFAULT_LOADING","boneColor","DEFAULT_BONE_COLOR","highlightColor","DEFAULT_HIGHLIGHT_COLOR","children","animationValue","useValue","loadingValue","shiverValue","componentSize","loop","boomerang","getBoneWidth","boneLayout","getBoneHeight","getGradientEndDirection","direction","x","y","boneWidth","boneHeight","getBoneStyles","backgroundColor","borderRadius","boneStyle","DEFAULT_BORDER_RADIUS","overflow","getGradientSize","gradientStyle","getStaticBoneStyles","pulseStyles","interpolateColor","inputRange","outputRange","pop","getPositionRange","push","getGradientTransform","transform","interpolatedPosition","interpolateNode","translateY","translateX","diagonal","Math","sqrt","mainDimension","max","oppositeDimension","diagonalAngle","acos","rotateAngle","PI","additionalRotate","distanceFactor","sinComponent","sin","cosComponent","cos","xOutputRange","yOutputRange","reverse","rotate","getBoneContainer","layoutStyle","childrenBones","key","getStaticBone","getShiverBone","animatedStyle","getBones","bonesLayout","childrenItems","prefix","iterator","Array","fill","map","_","containerPrefix","_a","childBones","Children","child","styling","props","style","memo"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/node_modules/react-native-skeleton-content/lib/SkeletonContent.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst expo_linear_gradient_1 = require(\"expo-linear-gradient\");\nconst react_native_reanimated_1 = __importStar(require(\"react-native-reanimated\"));\nconst v1_1 = require(\"react-native-redash/lib/module/v1\");\nconst Constants_1 = require(\"./Constants\");\nconst { useCode, set, cond, eq } = react_native_reanimated_1.default;\nconst { useState, useCallback } = React;\nconst styles = react_native_1.StyleSheet.create({\n    absoluteGradient: {\n        height: '100%',\n        position: 'absolute',\n        width: '100%'\n    },\n    container: {\n        alignItems: 'center',\n        flex: 1,\n        justifyContent: 'center'\n    },\n    gradientChild: {\n        flex: 1\n    }\n});\nconst useLayout = () => {\n    const [size, setSize] = useState({ width: 0, height: 0 });\n    const onLayout = useCallback(event => {\n        const { width, height } = event.nativeEvent.layout;\n        setSize({ width, height });\n    }, []);\n    return [size, onLayout];\n};\nconst SkeletonContent = ({ containerStyle = styles.container, easing = Constants_1.DEFAULT_EASING, duration = Constants_1.DEFAULT_DURATION, layout = [], animationType = Constants_1.DEFAULT_ANIMATION_TYPE, animationDirection = Constants_1.DEFAULT_ANIMATION_DIRECTION, isLoading = Constants_1.DEFAULT_LOADING, boneColor = Constants_1.DEFAULT_BONE_COLOR, highlightColor = Constants_1.DEFAULT_HIGHLIGHT_COLOR, children }) => {\n    const animationValue = (0, v1_1.useValue)(0);\n    const loadingValue = (0, v1_1.useValue)(isLoading ? 1 : 0);\n    const shiverValue = (0, v1_1.useValue)(animationType === 'shiver' ? 1 : 0);\n    const [componentSize, onLayout] = useLayout();\n    useCode(() => cond(eq(loadingValue, 1), [\n        cond(eq(shiverValue, 1), [\n            set(animationValue, (0, v1_1.loop)({\n                duration,\n                easing\n            }))\n        ], [\n            set(animationValue, (0, v1_1.loop)({\n                duration: duration / 2,\n                easing,\n                boomerang: true\n            }))\n        ])\n    ]), [loadingValue, shiverValue, animationValue]);\n    const getBoneWidth = (boneLayout) => (typeof boneLayout.width === 'string'\n        ? componentSize.width\n        : boneLayout.width) || 0;\n    const getBoneHeight = (boneLayout) => (typeof boneLayout.height === 'string'\n        ? componentSize.height\n        : boneLayout.height) || 0;\n    const getGradientEndDirection = (boneLayout) => {\n        let direction = { x: 0, y: 0 };\n        if (animationType === 'shiver') {\n            if (animationDirection === 'horizontalLeft' ||\n                animationDirection === 'horizontalRight') {\n                direction = { x: 1, y: 0 };\n            }\n            else if (animationDirection === 'verticalTop' ||\n                animationDirection === 'verticalDown') {\n                direction = { x: 0, y: 1 };\n            }\n            else if (animationDirection === 'diagonalTopRight' ||\n                animationDirection === 'diagonalDownRight' ||\n                animationDirection === 'diagonalDownLeft' ||\n                animationDirection === 'diagonalTopLeft') {\n                const boneWidth = getBoneWidth(boneLayout);\n                const boneHeight = getBoneHeight(boneLayout);\n                if (boneWidth && boneHeight && boneWidth > boneHeight)\n                    return { x: 0, y: 1 };\n                return { x: 1, y: 0 };\n            }\n        }\n        return direction;\n    };\n    const getBoneStyles = (boneLayout) => {\n        const { backgroundColor, borderRadius } = boneLayout;\n        const boneWidth = getBoneWidth(boneLayout);\n        const boneHeight = getBoneHeight(boneLayout);\n        const boneStyle = Object.assign({ width: boneWidth, height: boneHeight, borderRadius: borderRadius || Constants_1.DEFAULT_BORDER_RADIUS }, boneLayout);\n        if (animationType !== 'pulse') {\n            boneStyle.overflow = 'hidden';\n            boneStyle.backgroundColor = backgroundColor || boneColor;\n        }\n        if (animationDirection === 'diagonalDownRight' ||\n            animationDirection === 'diagonalDownLeft' ||\n            animationDirection === 'diagonalTopRight' ||\n            animationDirection === 'diagonalTopLeft') {\n            boneStyle.justifyContent = 'center';\n            boneStyle.alignItems = 'center';\n        }\n        return boneStyle;\n    };\n    const getGradientSize = (boneLayout) => {\n        const boneWidth = getBoneWidth(boneLayout);\n        const boneHeight = getBoneHeight(boneLayout);\n        const gradientStyle = {};\n        if (animationDirection === 'diagonalDownRight' ||\n            animationDirection === 'diagonalDownLeft' ||\n            animationDirection === 'diagonalTopRight' ||\n            animationDirection === 'diagonalTopLeft') {\n            gradientStyle.width = boneWidth;\n            gradientStyle.height = boneHeight;\n            if (boneHeight >= boneWidth)\n                gradientStyle.height *= 1.5;\n            else\n                gradientStyle.width *= 1.5;\n        }\n        return gradientStyle;\n    };\n    const getStaticBoneStyles = (boneLayout) => {\n        const pulseStyles = [\n            getBoneStyles(boneLayout),\n            {\n                backgroundColor: (0, v1_1.interpolateColor)(animationValue, {\n                    inputRange: [0, 1],\n                    outputRange: [boneColor, highlightColor]\n                })\n            }\n        ];\n        if (animationType === 'none')\n            pulseStyles.pop();\n        return pulseStyles;\n    };\n    const getPositionRange = (boneLayout) => {\n        const outputRange = [];\n        // use layout dimensions for percentages (string type)\n        const boneWidth = getBoneWidth(boneLayout);\n        const boneHeight = getBoneHeight(boneLayout);\n        if (animationDirection === 'horizontalRight') {\n            outputRange.push(-boneWidth, +boneWidth);\n        }\n        else if (animationDirection === 'horizontalLeft') {\n            outputRange.push(+boneWidth, -boneWidth);\n        }\n        else if (animationDirection === 'verticalDown') {\n            outputRange.push(-boneHeight, +boneHeight);\n        }\n        else if (animationDirection === 'verticalTop') {\n            outputRange.push(+boneHeight, -boneHeight);\n        }\n        return outputRange;\n    };\n    const getGradientTransform = (boneLayout) => {\n        let transform = {};\n        const boneWidth = getBoneWidth(boneLayout);\n        const boneHeight = getBoneHeight(boneLayout);\n        if (animationDirection === 'verticalTop' ||\n            animationDirection === 'verticalDown' ||\n            animationDirection === 'horizontalLeft' ||\n            animationDirection === 'horizontalRight') {\n            const interpolatedPosition = (0, react_native_reanimated_1.interpolateNode)(animationValue, {\n                inputRange: [0, 1],\n                outputRange: getPositionRange(boneLayout)\n            });\n            if (animationDirection === 'verticalTop' ||\n                animationDirection === 'verticalDown') {\n                transform = { translateY: interpolatedPosition };\n            }\n            else {\n                transform = { translateX: interpolatedPosition };\n            }\n        }\n        else if (animationDirection === 'diagonalDownRight' ||\n            animationDirection === 'diagonalTopRight' ||\n            animationDirection === 'diagonalDownLeft' ||\n            animationDirection === 'diagonalTopLeft') {\n            const diagonal = Math.sqrt(boneHeight * boneHeight + boneWidth * boneWidth);\n            const mainDimension = Math.max(boneHeight, boneWidth);\n            const oppositeDimension = mainDimension === boneWidth ? boneHeight : boneWidth;\n            const diagonalAngle = Math.acos(mainDimension / diagonal);\n            let rotateAngle = animationDirection === 'diagonalDownRight' ||\n                animationDirection === 'diagonalTopLeft'\n                ? Math.PI / 2 - diagonalAngle\n                : Math.PI / 2 + diagonalAngle;\n            const additionalRotate = animationDirection === 'diagonalDownRight' ||\n                animationDirection === 'diagonalTopLeft'\n                ? 2 * diagonalAngle\n                : -2 * diagonalAngle;\n            const distanceFactor = (diagonal + oppositeDimension) / 2;\n            if (mainDimension === boneWidth && boneWidth !== boneHeight)\n                rotateAngle += additionalRotate;\n            const sinComponent = Math.sin(diagonalAngle) * distanceFactor;\n            const cosComponent = Math.cos(diagonalAngle) * distanceFactor;\n            let xOutputRange = [0, 0];\n            let yOutputRange = [0, 0];\n            if (animationDirection === 'diagonalDownRight' ||\n                animationDirection === 'diagonalTopLeft') {\n                xOutputRange =\n                    animationDirection === 'diagonalDownRight'\n                        ? [-sinComponent, sinComponent]\n                        : [sinComponent, -sinComponent];\n                yOutputRange =\n                    animationDirection === 'diagonalDownRight'\n                        ? [-cosComponent, cosComponent]\n                        : [cosComponent, -cosComponent];\n            }\n            else {\n                xOutputRange =\n                    animationDirection === 'diagonalDownLeft'\n                        ? [-sinComponent, sinComponent]\n                        : [sinComponent, -sinComponent];\n                yOutputRange =\n                    animationDirection === 'diagonalDownLeft'\n                        ? [cosComponent, -cosComponent]\n                        : [-cosComponent, cosComponent];\n                if (mainDimension === boneHeight && boneWidth !== boneHeight) {\n                    xOutputRange.reverse();\n                    yOutputRange.reverse();\n                }\n            }\n            let translateX = (0, react_native_reanimated_1.interpolateNode)(animationValue, {\n                inputRange: [0, 1],\n                outputRange: xOutputRange\n            });\n            let translateY = (0, react_native_reanimated_1.interpolateNode)(animationValue, {\n                inputRange: [0, 1],\n                outputRange: yOutputRange\n            });\n            // swapping the translates if width is the main dim\n            if (mainDimension === boneWidth)\n                [translateX, translateY] = [translateY, translateX];\n            const rotate = `${rotateAngle}rad`;\n            transform = { translateX, translateY, rotate };\n        }\n        return transform;\n    };\n    const getBoneContainer = (layoutStyle, childrenBones, key) => (<react_native_1.View key={layoutStyle.key || key} style={layoutStyle}>\n      {childrenBones}\n    </react_native_1.View>);\n    const getStaticBone = (layoutStyle, key) => (<react_native_reanimated_1.default.View key={layoutStyle.key || key} style={getStaticBoneStyles(layoutStyle)}/>);\n    const getShiverBone = (layoutStyle, key) => {\n        const animatedStyle = Object.assign({ transform: [getGradientTransform(layoutStyle)] }, getGradientSize(layoutStyle));\n        return (<react_native_1.View key={layoutStyle.key || key} style={getBoneStyles(layoutStyle)}>\n        <react_native_reanimated_1.default.View style={[styles.absoluteGradient, animatedStyle]}>\n          <expo_linear_gradient_1.LinearGradient colors={[boneColor, highlightColor, boneColor]} start={{ x: 0, y: 0 }} end={getGradientEndDirection(layoutStyle)} style={styles.gradientChild}/>\n        </react_native_reanimated_1.default.View>\n      </react_native_1.View>);\n    };\n    const getBones = (bonesLayout, childrenItems, prefix = '') => {\n        if (bonesLayout && bonesLayout.length > 0) {\n            const iterator = new Array(bonesLayout.length).fill(0);\n            return iterator.map((_, i) => {\n                // has a nested layout\n                if (bonesLayout[i].children && bonesLayout[i].children.length > 0) {\n                    const containerPrefix = bonesLayout[i].key || `bone_container_${i}`;\n                    const _a = bonesLayout[i], { children: childBones } = _a, layoutStyle = __rest(_a, [\"children\"]);\n                    return getBoneContainer(layoutStyle, getBones(childBones, [], containerPrefix), containerPrefix);\n                }\n                if (animationType === 'pulse' || animationType === 'none') {\n                    return getStaticBone(bonesLayout[i], prefix ? `${prefix}_${i}` : i);\n                }\n                return getShiverBone(bonesLayout[i], prefix ? `${prefix}_${i}` : i);\n            });\n            // no layout, matching children's layout\n        }\n        return React.Children.map(childrenItems, (child, i) => {\n            const styling = child.props.style || {};\n            if (animationType === 'pulse' || animationType === 'none') {\n                return getStaticBone(styling, i);\n            }\n            return getShiverBone(styling, i);\n        });\n    };\n    return (<react_native_1.View style={containerStyle} onLayout={onLayout}>\n      {isLoading ? getBones(layout, children) : children}\n    </react_native_1.View>);\n};\nexports.default = React.memo(SkeletonContent);\n"],"mappings":"AAAA;;;;;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,KAAmCC,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;EAC5F,IAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;EACtBJ,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyBG,EAAzB,EAA6B;IAAEG,UAAU,EAAE,IAAd;IAAoBC,GAAG,EAAE,eAAW;MAAE,OAAON,CAAC,CAACC,CAAD,CAAR;IAAc;EAApD,CAA7B;AACH,CAHwD,GAGnD,UAASF,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;EACxB,IAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;EACtBF,CAAC,CAACG,EAAD,CAAD,GAAQF,CAAC,CAACC,CAAD,CAAT;AACH,CANqB,CAAtB;;AAOA,IAAIM,kBAAkB,GAAI,QAAQ,KAAKA,kBAAd,KAAsCV,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYS,CAAZ,EAAe;EAC3FX,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyB,SAAzB,EAAoC;IAAEM,UAAU,EAAE,IAAd;IAAoBI,KAAK,EAAED;EAA3B,CAApC;AACH,CAF8D,GAE1D,UAAST,CAAT,EAAYS,CAAZ,EAAe;EAChBT,CAAC,CAAC,SAAD,CAAD,GAAeS,CAAf;AACH,CAJwB,CAAzB;;AAKA,IAAIE,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;EAC7D,IAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;EAC3B,IAAIE,MAAM,GAAG,EAAb;EACA,IAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIV,CAAT,IAAcU,GAAd;IAAmB,IAAIV,CAAC,KAAK,SAAN,IAAmBJ,MAAM,CAACiB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CV,CAA1C,CAAvB,EAAqEL,eAAe,CAACiB,MAAD,EAASF,GAAT,EAAcV,CAAd,CAAf;EAAxF;;EACjBM,kBAAkB,CAACM,MAAD,EAASF,GAAT,CAAlB;;EACA,OAAOE,MAAP;AACH,CAND;;AAOA,IAAII,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EAClD,IAAIC,CAAC,GAAG,EAAR;;EACA,KAAK,IAAIC,CAAT,IAAcH,CAAd;IAAiB,IAAIrB,MAAM,CAACiB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCE,CAArC,EAAwCG,CAAxC,KAA8CF,CAAC,CAACG,OAAF,CAAUD,CAAV,IAAe,CAAjE,EACbD,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;EADJ;;EAEA,IAAIH,CAAC,IAAI,IAAL,IAAa,OAAOrB,MAAM,CAAC0B,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWH,CAAC,GAAGxB,MAAM,CAAC0B,qBAAP,CAA6BL,CAA7B,CAApB,EAAqDM,CAAC,GAAGH,CAAC,CAACI,MAA3D,EAAmED,CAAC,EAApE,EAAwE;IACpE,IAAIL,CAAC,CAACG,OAAF,CAAUD,CAAC,CAACG,CAAD,CAAX,IAAkB,CAAlB,IAAuB3B,MAAM,CAACiB,SAAP,CAAiBY,oBAAjB,CAAsCV,IAAtC,CAA2CE,CAA3C,EAA8CG,CAAC,CAACG,CAAD,CAA/C,CAA3B,EACIJ,CAAC,CAACC,CAAC,CAACG,CAAD,CAAF,CAAD,GAAUN,CAAC,CAACG,CAAC,CAACG,CAAD,CAAF,CAAX;EACP;EACL,OAAOJ,CAAP;AACH,CAVD;;AAWAvB,MAAM,CAACO,cAAP,CAAsBuB,OAAtB,EAA+B,YAA/B,EAA6C;EAAElB,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMmB,KAAK,GAAGlB,YAAY,CAACmB,OAAO,CAAC,OAAD,CAAR,CAA1B;;;;AAEA,IAAMC,sBAAsB,GAAGD,OAAO,CAAC,sBAAD,CAAtC;;AACA,IAAME,yBAAyB,GAAGrB,YAAY,CAACmB,OAAO,CAAC,yBAAD,CAAR,CAA9C;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,mCAAD,CAApB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,eAA3B;;AACA,4BAAmCE,yBAAyB,CAACG,OAA7D;AAAA,IAAQC,OAAR,yBAAQA,OAAR;AAAA,IAAiBC,GAAjB,yBAAiBA,GAAjB;AAAA,IAAsBC,IAAtB,yBAAsBA,IAAtB;AAAA,IAA4BC,EAA5B,yBAA4BA,EAA5B;AACA,IAAQC,QAAR,GAAkCX,KAAlC,CAAQW,QAAR;AAAA,IAAkBC,WAAlB,GAAkCZ,KAAlC,CAAkBY,WAAlB;AACA,IAAMC,MAAM,GAAGC,cAAc,CAACC,UAAf,CAA0B7C,MAA1B,CAAiC;EAC5C8C,gBAAgB,EAAE;IACdC,MAAM,EAAE,MADM;IAEdC,QAAQ,EAAE,UAFI;IAGdC,KAAK,EAAE;EAHO,CAD0B;EAM5CC,SAAS,EAAE;IACPC,UAAU,EAAE,QADL;IAEPC,IAAI,EAAE,CAFC;IAGPC,cAAc,EAAE;EAHT,CANiC;EAW5CC,aAAa,EAAE;IACXF,IAAI,EAAE;EADK;AAX6B,CAAjC,CAAf;;AAeA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;EACpB,gBAAwBd,QAAQ,CAAC;IAAEQ,KAAK,EAAE,CAAT;IAAYF,MAAM,EAAE;EAApB,CAAD,CAAhC;EAAA;EAAA,IAAOS,IAAP;EAAA,IAAaC,OAAb;;EACA,IAAMC,QAAQ,GAAGhB,WAAW,CAAC,UAAAiB,KAAK,EAAI;IAClC,4BAA0BA,KAAK,CAACC,WAAN,CAAkBC,MAA5C;IAAA,IAAQZ,KAAR,yBAAQA,KAAR;IAAA,IAAeF,MAAf,yBAAeA,MAAf;IACAU,OAAO,CAAC;MAAER,KAAK,EAALA,KAAF;MAASF,MAAM,EAANA;IAAT,CAAD,CAAP;EACH,CAH2B,EAGzB,EAHyB,CAA5B;EAIA,OAAO,CAACS,IAAD,EAAOE,QAAP,CAAP;AACH,CAPD;;AAQA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,OAA6Y;EAAA,+BAA1YC,cAA0Y;EAAA,IAA1YA,cAA0Y,oCAAzXpB,MAAM,CAACO,SAAkX;EAAA,uBAAvWc,MAAuW;EAAA,IAAvWA,MAAuW,4BAA9V7B,WAAW,CAAC8B,cAAkV;EAAA,yBAAlUC,QAAkU;EAAA,IAAlUA,QAAkU,8BAAvT/B,WAAW,CAACgC,gBAA2S;EAAA,uBAAzRN,MAAyR;EAAA,IAAzRA,MAAyR,4BAAhR,EAAgR;EAAA,8BAA5QO,aAA4Q;EAAA,IAA5QA,aAA4Q,mCAA5PjC,WAAW,CAACkC,sBAAgP;EAAA,iCAAxNC,kBAAwN;EAAA,IAAxNA,kBAAwN,sCAAnMnC,WAAW,CAACoC,2BAAuL;EAAA,0BAA1JC,SAA0J;EAAA,IAA1JA,SAA0J,+BAA9IrC,WAAW,CAACsC,eAAkI;EAAA,0BAAjHC,SAAiH;EAAA,IAAjHA,SAAiH,+BAArGvC,WAAW,CAACwC,kBAAyF;EAAA,+BAArEC,cAAqE;EAAA,IAArEA,cAAqE,oCAApDzC,WAAW,CAAC0C,uBAAwC;EAAA,IAAfC,QAAe,QAAfA,QAAe;EACja,IAAMC,cAAc,GAAG,CAAC,GAAG7C,IAAI,CAAC8C,QAAT,EAAmB,CAAnB,CAAvB;EACA,IAAMC,YAAY,GAAG,CAAC,GAAG/C,IAAI,CAAC8C,QAAT,EAAmBR,SAAS,GAAG,CAAH,GAAO,CAAnC,CAArB;EACA,IAAMU,WAAW,GAAG,CAAC,GAAGhD,IAAI,CAAC8C,QAAT,EAAmBZ,aAAa,KAAK,QAAlB,GAA6B,CAA7B,GAAiC,CAApD,CAApB;;EACA,iBAAkCb,SAAS,EAA3C;EAAA;EAAA,IAAO4B,aAAP;EAAA,IAAsBzB,QAAtB;;EACArB,OAAO,CAAC;IAAA,OAAME,IAAI,CAACC,EAAE,CAACyC,YAAD,EAAe,CAAf,CAAH,EAAsB,CACpC1C,IAAI,CAACC,EAAE,CAAC0C,WAAD,EAAc,CAAd,CAAH,EAAqB,CACrB5C,GAAG,CAACyC,cAAD,EAAiB,CAAC,GAAG7C,IAAI,CAACkD,IAAT,EAAe;MAC/BlB,QAAQ,EAARA,QAD+B;MAE/BF,MAAM,EAANA;IAF+B,CAAf,CAAjB,CADkB,CAArB,EAKD,CACC1B,GAAG,CAACyC,cAAD,EAAiB,CAAC,GAAG7C,IAAI,CAACkD,IAAT,EAAe;MAC/BlB,QAAQ,EAAEA,QAAQ,GAAG,CADU;MAE/BF,MAAM,EAANA,MAF+B;MAG/BqB,SAAS,EAAE;IAHoB,CAAf,CAAjB,CADJ,CALC,CADgC,CAAtB,CAAV;EAAA,CAAD,EAaH,CAACJ,YAAD,EAAeC,WAAf,EAA4BH,cAA5B,CAbG,CAAP;;EAcA,IAAMO,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD;IAAA,OAAgB,CAAC,OAAOA,UAAU,CAACtC,KAAlB,KAA4B,QAA5B,GAChCkC,aAAa,CAAClC,KADkB,GAEhCsC,UAAU,CAACtC,KAFoB,KAEV,CAFN;EAAA,CAArB;;EAGA,IAAMuC,aAAa,GAAG,SAAhBA,aAAgB,CAACD,UAAD;IAAA,OAAgB,CAAC,OAAOA,UAAU,CAACxC,MAAlB,KAA6B,QAA7B,GACjCoC,aAAa,CAACpC,MADmB,GAEjCwC,UAAU,CAACxC,MAFqB,KAEV,CAFN;EAAA,CAAtB;;EAGA,IAAM0C,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACF,UAAD,EAAgB;IAC5C,IAAIG,SAAS,GAAG;MAAEC,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAE;IAAX,CAAhB;;IACA,IAAIxB,aAAa,KAAK,QAAtB,EAAgC;MAC5B,IAAIE,kBAAkB,KAAK,gBAAvB,IACAA,kBAAkB,KAAK,iBAD3B,EAC8C;QAC1CoB,SAAS,GAAG;UAAEC,CAAC,EAAE,CAAL;UAAQC,CAAC,EAAE;QAAX,CAAZ;MACH,CAHD,MAIK,IAAItB,kBAAkB,KAAK,aAAvB,IACLA,kBAAkB,KAAK,cADtB,EACsC;QACvCoB,SAAS,GAAG;UAAEC,CAAC,EAAE,CAAL;UAAQC,CAAC,EAAE;QAAX,CAAZ;MACH,CAHI,MAIA,IAAItB,kBAAkB,KAAK,kBAAvB,IACLA,kBAAkB,KAAK,mBADlB,IAELA,kBAAkB,KAAK,kBAFlB,IAGLA,kBAAkB,KAAK,iBAHtB,EAGyC;QAC1C,IAAMuB,SAAS,GAAGP,YAAY,CAACC,UAAD,CAA9B;QACA,IAAMO,UAAU,GAAGN,aAAa,CAACD,UAAD,CAAhC;QACA,IAAIM,SAAS,IAAIC,UAAb,IAA2BD,SAAS,GAAGC,UAA3C,EACI,OAAO;UAAEH,CAAC,EAAE,CAAL;UAAQC,CAAC,EAAE;QAAX,CAAP;QACJ,OAAO;UAAED,CAAC,EAAE,CAAL;UAAQC,CAAC,EAAE;QAAX,CAAP;MACH;IACJ;;IACD,OAAOF,SAAP;EACH,CAvBD;;EAwBA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACR,UAAD,EAAgB;IAClC,IAAQS,eAAR,GAA0CT,UAA1C,CAAQS,eAAR;IAAA,IAAyBC,YAAzB,GAA0CV,UAA1C,CAAyBU,YAAzB;IACA,IAAMJ,SAAS,GAAGP,YAAY,CAACC,UAAD,CAA9B;IACA,IAAMO,UAAU,GAAGN,aAAa,CAACD,UAAD,CAAhC;;IACA,IAAMW,SAAS,GAAG,SAAc;MAAEjD,KAAK,EAAE4C,SAAT;MAAoB9C,MAAM,EAAE+C,UAA5B;MAAwCG,YAAY,EAAEA,YAAY,IAAI9D,WAAW,CAACgE;IAAlF,CAAd,EAAyHZ,UAAzH,CAAlB;;IACA,IAAInB,aAAa,KAAK,OAAtB,EAA+B;MAC3B8B,SAAS,CAACE,QAAV,GAAqB,QAArB;MACAF,SAAS,CAACF,eAAV,GAA4BA,eAAe,IAAItB,SAA/C;IACH;;IACD,IAAIJ,kBAAkB,KAAK,mBAAvB,IACAA,kBAAkB,KAAK,kBADvB,IAEAA,kBAAkB,KAAK,kBAFvB,IAGAA,kBAAkB,KAAK,iBAH3B,EAG8C;MAC1C4B,SAAS,CAAC7C,cAAV,GAA2B,QAA3B;MACA6C,SAAS,CAAC/C,UAAV,GAAuB,QAAvB;IACH;;IACD,OAAO+C,SAAP;EACH,CAjBD;;EAkBA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACd,UAAD,EAAgB;IACpC,IAAMM,SAAS,GAAGP,YAAY,CAACC,UAAD,CAA9B;IACA,IAAMO,UAAU,GAAGN,aAAa,CAACD,UAAD,CAAhC;IACA,IAAMe,aAAa,GAAG,EAAtB;;IACA,IAAIhC,kBAAkB,KAAK,mBAAvB,IACAA,kBAAkB,KAAK,kBADvB,IAEAA,kBAAkB,KAAK,kBAFvB,IAGAA,kBAAkB,KAAK,iBAH3B,EAG8C;MAC1CgC,aAAa,CAACrD,KAAd,GAAsB4C,SAAtB;MACAS,aAAa,CAACvD,MAAd,GAAuB+C,UAAvB;MACA,IAAIA,UAAU,IAAID,SAAlB,EACIS,aAAa,CAACvD,MAAd,IAAwB,GAAxB,CADJ,KAGIuD,aAAa,CAACrD,KAAd,IAAuB,GAAvB;IACP;;IACD,OAAOqD,aAAP;EACH,CAhBD;;EAiBA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAChB,UAAD,EAAgB;IACxC,IAAMiB,WAAW,GAAG,CAChBT,aAAa,CAACR,UAAD,CADG,EAEhB;MACIS,eAAe,EAAE,CAAC,GAAG9D,IAAI,CAACuE,gBAAT,EAA2B1B,cAA3B,EAA2C;QACxD2B,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD4C;QAExDC,WAAW,EAAE,CAACjC,SAAD,EAAYE,cAAZ;MAF2C,CAA3C;IADrB,CAFgB,CAApB;IASA,IAAIR,aAAa,KAAK,MAAtB,EACIoC,WAAW,CAACI,GAAZ;IACJ,OAAOJ,WAAP;EACH,CAbD;;EAcA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACtB,UAAD,EAAgB;IACrC,IAAMoB,WAAW,GAAG,EAApB;IAEA,IAAMd,SAAS,GAAGP,YAAY,CAACC,UAAD,CAA9B;IACA,IAAMO,UAAU,GAAGN,aAAa,CAACD,UAAD,CAAhC;;IACA,IAAIjB,kBAAkB,KAAK,iBAA3B,EAA8C;MAC1CqC,WAAW,CAACG,IAAZ,CAAiB,CAACjB,SAAlB,EAA6B,CAACA,SAA9B;IACH,CAFD,MAGK,IAAIvB,kBAAkB,KAAK,gBAA3B,EAA6C;MAC9CqC,WAAW,CAACG,IAAZ,CAAiB,CAACjB,SAAlB,EAA6B,CAACA,SAA9B;IACH,CAFI,MAGA,IAAIvB,kBAAkB,KAAK,cAA3B,EAA2C;MAC5CqC,WAAW,CAACG,IAAZ,CAAiB,CAAChB,UAAlB,EAA8B,CAACA,UAA/B;IACH,CAFI,MAGA,IAAIxB,kBAAkB,KAAK,aAA3B,EAA0C;MAC3CqC,WAAW,CAACG,IAAZ,CAAiB,CAAChB,UAAlB,EAA8B,CAACA,UAA/B;IACH;;IACD,OAAOa,WAAP;EACH,CAlBD;;EAmBA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACxB,UAAD,EAAgB;IACzC,IAAIyB,SAAS,GAAG,EAAhB;IACA,IAAMnB,SAAS,GAAGP,YAAY,CAACC,UAAD,CAA9B;IACA,IAAMO,UAAU,GAAGN,aAAa,CAACD,UAAD,CAAhC;;IACA,IAAIjB,kBAAkB,KAAK,aAAvB,IACAA,kBAAkB,KAAK,cADvB,IAEAA,kBAAkB,KAAK,gBAFvB,IAGAA,kBAAkB,KAAK,iBAH3B,EAG8C;MAC1C,IAAM2C,oBAAoB,GAAG,CAAC,GAAGhF,yBAAyB,CAACiF,eAA9B,EAA+CnC,cAA/C,EAA+D;QACxF2B,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD4E;QAExFC,WAAW,EAAEE,gBAAgB,CAACtB,UAAD;MAF2D,CAA/D,CAA7B;;MAIA,IAAIjB,kBAAkB,KAAK,aAAvB,IACAA,kBAAkB,KAAK,cAD3B,EAC2C;QACvC0C,SAAS,GAAG;UAAEG,UAAU,EAAEF;QAAd,CAAZ;MACH,CAHD,MAIK;QACDD,SAAS,GAAG;UAAEI,UAAU,EAAEH;QAAd,CAAZ;MACH;IACJ,CAfD,MAgBK,IAAI3C,kBAAkB,KAAK,mBAAvB,IACLA,kBAAkB,KAAK,kBADlB,IAELA,kBAAkB,KAAK,kBAFlB,IAGLA,kBAAkB,KAAK,iBAHtB,EAGyC;MAC1C,IAAM+C,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUzB,UAAU,GAAGA,UAAb,GAA0BD,SAAS,GAAGA,SAAhD,CAAjB;MACA,IAAM2B,aAAa,GAAGF,IAAI,CAACG,GAAL,CAAS3B,UAAT,EAAqBD,SAArB,CAAtB;MACA,IAAM6B,iBAAiB,GAAGF,aAAa,KAAK3B,SAAlB,GAA8BC,UAA9B,GAA2CD,SAArE;MACA,IAAM8B,aAAa,GAAGL,IAAI,CAACM,IAAL,CAAUJ,aAAa,GAAGH,QAA1B,CAAtB;MACA,IAAIQ,WAAW,GAAGvD,kBAAkB,KAAK,mBAAvB,IACdA,kBAAkB,KAAK,iBADT,GAEZgD,IAAI,CAACQ,EAAL,GAAU,CAAV,GAAcH,aAFF,GAGZL,IAAI,CAACQ,EAAL,GAAU,CAAV,GAAcH,aAHpB;MAIA,IAAMI,gBAAgB,GAAGzD,kBAAkB,KAAK,mBAAvB,IACrBA,kBAAkB,KAAK,iBADF,GAEnB,IAAIqD,aAFe,GAGnB,CAAC,CAAD,GAAKA,aAHX;MAIA,IAAMK,cAAc,GAAG,CAACX,QAAQ,GAAGK,iBAAZ,IAAiC,CAAxD;MACA,IAAIF,aAAa,KAAK3B,SAAlB,IAA+BA,SAAS,KAAKC,UAAjD,EACI+B,WAAW,IAAIE,gBAAf;MACJ,IAAME,YAAY,GAAGX,IAAI,CAACY,GAAL,CAASP,aAAT,IAA0BK,cAA/C;MACA,IAAMG,YAAY,GAAGb,IAAI,CAACc,GAAL,CAAST,aAAT,IAA0BK,cAA/C;MACA,IAAIK,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAnB;MACA,IAAIC,YAAY,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAnB;;MACA,IAAIhE,kBAAkB,KAAK,mBAAvB,IACAA,kBAAkB,KAAK,iBAD3B,EAC8C;QAC1C+D,YAAY,GACR/D,kBAAkB,KAAK,mBAAvB,GACM,CAAC,CAAC2D,YAAF,EAAgBA,YAAhB,CADN,GAEM,CAACA,YAAD,EAAe,CAACA,YAAhB,CAHV;QAIAK,YAAY,GACRhE,kBAAkB,KAAK,mBAAvB,GACM,CAAC,CAAC6D,YAAF,EAAgBA,YAAhB,CADN,GAEM,CAACA,YAAD,EAAe,CAACA,YAAhB,CAHV;MAIH,CAVD,MAWK;QACDE,YAAY,GACR/D,kBAAkB,KAAK,kBAAvB,GACM,CAAC,CAAC2D,YAAF,EAAgBA,YAAhB,CADN,GAEM,CAACA,YAAD,EAAe,CAACA,YAAhB,CAHV;QAIAK,YAAY,GACRhE,kBAAkB,KAAK,kBAAvB,GACM,CAAC6D,YAAD,EAAe,CAACA,YAAhB,CADN,GAEM,CAAC,CAACA,YAAF,EAAgBA,YAAhB,CAHV;;QAIA,IAAIX,aAAa,KAAK1B,UAAlB,IAAgCD,SAAS,KAAKC,UAAlD,EAA8D;UAC1DuC,YAAY,CAACE,OAAb;UACAD,YAAY,CAACC,OAAb;QACH;MACJ;;MACD,IAAInB,UAAU,GAAG,CAAC,GAAGnF,yBAAyB,CAACiF,eAA9B,EAA+CnC,cAA/C,EAA+D;QAC5E2B,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADgE;QAE5EC,WAAW,EAAE0B;MAF+D,CAA/D,CAAjB;MAIA,IAAIlB,UAAU,GAAG,CAAC,GAAGlF,yBAAyB,CAACiF,eAA9B,EAA+CnC,cAA/C,EAA+D;QAC5E2B,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADgE;QAE5EC,WAAW,EAAE2B;MAF+D,CAA/D,CAAjB;;MAKA,IAAId,aAAa,KAAK3B,SAAtB;QAAA,YAC+B,CAACsB,UAAD,EAAaC,UAAb,CAD/B;QACKA,UADL;QACiBD,UADjB;MAAA;;MAEA,IAAMqB,MAAM,GAAMX,WAAN,QAAZ;MACAb,SAAS,GAAG;QAAEI,UAAU,EAAVA,UAAF;QAAcD,UAAU,EAAVA,UAAd;QAA0BqB,MAAM,EAANA;MAA1B,CAAZ;IACH;;IACD,OAAOxB,SAAP;EACH,CAnFD;;EAoFA,IAAMyB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAcC,aAAd,EAA6BC,GAA7B;IAAA,OAAsC,qBAAC,cAAD,CAAgB,IAAhB;MAAkD,KAAK,EAAEF,WAAzD;MAAA,UAC5DC;IAD4D,GAA0BD,WAAW,CAACE,GAAZ,IAAmBA,GAA7C,CAAtC;EAAA,CAAzB;;EAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACH,WAAD,EAAcE,GAAd;IAAA,OAAuB,qBAAC,yBAAD,CAA2B,OAA3B,CAAmC,IAAnC;MAAqE,KAAK,EAAErC,mBAAmB,CAACmC,WAAD;IAA/F,GAA6CA,WAAW,CAACE,GAAZ,IAAmBA,GAAhE,CAAvB;EAAA,CAAtB;;EACA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,WAAD,EAAcE,GAAd,EAAsB;IACxC,IAAMG,aAAa,GAAG,SAAc;MAAE/B,SAAS,EAAE,CAACD,oBAAoB,CAAC2B,WAAD,CAArB;IAAb,CAAd,EAAkErC,eAAe,CAACqC,WAAD,CAAjF,CAAtB;;IACA,OAAQ,qBAAC,cAAD,CAAgB,IAAhB;MAAkD,KAAK,EAAE3C,aAAa,CAAC2C,WAAD,CAAtE;MAAA,UACR,qBAAC,yBAAD,CAA2B,OAA3B,CAAmC,IAAnC;QAAwC,KAAK,EAAE,CAAC/F,MAAM,CAACG,gBAAR,EAA0BiG,aAA1B,CAA/C;QAAA,UACE,qBAAC,sBAAD,CAAwB,cAAxB;UAAuC,MAAM,EAAE,CAACrE,SAAD,EAAYE,cAAZ,EAA4BF,SAA5B,CAA/C;UAAuF,KAAK,EAAE;YAAEiB,CAAC,EAAE,CAAL;YAAQC,CAAC,EAAE;UAAX,CAA9F;UAA8G,GAAG,EAAEH,uBAAuB,CAACiD,WAAD,CAA1I;UAAyJ,KAAK,EAAE/F,MAAM,CAACW;QAAvK;MADF;IADQ,GAA0BoF,WAAW,CAACE,GAAZ,IAAmBA,GAA7C,CAAR;EAKH,CAPD;;EAQA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAcC,aAAd,EAA6C;IAAA,IAAhBC,MAAgB,uEAAP,EAAO;;IAC1D,IAAIF,WAAW,IAAIA,WAAW,CAACtH,MAAZ,GAAqB,CAAxC,EAA2C;MACvC,IAAMyH,QAAQ,GAAG,IAAIC,KAAJ,CAAUJ,WAAW,CAACtH,MAAtB,EAA8B2H,IAA9B,CAAmC,CAAnC,CAAjB;MACA,OAAOF,QAAQ,CAACG,GAAT,CAAa,UAACC,CAAD,EAAI9H,CAAJ,EAAU;QAE1B,IAAIuH,WAAW,CAACvH,CAAD,CAAX,CAAeoD,QAAf,IAA2BmE,WAAW,CAACvH,CAAD,CAAX,CAAeoD,QAAf,CAAwBnD,MAAxB,GAAiC,CAAhE,EAAmE;UAC/D,IAAM8H,eAAe,GAAGR,WAAW,CAACvH,CAAD,CAAX,CAAekH,GAAf,wBAAwClH,CAAhE;;UACM,IAAAgI,EAAE,GAAGT,WAAW,CAACvH,CAAD,CAAhB;UAAA,IAAiCiI,UAAjC,GAAgDD,EAAhD,CAAuB5E,QAAvB;UAAA,IAAoD4D,WAApD,GAAkEvH,MAAM,CAACuI,EAAD,EAAK,CAAC,UAAD,CAAL,CAAxE;;UACN,OAAOjB,gBAAgB,CAACC,WAAD,EAAcM,QAAQ,CAACW,UAAD,EAAa,EAAb,EAAiBF,eAAjB,CAAtB,EAAyDA,eAAzD,CAAvB;QACH;;QACD,IAAIrF,aAAa,KAAK,OAAlB,IAA6BA,aAAa,KAAK,MAAnD,EAA2D;UACvD,OAAOyE,aAAa,CAACI,WAAW,CAACvH,CAAD,CAAZ,EAAiByH,MAAM,GAAMA,MAAN,SAAgBzH,CAAhB,GAAsBA,CAA7C,CAApB;QACH;;QACD,OAAOoH,aAAa,CAACG,WAAW,CAACvH,CAAD,CAAZ,EAAiByH,MAAM,GAAMA,MAAN,SAAgBzH,CAAhB,GAAsBA,CAA7C,CAApB;MACH,CAXM,CAAP;IAaH;;IACD,OAAOI,KAAK,CAAC8H,QAAN,CAAeL,GAAf,CAAmBL,aAAnB,EAAkC,UAACW,KAAD,EAAQnI,CAAR,EAAc;MACnD,IAAMoI,OAAO,GAAGD,KAAK,CAACE,KAAN,CAAYC,KAAZ,IAAqB,EAArC;;MACA,IAAI5F,aAAa,KAAK,OAAlB,IAA6BA,aAAa,KAAK,MAAnD,EAA2D;QACvD,OAAOyE,aAAa,CAACiB,OAAD,EAAUpI,CAAV,CAApB;MACH;;MACD,OAAOoH,aAAa,CAACgB,OAAD,EAAUpI,CAAV,CAApB;IACH,CANM,CAAP;EAOH,CAxBD;;EAyBA,OAAQ,qBAAC,cAAD,CAAgB,IAAhB;IAAqB,KAAK,EAAEqC,cAA5B;IAA4C,QAAQ,EAAEL,QAAtD;IAAA,UACLc,SAAS,GAAGwE,QAAQ,CAACnF,MAAD,EAASiB,QAAT,CAAX,GAAgCA;EADpC,EAAR;AAGH,CAjPD;;AAkPAjD,OAAO,CAACO,OAAR,GAAkBN,KAAK,CAACmI,IAAN,CAAWnG,eAAX,CAAlB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"accessibilityLabel\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\", \"showFastPaginationControls\", \"numberOfItemsPerPageList\", \"numberOfItemsPerPage\", \"onItemsPerPageChange\", \"selectPageDropdownLabel\", \"selectPageDropdownAccessibilityLabel\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme, withInternalTheme } from \"../../core/theming\";\nimport Button from \"../Button/Button\";\nimport IconButton from \"../IconButton/IconButton\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Menu from \"../Menu/Menu\";\nimport Text from \"../Typography/Text\";\nvar PaginationControls = function PaginationControls(_ref) {\n  var page = _ref.page,\n    numberOfPages = _ref.numberOfPages,\n    onPageChange = _ref.onPageChange,\n    showFastPaginationControls = _ref.showFastPaginationControls;\n  var theme = useInternalTheme();\n  var textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  return React.createElement(React.Fragment, null, showFastPaginationControls ? React.createElement(IconButton, {\n    icon: function icon(_ref2) {\n      var size = _ref2.size,\n        color = _ref2.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"page-first\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(0);\n    },\n    accessibilityLabel: \"page-first\"\n  }) : null, React.createElement(IconButton, {\n    icon: function icon(_ref3) {\n      var size = _ref3.size,\n        color = _ref3.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(page - 1);\n    },\n    accessibilityLabel: \"chevron-left\"\n  }), React.createElement(IconButton, {\n    icon: function icon(_ref4) {\n      var size = _ref4.size,\n        color = _ref4.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(page + 1);\n    },\n    accessibilityLabel: \"chevron-right\"\n  }), showFastPaginationControls ? React.createElement(IconButton, {\n    icon: function icon(_ref5) {\n      var size = _ref5.size,\n        color = _ref5.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"page-last\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(numberOfPages - 1);\n    },\n    accessibilityLabel: \"page-last\"\n  }) : null);\n};\nvar PaginationDropdown = function PaginationDropdown(_ref6) {\n  var numberOfItemsPerPageList = _ref6.numberOfItemsPerPageList,\n    numberOfItemsPerPage = _ref6.numberOfItemsPerPage,\n    onItemsPerPageChange = _ref6.onItemsPerPageChange;\n  var _useInternalTheme = useInternalTheme(),\n    colors = _useInternalTheme.colors;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    showSelect = _React$useState2[0],\n    toggleSelect = _React$useState2[1];\n  return React.createElement(Menu, {\n    visible: showSelect,\n    onDismiss: function onDismiss() {\n      return toggleSelect(!showSelect);\n    },\n    anchor: React.createElement(Button, {\n      mode: \"outlined\",\n      onPress: function onPress() {\n        return toggleSelect(true);\n      },\n      style: styles.button,\n      icon: \"menu-down\",\n      contentStyle: styles.contentStyle\n    }, \"\" + numberOfItemsPerPage)\n  }, numberOfItemsPerPageList === null || numberOfItemsPerPageList === void 0 ? void 0 : numberOfItemsPerPageList.map(function (option) {\n    return React.createElement(Menu.Item, {\n      key: option,\n      titleStyle: option === numberOfItemsPerPage && {\n        color: colors === null || colors === void 0 ? void 0 : colors.primary\n      },\n      onPress: function onPress() {\n        onItemsPerPageChange === null || onItemsPerPageChange === void 0 ? void 0 : onItemsPerPageChange(option);\n        toggleSelect(false);\n      },\n      title: option\n    });\n  }));\n};\nvar DataTablePagination = function DataTablePagination(_ref7) {\n  var label = _ref7.label,\n    accessibilityLabel = _ref7.accessibilityLabel,\n    page = _ref7.page,\n    numberOfPages = _ref7.numberOfPages,\n    onPageChange = _ref7.onPageChange,\n    style = _ref7.style,\n    theme = _ref7.theme,\n    _ref7$showFastPaginat = _ref7.showFastPaginationControls,\n    showFastPaginationControls = _ref7$showFastPaginat === void 0 ? false : _ref7$showFastPaginat,\n    numberOfItemsPerPageList = _ref7.numberOfItemsPerPageList,\n    numberOfItemsPerPage = _ref7.numberOfItemsPerPage,\n    onItemsPerPageChange = _ref7.onItemsPerPageChange,\n    selectPageDropdownLabel = _ref7.selectPageDropdownLabel,\n    selectPageDropdownAccessibilityLabel = _ref7.selectPageDropdownAccessibilityLabel,\n    rest = _objectWithoutProperties(_ref7, _excluded);\n  var labelColor = color(theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : theme.colors.text).alpha(0.6).rgb().string();\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, style],\n    accessibilityLabel: \"pagination-container\"\n  }), numberOfItemsPerPageList && numberOfItemsPerPage && onItemsPerPageChange && React.createElement(View, {\n    accessibilityLabel: \"Options Select\",\n    style: styles.optionsContainer\n  }, React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: selectPageDropdownAccessibilityLabel || 'selectPageDropdownLabel'\n  }, selectPageDropdownLabel), React.createElement(PaginationDropdown, {\n    numberOfItemsPerPageList: numberOfItemsPerPageList,\n    numberOfItemsPerPage: numberOfItemsPerPage,\n    onItemsPerPageChange: onItemsPerPageChange\n  })), React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: accessibilityLabel || 'label'\n  }, label), React.createElement(View, {\n    style: styles.iconsContainer\n  }, React.createElement(PaginationControls, {\n    showFastPaginationControls: showFastPaginationControls,\n    onPageChange: onPageChange,\n    page: page,\n    numberOfPages: numberOfPages\n  })));\n};\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap'\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16\n  },\n  iconsContainer: {\n    flexDirection: 'row'\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse'\n  }\n});\nexport default withInternalTheme(DataTablePagination);\nexport { DataTablePagination };","map":{"version":3,"sources":["DataTablePagination.tsx"],"names":["React","color","useInternalTheme","withInternalTheme","Button","IconButton","MaterialCommunityIcon","Menu","Text","PaginationControls","page","numberOfPages","onPageChange","showFastPaginationControls","theme","textColor","isV3","colors","onSurface","text","size","I18nManager","getConstants","isRTL","PaginationDropdown","numberOfItemsPerPageList","numberOfItemsPerPage","onItemsPerPageChange","showSelect","toggleSelect","useState","styles","button","contentStyle","map","option","primary","DataTablePagination","label","accessibilityLabel","style","selectPageDropdownLabel","selectPageDropdownAccessibilityLabel","rest","labelColor","alpha","rgb","string","container","optionsContainer","iconsContainer","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","fontSize","marginRight","textAlign"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA;AAS9B,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,gBAAgB,EAAEC,iBAAiB;AAC5C,OAAOC,MAAM;AACb,OAAOC,UAAU;AACjB,OAAOC,qBAAqB;AAC5B,OAAOC,IAAI;AACX,OAAOC,IAAI;AA8DX,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAG,IAAA,EAKI;EALH,IAC1BC,IAAI,GAIoB,IAAA,CAJxBA,IAAI;IACJC,aAAa,GAGW,IAAA,CAHxBA,aAAa;IACbC,YAAY,GAEY,IAAA,CAFxBA,YAAY;IACZC,0BAAAA,GACwB,IAAA,CADxBA,0BAAAA;EAEA,IAAMC,KAAK,GAAGZ,gBAAgB,EAAE;EAEhC,IAAMa,SAAS,GAAGD,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACG,MAAM,CAACC,SAAS,GAAGJ,KAAK,CAACG,MAAM,CAACE,IAAI;EAEzE,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACGN,0BAA0B,GACzB,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;IACT,IAAI,EAAE,cAAA,KAAA,EAAA;MAAA,IAAGO,IAAI,GAAS,KAAA,CAAbA,IAAI;QAAEnB,KAAAA,GAAO,KAAA,CAAPA,KAAAA;MAAO,OACpB,KAAA,CAAA,aAAA,CAAC,qBAAqB,EAAA;QACpB,IAAI,EAAC,YAAY;QACjB,KAAK,EAAEA,KAAM;QACb,IAAI,EAAEmB,IAAK;QACX,SAAS,EAAEC,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,GAAG,KAAK,GAAG;MAAM,CAAA,CAC5D;IAAA,CACF;IACF,SAAS,EAAER,SAAU;IACrB,QAAQ,EAAEL,IAAI,KAAK,CAAE;IACrB,OAAO,EAAE;MAAA,OAAME,YAAY,CAAC,CAAC,CAAE;IAAA;IAC/B,kBAAkB,EAAC;EAAY,CAAA,CAC/B,GACA,IAAI,EACR,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;IACT,IAAI,EAAE,cAAA,KAAA,EAAA;MAAA,IAAGQ,IAAI,GAAS,KAAA,CAAbA,IAAI;QAAEnB,KAAAA,GAAO,KAAA,CAAPA,KAAAA;MAAO,OACpB,KAAA,CAAA,aAAA,CAAC,qBAAqB,EAAA;QACpB,IAAI,EAAC,cAAc;QACnB,KAAK,EAAEA,KAAM;QACb,IAAI,EAAEmB,IAAK;QACX,SAAS,EAAEC,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,GAAG,KAAK,GAAG;MAAM,CAAA,CAC5D;IAAA,CACF;IACF,SAAS,EAAER,SAAU;IACrB,QAAQ,EAAEL,IAAI,KAAK,CAAE;IACrB,OAAO,EAAE;MAAA,OAAME,YAAY,CAACF,IAAI,GAAG,CAAC,CAAE;IAAA;IACtC,kBAAkB,EAAC;EAAc,CAAA,CACjC,EACF,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;IACT,IAAI,EAAE,cAAA,KAAA,EAAA;MAAA,IAAGU,IAAI,GAAS,KAAA,CAAbA,IAAI;QAAEnB,KAAAA,GAAO,KAAA,CAAPA,KAAAA;MAAO,OACpB,KAAA,CAAA,aAAA,CAAC,qBAAqB,EAAA;QACpB,IAAI,EAAC,eAAe;QACpB,KAAK,EAAEA,KAAM;QACb,IAAI,EAAEmB,IAAK;QACX,SAAS,EAAEC,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,GAAG,KAAK,GAAG;MAAM,CAAA,CAC5D;IAAA,CACF;IACF,SAAS,EAAER,SAAU;IACrB,QAAQ,EAAEJ,aAAa,KAAK,CAAC,IAAID,IAAI,KAAKC,aAAa,GAAG,CAAE;IAC5D,OAAO,EAAE;MAAA,OAAMC,YAAY,CAACF,IAAI,GAAG,CAAC,CAAE;IAAA;IACtC,kBAAkB,EAAC;EAAe,CAAA,CAClC,EACDG,0BAA0B,GACzB,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;IACT,IAAI,EAAE,cAAA,KAAA,EAAA;MAAA,IAAGO,IAAI,GAAS,KAAA,CAAbA,IAAI;QAAEnB,KAAAA,GAAO,KAAA,CAAPA,KAAAA;MAAO,OACpB,KAAA,CAAA,aAAA,CAAC,qBAAqB,EAAA;QACpB,IAAI,EAAC,WAAW;QAChB,KAAK,EAAEA,KAAM;QACb,IAAI,EAAEmB,IAAK;QACX,SAAS,EAAEC,WAAW,CAACC,YAAY,EAAE,CAACC,KAAK,GAAG,KAAK,GAAG;MAAM,CAAA,CAC5D;IAAA,CACF;IACF,SAAS,EAAER,SAAU;IACrB,QAAQ,EAAEJ,aAAa,KAAK,CAAC,IAAID,IAAI,KAAKC,aAAa,GAAG,CAAE;IAC5D,OAAO,EAAE;MAAA,OAAMC,YAAY,CAACD,aAAa,GAAG,CAAC,CAAE;IAAA;IAC/C,kBAAkB,EAAC;EAAW,CAAA,CAC9B,GACA,IAAI,CACP;AAEP,CAAC;AAED,IAAMa,kBAAkB,GAAG,SAArBA,kBAAkB,CAAG,KAAA,EAII;EAJH,IAC1BC,wBAAwB,GAGA,KAAA,CAHxBA,wBAAwB;IACxBC,oBAAoB,GAEI,KAAA,CAFxBA,oBAAoB;IACpBC,oBAAAA,GACwB,KAAA,CADxBA,oBAAAA;EAEA,wBAAmBzB,gBAAgB,EAAE;IAA7Be,MAAAA,qBAAAA,MAAAA;EACR,sBAAmCjB,KAAK,CAAC8B,QAAQ,CAAU,KAAK,CAAC;IAAA;IAA1DF,UAAU;IAAEC,YAAY;EAE/B,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IACH,OAAO,EAAED,UAAW;IACpB,SAAS,EAAE;MAAA,OAAMC,YAAY,CAAC,CAACD,UAAU,CAAE;IAAA;IAC3C,MAAM,EACJ,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA;MACL,IAAI,EAAC,UAAU;MACf,OAAO,EAAE;QAAA,OAAMC,YAAY,CAAC,IAAI,CAAE;MAAA;MAClC,KAAK,EAAEE,MAAM,CAACC,MAAO;MACrB,IAAI,EAAC,WAAW;MAChB,YAAY,EAAED,MAAM,CAACE;IAAa,CAAA,OAE9BP,oBAAqB;EAE5B,CAAA,EAEAD,wBAAwB,KAAA,IAAA,IAAxBA,wBAAwB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAxBA,wBAAwB,CAAES,GAAG,CAAEC,UAAAA,MAAM;IAAA,OACpC,KAAA,CAAA,aAAA,CAAC,IAAI,CAAC,IAAI,EAAA;MACR,GAAG,EAAEA,MAAO;MACZ,UAAU,EACRA,MAAM,KAAKT,oBAAoB,IAAI;QACjCzB,KAAK,EAAEgB,MAAM,KAAA,IAAA,IAANA,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,MAAM,CAAEmB;MACjB,CACD;MACD,OAAO,EAAE,mBAAM;QACbT,oBAAoB,KAAA,IAAA,IAApBA,oBAAoB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,oBAAoB,CAAGQ,MAAM,CAAC;QAC9BN,YAAY,CAAC,KAAK,CAAC;MACrB,CAAE;MACF,KAAK,EAAEM;IAAO,CAAA,CAEjB;EAAA,EAAC,CACG;AAEX,CAAC;AAgED,IAAME,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAG,KAAA,EAef;EAfgB,IAC3BC,KAAK,GAcC,KAAA,CAdNA,KAAK;IACLC,kBAAkB,GAaZ,KAAA,CAbNA,kBAAkB;IAClB7B,IAAI,GAYE,KAAA,CAZNA,IAAI;IACJC,aAAa,GAWP,KAAA,CAXNA,aAAa;IACbC,YAAY,GAUN,KAAA,CAVNA,YAAY;IACZ4B,KAAK,GASC,KAAA,CATNA,KAAK;IACL1B,KAAK,GAQC,KAAA,CARNA,KAAK;IAAA,wBAQC,KAAA,CAPND,0BAA0B;IAA1BA,0BAA0B,sCAAG,KAAK;IAClCY,wBAAwB,GAMlB,KAAA,CANNA,wBAAwB;IACxBC,oBAAoB,GAKd,KAAA,CALNA,oBAAoB;IACpBC,oBAAoB,GAId,KAAA,CAJNA,oBAAoB;IACpBc,uBAAuB,GAGjB,KAAA,CAHNA,uBAAuB;IACvBC,oCAAoC,GAE9B,KAAA,CAFNA,oCAAoC;IACjCC,IAAAA,4BACG,KAAA;EACN,IAAMC,UAAU,GAAG3C,KAAK,CACtBa,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACG,MAAM,CAACC,SAAS,GAAGJ,KAAK,KAAA,IAAA,IAALA,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAALA,KAAK,CAAEG,MAAM,CAACE,IAAI,CACzD,CACE0B,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,EAAE,CACLC,MAAM,EAAE;EAEX,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,QAAA,CAAA,CAAA,CAAA,EACCJ,IAAI,EAAA;IACR,KAAK,EAAE,CAACZ,MAAM,CAACiB,SAAS,EAAER,KAAK,CAAE;IACjC,kBAAkB,EAAC;EAAsB,CAAA,CAAA,EAExCf,wBAAwB,IACvBC,oBAAoB,IACpBC,oBAAoB,IAClB,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IACH,kBAAkB,EAAC,gBAAgB;IACnC,KAAK,EAAEI,MAAM,CAACkB;EAAiB,CAAA,EAE/B,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IACH,KAAK,EAAE,CAAClB,MAAM,CAACO,KAAK,EAAE;MAAErC,KAAK,EAAE2C;IAAW,CAAC,CAAE;IAC7C,aAAa,EAAE,CAAE;IACjB,kBAAkB,EAChBF,oCAAoC,IACpC;EACD,CAAA,EAEAD,uBAAuB,CACnB,EACP,KAAA,CAAA,aAAA,CAAC,kBAAkB,EAAA;IACjB,wBAAwB,EAAEhB,wBAAyB;IACnD,oBAAoB,EAAEC,oBAAqB;IAC3C,oBAAoB,EAAEC;EAAqB,CAAA,CAC3C,CAEL,EACH,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IACH,KAAK,EAAE,CAACI,MAAM,CAACO,KAAK,EAAE;MAAErC,KAAK,EAAE2C;IAAW,CAAC,CAAE;IAC7C,aAAa,EAAE,CAAE;IACjB,kBAAkB,EAAEL,kBAAkB,IAAI;EAAQ,CAAA,EAEjDD,KAAK,CACD,EACP,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAEP,MAAM,CAACmB;EAAe,CAAA,EACjC,KAAA,CAAA,aAAA,CAAC,kBAAkB,EAAA;IACjB,0BAA0B,EAAErC,0BAA2B;IACvD,YAAY,EAAED,YAAa;IAC3B,IAAI,EAAEF,IAAK;IACX,aAAa,EAAEC;EAAc,CAAA,CAC7B,CACG,CACF;AAEX,CAAC;AAED0B,mBAAmB,CAACc,WAAW,GAAG,sBAAsB;AAExD,IAAMpB,MAAM,GAAGqB,UAAU,CAACC,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,cAAc,EAAE,UAAU;IAC1BC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE;EACZ,CAAC;EACDT,gBAAgB,EAAE;IAChBM,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBG,cAAc,EAAE;EAClB,CAAC;EACDrB,KAAK,EAAE;IACLsB,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE;EACf,CAAC;EACD7B,MAAM,EAAE;IACN8B,SAAS,EAAE,QAAQ;IACnBD,WAAW,EAAE;EACf,CAAC;EACDX,cAAc,EAAE;IACdK,aAAa,EAAE;EACjB,CAAC;EACDtB,YAAY,EAAE;IACZsB,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AAEF,eAAepD,iBAAiB,CAACkC,mBAAmB,CAAC;AAGrD,SAASA,mBAAmB","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { InternalTheme } from 'src/types';\n\nimport { useInternalTheme, withInternalTheme } from '../../core/theming';\nimport Button from '../Button/Button';\nimport IconButton from '../IconButton/IconButton';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme: InternalTheme;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n}: PaginationControlsProps) => {\n  const theme = useInternalTheme();\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n}: PaginationDropdownProps) => {\n  const { colors } = useInternalTheme();\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors?.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          title={option}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  ...rest\n}: Props) => {\n  const labelColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme?.colors.text\n  )\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default withInternalTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}
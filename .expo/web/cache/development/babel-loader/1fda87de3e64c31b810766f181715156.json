{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../Firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar VerifyAccountScreen = function VerifyAccountScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      Alert.alert(\"You have been verified !\", \"You can now safely delete your account\");\n      navigation.goBack();\n    }).catch(function (error) {\n      return Alert.alert(\"Invalid login details\");\n    });\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.logoContainer,\n        children: _jsx(Image, {\n          source: require(\"./../assets/logoSquare.png\"),\n          style: {\n            height: 65,\n            width: 65,\n            margin: 30\n          }\n        })\n      }), _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Email\",\n          autoCapitalize: \"none\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          style: styles.textInput\n        }), _jsx(TextInput, {\n          placeholder: \"Password\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          style: styles.textInput,\n          secureTextEntry: true\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.push(\"Reset password\");\n        },\n        style: {\n          alignItems: \"flex-end\"\n        },\n        children: _jsxs(Text, {\n          style: {\n            color: \"#1267E9\",\n            fontSize: 16\n          },\n          children: [\" \", \"Forgot password ?\", \" \"]\n        })\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          onPress: handleLogin,\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Verify\"\n          })\n        })\n      })]\n    })\n  });\n};\nexport default VerifyAccountScreen;\nvar styles = StyleSheet.create({\n  logoContainer: {\n    alignItems: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"lightgrey\",\n    marginVertical: 5,\n    width: 300\n  },\n  buttonContainer: {\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"100%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonLogo: {},\n  buttonFacebook: {\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderColor: \"#1267E9\",\n    borderWidth: 2,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  buttonGoogle: {\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderColor: \"red\",\n    borderWidth: 2,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  buttonFacebookText: {\n    color: \"#1267E9\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  buttonGoogleText: {\n    color: \"red\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","auth","signInWithEmailAndPassword","SafeAreaView","VerifyAccountScreen","navigation","email","setEmail","password","setPassword","handleLogin","then","userCredentials","user","Alert","alert","goBack","catch","error","styles","container","logoContainer","require","height","width","margin","text","textInput","push","alignItems","color","fontSize","buttonContainer","button","buttonText","StyleSheet","create","flex","justifyContent","backgroundColor","padding","borderRadius","borderWidth","borderColor","marginVertical","marginTop","fontWeight","buttonLogo","buttonFacebook","flexDirection","buttonGoogle","buttonFacebookText","buttonGoogleText"],"sources":["/Users/startek/LocalRepo/journeytoaustralia/screens/VerifyAccountScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { auth } from \"../Firebase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { Alert } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\n\nconst VerifyAccountScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //const navigation = useNavigation();\n\n  // useEffect(() => {\n  //   const unsubscribe = auth.onAuthStateChanged((user) => {\n  //     if (user) {\n  //       navigation.push(\"Home\");\n  //     }\n  //   });\n\n  //   return unsubscribe;\n  // }, []);\n\n  const handleLogin = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        Alert.alert(\"You have been verified !\", \"You can now safely delete your account\");\n        navigation.goBack()\n      })\n      .catch(\n        (error) =>\n          Alert.alert(\n            \"Invalid login details\"\n          )\n        //\n      );\n  };\n\n  // const provider = () => {\n  //   GoogleAuthProvider();\n  // };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        <View style={styles.logoContainer}>\n          <Image\n            source={require(\"./../assets/logoSquare.png\")}\n            style={{ height: 65, width: 65, margin: 30 }}\n          />\n        </View>\n        <View>\n          <TextInput\n            placeholder=\"Email\"\n            autoCapitalize=\"none\"\n            //autoFocus={true}\n            value={email}\n            onChangeText={(text) => setEmail(text)}\n            style={styles.textInput}\n          />\n          <TextInput\n            placeholder=\"Password\"\n            value={password}\n            onChangeText={(text) => setPassword(text)}\n            style={styles.textInput}\n            secureTextEntry\n          />\n        </View>\n\n        <TouchableOpacity\n          onPress={() => navigation.push(\"Reset password\")}\n          style={{ alignItems: \"flex-end\" }}\n        >\n          <Text style={{ color: \"#1267E9\", fontSize: 16 }}>\n            {\" \"}\n            Forgot password ?{\" \"}\n          </Text>\n        </TouchableOpacity>\n\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity onPress={handleLogin} style={styles.button}>\n            <Text style={styles.buttonText}>Verify</Text>\n          </TouchableOpacity>\n        </View>\n        {/* LOGIN WIHT FACEBOOK AND LOGIN WITH GOOGLE BUTTONS */}\n        {/* <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            //onPress={() => navigation.push(\"Register\")}\n            style={[styles.button, styles.buttonFacebook]}\n          >\n            <FontAwesome name=\"facebook\" size={24} color=\"#1267E9\" />\n            <Text style={styles.buttonFacebookText}>Login with Facebook</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            onPress={() =>{}}\n            style={[styles.button, styles.buttonGoogle]}\n          >\n            <AntDesign name=\"google\" size={24} color=\"red\" />\n            <Text style={styles.buttonGoogleText}>Login with Google</Text>\n          </TouchableOpacity>\n        </View> */}\n\n        \n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default VerifyAccountScreen;\n\nconst styles = StyleSheet.create({\n  logoContainer: {\n    alignItems: \"center\",\n  },\n\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 12,\n    borderRadius: 10,\n    borderWidth: 1.5,\n    borderColor: \"lightgrey\",\n    marginVertical: 5,\n    width: 300,\n  },\n  buttonContainer: {\n    width: 300,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  button: {\n    backgroundColor: \"#1267E9\",\n    width: \"100%\",\n    padding: 12,\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16,\n  },\n  buttonLogo: {},\n  buttonFacebook: {\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderColor: \"#1267E9\",\n    borderWidth: 2,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n  buttonGoogle: {\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderColor: \"red\",\n    borderWidth: 2,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n\n  buttonFacebookText: {\n    color: \"#1267E9\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n  buttonGoogleText: {\n    color: \"red\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
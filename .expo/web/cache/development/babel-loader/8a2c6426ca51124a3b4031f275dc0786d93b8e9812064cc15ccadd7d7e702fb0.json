{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport qs from 'query-string';\nimport { MailComposerStatus } from \"./MailComposer.types\";\nfunction removeNullishValues(obj) {\n  for (var propName in obj) {\n    if (obj[propName] == null) {\n      delete obj[propName];\n    }\n  }\n  return obj;\n}\nfunction checkValue(value) {\n  if (!value) {\n    return null;\n  }\n  var arr = Array.isArray(value) ? value : [value];\n  return arr.join(',');\n}\nexport default {\n  get name() {\n    return 'ExpoMailComposer';\n  },\n  composeAsync: function () {\n    var _composeAsync = _asyncToGenerator(function* (options) {\n      var email = removeNullishValues({\n        cc: checkValue(options.ccRecipients),\n        bcc: checkValue(options.bccRecipients),\n        subject: options.subject,\n        body: options.body\n      });\n      var query = qs.stringify(email);\n      var queryComponent = query ? '?' + query : '';\n      var to = checkValue(options.recipients) || '';\n      var mailto = \"mailto:\" + to + queryComponent;\n      window.open(mailto);\n      return {\n        status: MailComposerStatus.UNDETERMINED\n      };\n    });\n    function composeAsync(_x) {\n      return _composeAsync.apply(this, arguments);\n    }\n    return composeAsync;\n  }(),\n  isAvailableAsync: function () {\n    var _isAvailableAsync = _asyncToGenerator(function* () {\n      return true;\n    });\n    function isAvailableAsync() {\n      return _isAvailableAsync.apply(this, arguments);\n    }\n    return isAvailableAsync;\n  }()\n};","map":{"version":3,"mappings":";AAAA,OAAOA,EAAE,MAAM,cAAc;AAE7B,SAAkDC,kBAAkB;AAEpE,SAASC,mBAAmB,CAACC,GAAG;EAC9B,KAAK,IAAMC,QAAQ,IAAID,GAAG,EAAE;IAC1B,IAAIA,GAAG,CAACC,QAAQ,CAAC,IAAI,IAAI,EAAE;MACzB,OAAOD,GAAG,CAACC,QAAQ,CAAC;;;EAGxB,OAAOD,GAAG;AACZ;AAEA,SAASE,UAAU,CAACC,KAAyB;EAC3C,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,IAAI;;EAGb,IAAMC,GAAG,GAAGC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;EAClD,OAAOC,GAAG,CAACG,IAAI,CAAC,GAAG,CAAC;AACtB;AAEA,eAAe;EACb,IAAIC,IAAI;IACN,OAAO,kBAAkB;EAC3B,CAAC;EACKC,YAAY;IAAA,iDAACC,OAA4B;MAC7C,IAAMC,KAAK,GAAGZ,mBAAmB,CAAC;QAChCa,EAAE,EAAEV,UAAU,CAACQ,OAAO,CAACG,YAAY,CAAC;QACpCC,GAAG,EAAEZ,UAAU,CAACQ,OAAO,CAACK,aAAa,CAAC;QACtCC,OAAO,EAAEN,OAAO,CAACM,OAAO;QACxBC,IAAI,EAAEP,OAAO,CAACO;OACf,CAAC;MAEF,IAAMC,KAAK,GAAGrB,EAAE,CAACsB,SAAS,CAACR,KAAK,CAAC;MACjC,IAAMS,cAAc,GAAGF,KAAK,GAAG,GAAG,GAAGA,KAAK,GAAG,EAAE;MAC/C,IAAMG,EAAE,GAAGnB,UAAU,CAACQ,OAAO,CAACY,UAAU,CAAC,IAAI,EAAE;MAC/C,IAAMC,MAAM,eAAaF,EAAE,GAAGD,cAAgB;MAE9CI,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC;MAEnB,OAAO;QAAEG,MAAM,EAAE5B,kBAAkB,CAAC6B;MAAY,CAAE;IACpD,CAAC;IAAA;MAAA;IAAA;IAAA;EAAA;EACKC,gBAAgB;IAAA;MACpB,OAAO,IAAI;IACb,CAAC;IAAA;MAAA;IAAA;IAAA;EAAA;CACF","names":["qs","MailComposerStatus","removeNullishValues","obj","propName","checkValue","value","arr","Array","isArray","join","name","composeAsync","options","email","cc","ccRecipients","bcc","bccRecipients","subject","body","query","stringify","queryComponent","to","recipients","mailto","window","open","status","UNDETERMINED","isAvailableAsync"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/node_modules/expo-mail-composer/src/ExpoMailComposer.web.ts"],"sourcesContent":["import qs from 'query-string';\n\nimport { MailComposerOptions, MailComposerResult, MailComposerStatus } from './MailComposer.types';\n\nfunction removeNullishValues(obj) {\n  for (const propName in obj) {\n    if (obj[propName] == null) {\n      delete obj[propName];\n    }\n  }\n  return obj;\n}\n\nfunction checkValue(value?: string[] | string): string | null {\n  if (!value) {\n    return null;\n  }\n\n  const arr = Array.isArray(value) ? value : [value];\n  return arr.join(',');\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoMailComposer';\n  },\n  async composeAsync(options: MailComposerOptions): Promise<MailComposerResult> {\n    const email = removeNullishValues({\n      cc: checkValue(options.ccRecipients),\n      bcc: checkValue(options.bccRecipients),\n      subject: options.subject,\n      body: options.body,\n    });\n\n    const query = qs.stringify(email);\n    const queryComponent = query ? '?' + query : '';\n    const to = checkValue(options.recipients) || '';\n    const mailto = `mailto:${to}${queryComponent}`;\n\n    window.open(mailto);\n\n    return { status: MailComposerStatus.UNDETERMINED };\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    return true;\n  },\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
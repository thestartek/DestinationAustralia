{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState, useEffect } from \"react\";\nimport Collapsible from \"react-native-collapsible\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Divider } from \"react-native-paper\";\nimport { BannerAd, BannerAdSize, TestIds } from \"react-native-google-mobile-ads\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar adUnitId = __DEV__ ? TestIds.BANNER : \"ca-app-pub-8686062104433125/8511852168\";\nvar IELTS = function IELTS() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    collapseI11 = _useState2[0],\n    setCollapseI11 = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    collapseI12 = _useState4[0],\n    setcollapseI12 = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    collapseI13 = _useState6[0],\n    setcollapseI13 = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    collapseI14 = _useState8[0],\n    setcollapseI14 = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    collapseI15 = _useState10[0],\n    setcollapseI15 = _useState10[1];\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    collapseI16 = _useState12[0],\n    setcollapseI16 = _useState12[1];\n  var _useState13 = useState(true),\n    _useState14 = _slicedToArray(_useState13, 2),\n    collapseI21 = _useState14[0],\n    setCollapseI21 = _useState14[1];\n  var _useState15 = useState(true),\n    _useState16 = _slicedToArray(_useState15, 2),\n    collapseI22 = _useState16[0],\n    setCollapseI22 = _useState16[1];\n  var _useState17 = useState(true),\n    _useState18 = _slicedToArray(_useState17, 2),\n    collapseI23 = _useState18[0],\n    setCollapseI23 = _useState18[1];\n  var _useState19 = useState(true),\n    _useState20 = _slicedToArray(_useState19, 2),\n    collapseI24 = _useState20[0],\n    setCollapseI24 = _useState20[1];\n  var _useState21 = useState(true),\n    _useState22 = _slicedToArray(_useState21, 2),\n    collapseI25 = _useState22[0],\n    setCollapseI25 = _useState22[1];\n  var _useState23 = useState(true),\n    _useState24 = _slicedToArray(_useState23, 2),\n    collapseI26 = _useState24[0],\n    setcollapseI26 = _useState24[1];\n  var _useState25 = useState(true),\n    _useState26 = _slicedToArray(_useState25, 2),\n    collapseI27 = _useState26[0],\n    setcollapseI27 = _useState26[1];\n  var _useState27 = useState(true),\n    _useState28 = _slicedToArray(_useState27, 2),\n    collapseI28 = _useState28[0],\n    setcollapseI28 = _useState28[1];\n  var _useState29 = useState(true),\n    _useState30 = _slicedToArray(_useState29, 2),\n    collapseI29 = _useState30[0],\n    setcollapseI29 = _useState30[1];\n  var _useState31 = useState(true),\n    _useState32 = _slicedToArray(_useState31, 2),\n    collapseI210 = _useState32[0],\n    setcollapseI210 = _useState32[1];\n  var _useState33 = useState(true),\n    _useState34 = _slicedToArray(_useState33, 2),\n    collapseI211 = _useState34[0],\n    setcollapseI211 = _useState34[1];\n  var _useState35 = useState(true),\n    _useState36 = _slicedToArray(_useState35, 2),\n    collapseI31 = _useState36[0],\n    setcollapseI31 = _useState36[1];\n  var _useState37 = useState(true),\n    _useState38 = _slicedToArray(_useState37, 2),\n    collapseI32 = _useState38[0],\n    setcollapseI32 = _useState38[1];\n  var _useState39 = useState(true),\n    _useState40 = _slicedToArray(_useState39, 2),\n    collapseI33 = _useState40[0],\n    setcollapseI33 = _useState40[1];\n  var _useState41 = useState(true),\n    _useState42 = _slicedToArray(_useState41, 2),\n    collapseI34 = _useState42[0],\n    setcollapseI34 = _useState42[1];\n  var _useState43 = useState(true),\n    _useState44 = _slicedToArray(_useState43, 2),\n    collapseI41 = _useState44[0],\n    setCollapseI41 = _useState44[1];\n  var _useState45 = useState(true),\n    _useState46 = _slicedToArray(_useState45, 2),\n    collapseI42 = _useState46[0],\n    setcollapseI42 = _useState46[1];\n  var _useState47 = useState(true),\n    _useState48 = _slicedToArray(_useState47, 2),\n    collapseI43 = _useState48[0],\n    setcollapseI43 = _useState48[1];\n  return _jsxs(ScrollView, {\n    children: [_jsx(View, {\n      style: {\n        alignItems: \"center\"\n      },\n      children: _jsx(BannerAd, {\n        unitId: adUnitId,\n        size: BannerAdSize.LARGE_BANNER\n      })\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.contentHeadingMain,\n        children: \"Listening (30 minutes)\"\n      }), _jsx(Divider, {\n        bold: true\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"You will listen to four recordings of native English speakers and then write your answers to a series of questions.\"\n      }), _jsxs(Text, {\n        style: styles.contentText,\n        children: [_jsx(Text, {\n          style: styles.boldText,\n          children: \"Recording 1: \"\n        }), \"a conversation between two people set in an everyday social context.\"]\n      }), _jsxs(Text, {\n        style: styles.contentText,\n        children: [_jsx(Text, {\n          style: styles.boldText,\n          children: \"Recording 2: \"\n        }), \"a monologue set in an everyday social context, e.g. a speech about local facilities.\"]\n      }), _jsxs(Text, {\n        style: styles.contentText,\n        children: [_jsx(Text, {\n          style: styles.boldText,\n          children: \"Recording 3: \"\n        }), \"a conversation between up to four people set in an educational or training context, e.g. a university tutor and a student discussing an assignment.\"]\n      }), _jsxs(Text, {\n        style: styles.contentText,\n        children: [_jsx(Text, {\n          style: styles.boldText,\n          children: \"Recording 4: \"\n        }), \"a monologue on an academic subject, e.g. a university lecture.\"]\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"Each recording is associated with 10 questions. The questions are designed so that the answers appear in the order they are heard in the audio.\"\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"Test takers write their answers on the question paper as they listen and at the end of the test are given 10 minutes to transfer their answers to an answer sheet.\"\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"Followin are various question types for listening section:\"\n      }), _jsxs(View, {\n        style: {\n          marginHorizontal: 10\n        },\n        children: [_jsxs(View, {\n          style: styles.contentHeading,\n          children: [_jsx(View, {}), collapseI11 && collapseI12 && collapseI13 && collapseI14 && collapseI15 && collapseI16 ? _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return [setCollapseI11(false), setcollapseI12(false), setcollapseI13(false), setcollapseI14(false), setcollapseI15(false), setcollapseI16(false)];\n            },\n            children: _jsx(Text, {\n              style: [styles.contentHeadingText, {\n                textDecorationLine: \"underline\"\n              }],\n              children: \"Expand All\"\n            })\n          }) : _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return [setCollapseI11(true), setcollapseI12(true), setcollapseI13(true), setcollapseI14(true), setcollapseI15(true), setcollapseI16(true)];\n            },\n            children: _jsx(Text, {\n              style: [styles.contentHeadingText, {\n                textDecorationLine: \"underline\"\n              }],\n              children: \"Collapse All\"\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setCollapseI11(!collapseI11);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"1. Multiple choice\"\n          }), collapseI11 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI11,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- There is a question followed by three possible answers, or the beginning of a sentence followed by three possible ways to complete the sentence. Test takers are required to choose the one correct answer - A, B or C.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Sometimes, test takers are given a longer list of possible answers and told that they have to choose more than one. In this case, they should read the question carefully to check how many answers are required.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI12(!collapseI12);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"2. Matching\"\n          }), collapseI12 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI12,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are required to match a numbered list of items from the listening text to a set of options on the question paper.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The set of options may be criteria of some kind.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI13(!collapseI13);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"3. Plan, map, diagram labelling\"\n          }), collapseI13 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI13,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are required to complete labels on a plan (eg of a building), map (eg of part of a town) or diagram (e.g. of a piece of equipment).\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The answers are usually selected from a list on the question paper.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI14(!collapseI14);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"4. Form, note, table, flow-chart, summary completion\"\n          }), collapseI14 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI14,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are required to fill in the gaps in an outline of part or of all of the listening text.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- It may be a form, a set of notes, a table, or a flow-chart.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers may have to select their answers from a list on the question paper or identify the missing words from the recording, keeping to the word limit stated in the instructions. Test takers do not have to change the words from the recording in any way.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers should read the instructions very carefully as the number of words or numbers they should use to fill the gaps will vary.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- A word limit is given, and test takers are penalised for writing more than the stated number of words, and test takers should check this word limit carefully for each task.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI15(!collapseI15);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"5. Sentence completion\"\n          }), collapseI15 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI15,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are required to read a set of sentences summarising key information from all the listening text or from one part of it. They then fill a gap in each sentence using information from the listening text.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- A word limit is given, and test takers are penalised for writing more than the stated number of words, and test takers should check this word limit carefully for each task.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI16(!collapseI16);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"6. Short-answer questions\"\n          }), collapseI16 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI16,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are required to read a question and then write a short answer using information from the listening text.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- A word limit is given, and test takers are penalised for writing more than the stated number of words, and test takers should check this word limit carefully for each task.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Sometimes test takers are given a question which asks them to list two or three points.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      style: {\n        alignItems: \"center\",\n        marginVertical: 10\n      },\n      children: _jsx(BannerAd, {\n        unitId: adUnitId,\n        size: BannerAdSize.LARGE_BANNER\n      })\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.contentHeadingMain,\n        children: \"Reading (60 minutes)\"\n      }), _jsx(Divider, {\n        bold: true\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"The Reading section consists of 40 questions, designed to test a wide range of reading skills. These include reading for gist, reading for main ideas, reading for detail, skimming, understanding logical argument and recognising writers' opinions, attitudes and purpose.\"\n      }), _jsxs(Text, {\n        style: styles.contentText,\n        children: [_jsx(Text, {\n          style: styles.boldText,\n          children: \"IELTS Academic test: \"\n        }), \"This includes three long texts which range from the descriptive and factual to the discursive and analytical. These are taken from books, journals, magazines and newspapers. They have been selected for a non-specialist audience but are appropriate for people entering university courses or seeking professional registration.\"]\n      }), _jsxs(Text, {\n        style: styles.contentText,\n        children: [_jsx(Text, {\n          style: styles.boldText,\n          children: \"IELTS General Training test: \"\n        }), \"This includes extracts from books, magazines, newspapers, notices, advertisements, company handbooks and guidelines. These are materials you are likely to encounter on a daily basis in an English-speaking environment.\"]\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"A variety of question types are used, chosen from the following:\"\n      }), _jsxs(View, {\n        style: styles.contentHeading,\n        children: [_jsx(View, {}), collapseI21 && collapseI22 && collapseI23 && collapseI24 && collapseI25 && collapseI26 && collapseI27 && collapseI28 && collapseI29 && collapseI210 && collapseI211 ? _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return [setCollapseI21(false), setCollapseI22(false), setCollapseI23(false), setCollapseI24(false), setCollapseI25(false), setcollapseI26(false), setcollapseI27(false), setcollapseI28(false), setcollapseI29(false), setcollapseI210(false), setcollapseI211(false)];\n          },\n          children: _jsx(Text, {\n            style: [styles.contentHeadingText, {\n              textDecorationLine: \"underline\"\n            }],\n            children: \"Expand All\"\n          })\n        }) : _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return [setCollapseI21(true), setCollapseI22(true), setCollapseI23(true), setCollapseI24(true), setCollapseI25(true), setcollapseI26(true), setcollapseI27(true), setcollapseI28(true), setcollapseI29(true), setcollapseI210(true), setcollapseI211(true)];\n          },\n          children: _jsx(Text, {\n            style: [styles.contentHeadingText, {\n              textDecorationLine: \"underline\"\n            }],\n            children: \"Collapse All\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          marginHorizontal: 10\n        },\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setCollapseI21(!collapseI21);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"1. Multiple choice\"\n          }), collapseI21 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI21,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are required to choose the best answer from four alternatives (A, B, C or D), or the best two answers from five alternatives (A, B, C, D or E), or the best three answers from seven alternatives (A, B, C, D, E, F or G).\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The questions may involve completing a sentence, where they are given the first part of a sentence and then choose the best way to complete it from the options, or could involve complete questions; with the test takers choosing the option which best answers them.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setCollapseI22(!collapseI22);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"2. Identifying information\"\n          }), collapseI22 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI22,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers will be given a number of statements and asked: 'Do the following statements agree with the information in the text?' They are then required to write 'true', 'false' or 'not given' in the boxes on their answer sheets.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- It is important to understand the difference between 'false' and 'not given'. 'False' means that the passage states the opposite of the statement in question; 'not given' means that the statement is neither confirmed nor contradicted by the information in the passage.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setCollapseI23(!collapseI23);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"3. Identifying writer's views/claims\"\n          }), collapseI23 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI23,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers will be given a number of statements and asked: 'Do the following statements agree with the views/claims of the writer?'' They are required to write 'yes', 'no' or 'not given in the boxes on their answer sheet.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- It is important to understand the difference between 'no' and 'not given'. 'No' means that the views or claims of the writer explicitly disagree with the statement; 'not given' means that the view or claim is neither confirmed nor contradicted.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setCollapseI24(!collapseI24);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"4. Matching information\"\n          }), collapseI24 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI24,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are required to locate specific information within the lettered paragraphs/sections of a text, and to write the letters of the correct paragraphs/sections in the boxes on their answer sheet.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- They may be asked to find: specific details, an example, a reason, a description, a comparison, a summary, an explanation.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- They will not necessarily need to find information in every paragraph/section of the text, but there may be more than one piece of information that test takers need to locate in a given paragraph/section. When this is the case, they will be told that they can use any letter more than once.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setCollapseI25(!collapseI25);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"5. Matching headings\"\n          }), collapseI25 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI25,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are given a list of headings, usually identified with lower-case Roman numerals (i, ii, iii, etc,). A heading will refer to the main idea of the paragraph or section of the text. Test takers must match the heading to the correct paragraphs or sections, which are marked alphabetically. Test takers write the appropriate Roman numerals in the boxes on their answer sheets.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- There will always be more headings than there are paragraphs or sections, so that some headings will not be used. It is also possible that some paragraphs or sections may not be included in the task. One or more paragraphs or sections may already be matched with a heading as an example for test takers.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI26(!collapseI26);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"6. Matching features\"\n          }), collapseI26 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI26,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are required to match a set of statements or pieces of information to a list of options. The options are a group of features from the text, and are identified by letters.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers may, for example, be required to match different research findings to a list of researchers, or characteristics to age groups, events to historical periods, etc. It is possible that some options will not be used, and that others may be used more than once. The instructions will inform test takers if options may be used more than once.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI27(!collapseI27);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"7. Matching sentence endings\"\n          }), collapseI27 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI27,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are given the first half of a sentence based on the text and asked to choose the best way to complete it from a list of possible options. They will have more options to choose from than there are questions.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The questions are in the same order as the information in the passage: that is, the answer to the first question in this group will be found before the answer to the second question, and so on.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI28(!collapseI28);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"8. Sentence completion\"\n          }), collapseI28 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI28,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers complete sentences in a given number of words taken from the text. They must write their answers on the answer sheet.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- If test takers write more than the number of words asked for, they will lose the mark. Numbers can be written using figures or words.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The questions are in the same order as the information in the passage: that is, the answer to the first question in this group will be found before the answer to the second question, and so on.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI29(!collapseI29);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"9. Summary, note, table, flow-chart completion\"\n          }), collapseI29 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI29,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are given a summary of a section of the text, and are required to complete it with information drawn from the text. The summary will usually be of only one part of the passage rather than the whole.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The given information may be in the form of: several connected sentences of text (referred to as a summary), several notes (referred to as notes), a table with some of its cells empty or partially empty (referred to as a table), a series of boxes or steps linked by arrows to show a sequence of events, with some of the boxes or steps empty or partially empty (referred to as a flow-chart).\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The answers will not necessarily occur in the same order as in the text. However, they will usually come from one section rather than the entire text.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- There are two variations of this task type. Test takers may be asked either to select words from the text or to select from a list of answers.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI210(!collapseI210);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"10. Diagram label completion\"\n          }), collapseI210 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI210,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are required to complete labels on a diagram, which relates to a description contained in the text.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- If test takers write more than the number of words asked for, they will lose the mark. Numbers can be written using figures or words.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The answers do not necessarily occur in order in the passage. However, they will usually come from one section rather than the entire text.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI211(!collapseI211);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"11. Short-answer questions\"\n          }), collapseI211 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI211,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers answer questions, which usually relate to factual information about details in the text. This is most likely to be used with a text that contains a lot of factual information and detail.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers must write their answers in words or numbers on the answer sheet. Test takers must write their answers using words from the text.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- If test takers write more than the number of words asked for, they will lose the mark.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Numbers can be written using figures or words. Contracted words are not tested. Hyphenated words count as single words. The questions are in the same order as the information in the text.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      style: {\n        alignItems: \"center\",\n        marginVertical: 10\n      },\n      children: _jsx(BannerAd, {\n        unitId: adUnitId,\n        size: BannerAdSize.LARGE_BANNER\n      })\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.contentHeadingMain,\n        children: \"Writing (60 minutes)\"\n      }), _jsx(Divider, {\n        bold: true\n      }), _jsxs(Text, {\n        style: styles.contentText,\n        children: [_jsx(Text, {\n          style: styles.boldText,\n          children: \"IELTS Academic test: \"\n        }), \"Topics are of general interest to, and suitable for, test takers entering undergraduate and postgraduate studies or seeking professional registration.\"]\n      }), _jsxs(Text, {\n        style: styles.contentText,\n        children: [_jsx(Text, {\n          style: styles.boldText,\n          children: \"IELTS General Training test: \"\n        }), \"Topics are of general interest.\"]\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"There are two tasks: \"\n      }), _jsxs(View, {\n        style: {\n          marginHorizontal: 10\n        },\n        children: [_jsxs(View, {\n          style: styles.contentHeading,\n          children: [_jsx(View, {}), collapseI31 && collapseI32 && collapseI33 && collapseI34 ? _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return [setcollapseI31(false), setcollapseI32(false), setcollapseI33(false), setcollapseI34(false)];\n            },\n            children: _jsx(Text, {\n              style: [styles.contentHeadingText, {\n                textDecorationLine: \"underline\"\n              }],\n              children: \"Expand All\"\n            })\n          }) : _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return [setcollapseI31(true), setcollapseI32(true), setcollapseI33(true), setcollapseI34(true)];\n            },\n            children: _jsx(Text, {\n              style: [styles.contentHeadingText, {\n                textDecorationLine: \"underline\"\n              }],\n              children: \"Collapse All\"\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI31(!collapseI31);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"1. Task 1 (Academic)\"\n          }), collapseI31 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI31,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers may be asked to describe facts or figures presented in one or more graphs, charts or tables on a related topic; or they may be given a diagram of a machine, a device or a process and asked to explain how it works.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- You should write in an academic or semi-formal/neutral styles and include the most important and the most relevant points in the diagram.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers should spend no more than 20 minutes on this task. They are asked to write at least 150 words and will be penalised if their answer is too short.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- While test takers will not be penalised for writing more than 150 words, they should remember that a longer Task 1 answer may mean that they have less time to spend on Task 2, which contributes twice as much to the Writing band score.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers should also note that they will be penalised for irrelevance if the response is off-topic or is not written as full, connected text (e.g. using bullet points in any part of the response, or note form, etc.). They will be severely penalised for plagiarism (i.e. copying from another source).\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI32(!collapseI32);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"2. Task 2 (General training)\"\n          }), collapseI32 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI32,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are presented with a situation and required to write a personal response in the form of an informal, semi-formal or formal letter of at least 150 words in the answer booklet provided.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The style of writing that test takers use depends who they are asked to write to (i.e. the audience) and how well they are supposed to know them. They need to write in a style that is appropriate for their audience and that will help them to achieve their purpose for writing, e.g. writing to a friend (informal) or writing to a manager (semi-formal or formal).\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers should spend no more than 20 minutes on this task. They are asked to write at least 150 words and will be penalised if their answer is too short. While test takers will not be penalised for writing more than 150 words, they should remember that a longer Task 1 answer may mean that they have less time to spend on Task 2, which contributes twice as much to the Writing band score.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers should also note that they will be penalised for irrelevance, if the response is off-topic or is not written as full, connected text (e.g. using bullet points in any part of the response, or note form, etc.). They will be severely penalised for plagiarism (i.e. copying from another source).\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI33(!collapseI33);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"3. Task 3 (Academic)\"\n          }), collapseI33 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI33,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are given a topic to write about an academic or semi-formal/neutral style. Answers should be a discursive consideration of the relevant issues.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers should spend no more than 40 minutes on this task. They are asked to write at least 250 words and will be penalised if their answer is too short. While test takers will not be penalised for writing more than 250 words, if they write a very long answer they may not have time for checking and correcting at the end and some ideas may not be directly relevant to the question.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers will be penalised for irrelevance if the response is off-topic or is not written as full, connected text (e.g. using bullet points in any part of the response, or note form, etc.). They will be severely penalised for plagiarism (i.e. copying from another source).\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI34(!collapseI34);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"4. Task 4 (General training)\"\n          }), collapseI34 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI34,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers write a semi-formal/neutral discursive essay of at least 250 words in the answer book provided.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Topics are of general interest, such as: whether children's leisure activities should be educational, why families are not so close as they used to be and how they could be brought closer, how environmental problems can be solved, who should pay for the care of old people, whether smoking should be banned in public places.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are asked to write at least 250 words and will be penalised if their answer is too short. They should spend no more than 40 minutes on this task.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers should also note that they will be penalised for irrelevance if the response is off-topic or is not written as full, connected text (e.g. using bullet points in any part of the response, or note form, etc.). They will be severely penalised for plagiarism (i.e. copying from another source).\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      style: {\n        alignItems: \"center\",\n        marginVertical: 10\n      },\n      children: _jsx(BannerAd, {\n        unitId: adUnitId,\n        size: BannerAdSize.LARGE_BANNER\n      })\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.contentHeadingMain,\n        children: \"Speaking (11-14 minutes)\"\n      }), _jsx(Divider, {\n        bold: true\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"The Speaking test consists of an oral interview between the test takers' and an examiner. All Speaking tests are recorded.\"\n      }), _jsx(Text, {\n        style: styles.contentText,\n        children: \"There are 3 parts to the test and each part fulfils a specific function in terms of interaction pattern, task input and test takers output.\"\n      }), _jsxs(View, {\n        style: {\n          marginHorizontal: 10\n        },\n        children: [_jsxs(View, {\n          style: styles.contentHeading,\n          children: [_jsx(View, {}), collapseI41 && collapseI42 && collapseI43 ? _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return [setCollapseI41(false), setcollapseI42(false), setcollapseI43(false)];\n            },\n            children: _jsx(Text, {\n              style: [styles.contentHeadingText, {\n                textDecorationLine: \"underline\"\n              }],\n              children: \"Expand All\"\n            })\n          }) : _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return [setCollapseI41(true), setcollapseI42(true), setcollapseI43(true)];\n            },\n            children: _jsx(Text, {\n              style: [styles.contentHeadingText, {\n                textDecorationLine: \"underline\"\n              }],\n              children: \"Collapse All\"\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setCollapseI41(!collapseI41);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"Part 1: Introduction and interview\"\n          }), collapseI41 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI41,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- In this part, the examiner introduces him/herself and checks the test takers' identity. They then ask the test takers general questions on some familiar topics such as home, family, work, studies and interests.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Part 1 lasts for 4-5 minutes.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI42(!collapseI42);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"Part 2: Long turn\"\n          }), collapseI42 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI42,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- The examiner gives the test takers a task card which asks the test takers to talk about a particular topic, includes points to cover in their talk and instructs the test takers to explain one aspect of the topic.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Test takers are given one minute to prepare their talk, and are given a pencil and paper to make notes.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- The examiner asks the test takers to talk for 1 to 2 minutes, stops the test takers after 2 minutes, and asks one or two questions on the same topic.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Part 2 lasts 3-4 minutes, including the preparation time.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        }), _jsxs(TouchableOpacity, {\n          style: styles.contentHeading,\n          onPress: function onPress() {\n            return setcollapseI43(!collapseI43);\n          },\n          children: [_jsx(Text, {\n            style: styles.contentHeadingText,\n            children: \"Part 3: Discussion\"\n          }), collapseI43 ? _jsx(AntDesign, {\n            name: \"down\",\n            size: 18,\n            color: \"#1267E9\"\n          }) : _jsx(AntDesign, {\n            name: \"up\",\n            size: 18,\n            color: \"#1267E9\"\n          })]\n        }), _jsx(Divider, {\n          bold: true\n        }), _jsxs(Collapsible, {\n          collapsed: collapseI43,\n          children: [_jsx(Text, {\n            style: styles.contentText,\n            children: \"- In Part 3, the examiner and the test takers discuss issues related to the topic in Part 2 in a more general and abstract way and, where appropriate, in greater depth.\"\n          }), _jsx(Text, {\n            style: styles.contentText,\n            children: \"- Part 3 lasts 4-5 minutes.\"\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              marginVertical: 10\n            },\n            children: _jsx(BannerAd, {\n              unitId: adUnitId,\n              size: BannerAdSize.BANNER\n            })\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      style: {\n        alignItems: \"center\",\n        marginVertical: 10\n      },\n      children: _jsx(BannerAd, {\n        unitId: adUnitId,\n        size: BannerAdSize.BANNER\n      })\n    })]\n  });\n};\nexport default IELTS;\nvar styles = StyleSheet.create({\n  content: {\n    padding: 10,\n    marginHorizontal: 10,\n    backgroundColor: \"white\",\n    borderRadius: 8\n  },\n  contentHeadingMain: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    marginBottom: 5\n  },\n  contentHeading: {\n    marginTop: 10,\n    marginBottom: 5,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  contentHeadingText: {\n    fontSize: 16,\n    color: \"#1267E9\"\n  },\n  contentText: {\n    margin: 5,\n    lineHeight: 20\n  },\n  moreButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: 42,\n    borderRadius: 10\n  },\n  videoContent: {\n    marginHorizontal: 15,\n    backgroundColor: \"white\",\n    marginVertical: 5,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Collapsible","AntDesign","Divider","BannerAd","BannerAdSize","TestIds","adUnitId","__DEV__","BANNER","IELTS","collapseI11","setCollapseI11","collapseI12","setcollapseI12","collapseI13","setcollapseI13","collapseI14","setcollapseI14","collapseI15","setcollapseI15","collapseI16","setcollapseI16","collapseI21","setCollapseI21","collapseI22","setCollapseI22","collapseI23","setCollapseI23","collapseI24","setCollapseI24","collapseI25","setCollapseI25","collapseI26","setcollapseI26","collapseI27","setcollapseI27","collapseI28","setcollapseI28","collapseI29","setcollapseI29","collapseI210","setcollapseI210","collapseI211","setcollapseI211","collapseI31","setcollapseI31","collapseI32","setcollapseI32","collapseI33","setcollapseI33","collapseI34","setcollapseI34","collapseI41","setCollapseI41","collapseI42","setcollapseI42","collapseI43","setcollapseI43","alignItems","LARGE_BANNER","styles","content","contentHeadingMain","contentText","boldText","marginHorizontal","contentHeading","contentHeadingText","textDecorationLine","marginVertical","StyleSheet","create","padding","backgroundColor","borderRadius","fontSize","fontWeight","marginTop","marginBottom","flexDirection","justifyContent","color","margin","lineHeight","moreButton","minHeight","videoContent"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/components/learn/IELTS.js"],"sourcesContent":["import {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport Collapsible from \"react-native-collapsible\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Divider } from \"react-native-paper\";\n// import YoutubePlayer from \"react-native-youtube-iframe\";\nimport {\n  BannerAd,\n  BannerAdSize,\n  TestIds,\n} from \"react-native-google-mobile-ads\";\n\nconst adUnitId = __DEV__\n  ? TestIds.BANNER\n  : \"ca-app-pub-8686062104433125/8511852168\";\n\nconst IELTS = () => {\n  const [collapseI11, setCollapseI11] = useState(true);\n  const [collapseI12, setcollapseI12] = useState(true);\n  const [collapseI13, setcollapseI13] = useState(true);\n  const [collapseI14, setcollapseI14] = useState(true);\n  const [collapseI15, setcollapseI15] = useState(true);\n  const [collapseI16, setcollapseI16] = useState(true);\n\n  const [collapseI21, setCollapseI21] = useState(true);\n  const [collapseI22, setCollapseI22] = useState(true);\n  const [collapseI23, setCollapseI23] = useState(true);\n  const [collapseI24, setCollapseI24] = useState(true);\n  const [collapseI25, setCollapseI25] = useState(true);\n  const [collapseI26, setcollapseI26] = useState(true);\n  const [collapseI27, setcollapseI27] = useState(true);\n  const [collapseI28, setcollapseI28] = useState(true);\n  const [collapseI29, setcollapseI29] = useState(true);\n  const [collapseI210, setcollapseI210] = useState(true);\n  const [collapseI211, setcollapseI211] = useState(true);\n\n  const [collapseI31, setcollapseI31] = useState(true);\n  const [collapseI32, setcollapseI32] = useState(true);\n  const [collapseI33, setcollapseI33] = useState(true);\n  const [collapseI34, setcollapseI34] = useState(true);\n\n  const [collapseI41, setCollapseI41] = useState(true);\n  const [collapseI42, setcollapseI42] = useState(true);\n  const [collapseI43, setcollapseI43] = useState(true);\n\n  return (\n    <ScrollView>\n      <View style={{ alignItems: \"center\" }}>\n        <BannerAd unitId={adUnitId} size={BannerAdSize.LARGE_BANNER} />\n      </View>\n      {/* /////////////// Listening ////////////////// */}\n      <View style={styles.content}>\n        <Text style={styles.contentHeadingMain}>Listening (30 minutes)</Text>\n        <Divider bold={true} />\n\n        <Text style={styles.contentText}>\n          You will listen to four recordings of native English speakers and then\n          write your answers to a series of questions.\n        </Text>\n        <Text style={styles.contentText}>\n          <Text style={styles.boldText}>Recording 1: </Text>a conversation\n          between two people set in an everyday social context.\n        </Text>\n        <Text style={styles.contentText}>\n          <Text style={styles.boldText}>Recording 2: </Text>a monologue set in\n          an everyday social context, e.g. a speech about local facilities.\n        </Text>\n        <Text style={styles.contentText}>\n          <Text style={styles.boldText}>Recording 3: </Text>a conversation\n          between up to four people set in an educational or training context,\n          e.g. a university tutor and a student discussing an assignment.\n        </Text>\n        <Text style={styles.contentText}>\n          <Text style={styles.boldText}>Recording 4: </Text>a monologue on an\n          academic subject, e.g. a university lecture.\n        </Text>\n        <Text style={styles.contentText}>\n          Each recording is associated with 10 questions. The questions are\n          designed so that the answers appear in the order they are heard in the\n          audio.\n        </Text>\n        <Text style={styles.contentText}>\n          Test takers write their answers on the question paper as they listen\n          and at the end of the test are given 10 minutes to transfer their\n          answers to an answer sheet.\n        </Text>\n        <Text style={styles.contentText}>\n          Followin are various question types for listening section:\n        </Text>\n\n        <View style={{ marginHorizontal: 10 }}>\n          <View style={styles.contentHeading}>\n            <View></View>\n            {collapseI11 &&\n            collapseI12 &&\n            collapseI13 &&\n            collapseI14 &&\n            collapseI15 &&\n            collapseI16 ? (\n              <TouchableOpacity\n                onPress={() => [\n                  setCollapseI11(false),\n                  setcollapseI12(false),\n                  setcollapseI13(false),\n                  setcollapseI14(false),\n                  setcollapseI15(false),\n                  setcollapseI16(false),\n                ]}\n              >\n                <Text\n                  style={[\n                    styles.contentHeadingText,\n                    { textDecorationLine: \"underline\" },\n                  ]}\n                >\n                  Expand All\n                </Text>\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                onPress={() => [\n                  setCollapseI11(true),\n                  setcollapseI12(true),\n                  setcollapseI13(true),\n                  setcollapseI14(true),\n                  setcollapseI15(true),\n                  setcollapseI16(true),\n                ]}\n              >\n                <Text\n                  style={[\n                    styles.contentHeadingText,\n                    { textDecorationLine: \"underline\" },\n                  ]}\n                >\n                  Collapse All\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n          {/* ///////////////// 1. Multiple choice /////////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setCollapseI11(!collapseI11)}\n          >\n            <Text style={styles.contentHeadingText}>1. Multiple choice</Text>\n            {collapseI11 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI11}>\n            <Text style={styles.contentText}>\n              - There is a question followed by three possible answers, or the\n              beginning of a sentence followed by three possible ways to\n              complete the sentence. Test takers are required to choose the one\n              correct answer - A, B or C.\n            </Text>\n            <Text style={styles.contentText}>\n              - Sometimes, test takers are given a longer list of possible\n              answers and told that they have to choose more than one. In this\n              case, they should read the question carefully to check how many\n              answers are required.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 2. Matching /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI12(!collapseI12)}\n          >\n            <Text style={styles.contentHeadingText}>2. Matching</Text>\n            {collapseI12 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI12}>\n            <Text style={styles.contentText}>\n              - Test takers are required to match a numbered list of items from\n              the listening text to a set of options on the question paper.\n            </Text>\n            <Text style={styles.contentText}>\n              - The set of options may be criteria of some kind.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 3. Plan, map, diagram labelling /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI13(!collapseI13)}\n          >\n            <Text style={styles.contentHeadingText}>\n              3. Plan, map, diagram labelling\n            </Text>\n            {collapseI13 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI13}>\n            <Text style={styles.contentText}>\n              - Test takers are required to complete labels on a plan (eg of a\n              building), map (eg of part of a town) or diagram (e.g. of a piece\n              of equipment).\n            </Text>\n            <Text style={styles.contentText}>\n              - The answers are usually selected from a list on the question\n              paper.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 4. Form, note, table, flow-chart, summary completion /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI14(!collapseI14)}\n          >\n            <Text style={styles.contentHeadingText}>\n              4. Form, note, table, flow-chart, summary completion\n            </Text>\n            {collapseI14 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI14}>\n            <Text style={styles.contentText}>\n              - Test takers are required to fill in the gaps in an outline of\n              part or of all of the listening text.\n            </Text>\n            <Text style={styles.contentText}>\n              - It may be a form, a set of notes, a table, or a flow-chart.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers may have to select their answers from a list on the\n              question paper or identify the missing words from the recording,\n              keeping to the word limit stated in the instructions. Test takers\n              do not have to change the words from the recording in any way.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers should read the instructions very carefully as the\n              number of words or numbers they should use to fill the gaps will\n              vary.\n            </Text>\n            <Text style={styles.contentText}>\n              - A word limit is given, and test takers are penalised for writing\n              more than the stated number of words, and test takers should check\n              this word limit carefully for each task.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 5. Sentence completion /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI15(!collapseI15)}\n          >\n            <Text style={styles.contentHeadingText}>\n              5. Sentence completion\n            </Text>\n            {collapseI15 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI15}>\n            <Text style={styles.contentText}>\n              - Test takers are required to read a set of sentences summarising\n              key information from all the listening text or from one part of\n              it. They then fill a gap in each sentence using information from\n              the listening text.\n            </Text>\n            <Text style={styles.contentText}>\n              - A word limit is given, and test takers are penalised for writing\n              more than the stated number of words, and test takers should check\n              this word limit carefully for each task.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 6. Short-answer questions /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI16(!collapseI16)}\n          >\n            <Text style={styles.contentHeadingText}>\n              6. Short-answer questions\n            </Text>\n            {collapseI16 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI16}>\n            <Text style={styles.contentText}>\n              - Test takers are required to read a question and then write a\n              short answer using information from the listening text.\n            </Text>\n            <Text style={styles.contentText}>\n              - A word limit is given, and test takers are penalised for writing\n              more than the stated number of words, and test takers should check\n              this word limit carefully for each task.\n            </Text>\n            <Text style={styles.contentText}>\n              - Sometimes test takers are given a question which asks them to\n              list two or three points.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n        </View>\n      </View>\n\n      {/* ////////////////// Reading /////////////////// */}\n\n      <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n        <BannerAd unitId={adUnitId} size={BannerAdSize.LARGE_BANNER} />\n      </View>\n      <View style={styles.content}>\n        <Text style={styles.contentHeadingMain}>Reading (60 minutes)</Text>\n\n        <Divider bold={true} />\n\n        <Text style={styles.contentText}>\n          The Reading section consists of 40 questions, designed to test a wide\n          range of reading skills. These include reading for gist, reading for\n          main ideas, reading for detail, skimming, understanding logical\n          argument and recognising writers' opinions, attitudes and purpose.\n        </Text>\n        <Text style={styles.contentText}>\n          <Text style={styles.boldText}>IELTS Academic test: </Text>\n          This includes three long texts which range from the descriptive and\n          factual to the discursive and analytical. These are taken from books,\n          journals, magazines and newspapers. They have been selected for a\n          non-specialist audience but are appropriate for people entering\n          university courses or seeking professional registration.\n        </Text>\n        <Text style={styles.contentText}>\n          <Text style={styles.boldText}>IELTS General Training test: </Text>\n          This includes extracts from books, magazines, newspapers, notices,\n          advertisements, company handbooks and guidelines. These are materials\n          you are likely to encounter on a daily basis in an English-speaking\n          environment.\n        </Text>\n        <Text style={styles.contentText}>\n          A variety of question types are used, chosen from the following:\n        </Text>\n\n        <View style={styles.contentHeading}>\n          <View></View>\n          {collapseI21 &&\n          collapseI22 &&\n          collapseI23 &&\n          collapseI24 &&\n          collapseI25 &&\n          collapseI26 &&\n          collapseI27 &&\n          collapseI28 &&\n          collapseI29 &&\n          collapseI210 &&\n          collapseI211 ? (\n            <TouchableOpacity\n              onPress={() => [\n                setCollapseI21(false),\n                setCollapseI22(false),\n                setCollapseI23(false),\n                setCollapseI24(false),\n                setCollapseI25(false),\n                setcollapseI26(false),\n                setcollapseI27(false),\n                setcollapseI28(false),\n                setcollapseI29(false),\n                setcollapseI210(false),\n                setcollapseI211(false),\n              ]}\n            >\n              <Text\n                style={[\n                  styles.contentHeadingText,\n                  { textDecorationLine: \"underline\" },\n                ]}\n              >\n                Expand All\n              </Text>\n            </TouchableOpacity>\n          ) : (\n            <TouchableOpacity\n              onPress={() => [\n                setCollapseI21(true),\n                setCollapseI22(true),\n                setCollapseI23(true),\n                setCollapseI24(true),\n                setCollapseI25(true),\n                setcollapseI26(true),\n                setcollapseI27(true),\n                setcollapseI28(true),\n                setcollapseI29(true),\n                setcollapseI210(true),\n                setcollapseI211(true),\n              ]}\n            >\n              <Text\n                style={[\n                  styles.contentHeadingText,\n                  { textDecorationLine: \"underline\" },\n                ]}\n              >\n                Collapse All\n              </Text>\n            </TouchableOpacity>\n          )}\n        </View>\n\n        <View style={{ marginHorizontal: 10 }}>\n          {/* ///////////////// 1. Multiple choice /////////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setCollapseI21(!collapseI21)}\n          >\n            <Text style={styles.contentHeadingText}>1. Multiple choice</Text>\n            {collapseI21 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI21}>\n            <Text style={styles.contentText}>\n              - Test takers are required to choose the best answer from four\n              alternatives (A, B, C or D), or the best two answers from five\n              alternatives (A, B, C, D or E), or the best three answers from\n              seven alternatives (A, B, C, D, E, F or G).\n            </Text>\n            <Text style={styles.contentText}>\n              - The questions may involve completing a sentence, where they are\n              given the first part of a sentence and then choose the best way to\n              complete it from the options, or could involve complete questions;\n              with the test takers choosing the option which best answers them.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 2. Identifying information /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setCollapseI22(!collapseI22)}\n          >\n            <Text style={styles.contentHeadingText}>\n              2. Identifying information\n            </Text>\n            {collapseI22 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI22}>\n            <Text style={styles.contentText}>\n              - Test takers will be given a number of statements and asked: 'Do\n              the following statements agree with the information in the text?'\n              They are then required to write 'true', 'false' or 'not given' in\n              the boxes on their answer sheets.\n            </Text>\n            <Text style={styles.contentText}>\n              - It is important to understand the difference between 'false' and\n              'not given'. 'False' means that the passage states the opposite of\n              the statement in question; 'not given' means that the statement is\n              neither confirmed nor contradicted by the information in the\n              passage.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 3. Identifying writer’s views/claims /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setCollapseI23(!collapseI23)}\n          >\n            <Text style={styles.contentHeadingText}>\n              3. Identifying writer's views/claims\n            </Text>\n            {collapseI23 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI23}>\n            <Text style={styles.contentText}>\n              - Test takers will be given a number of statements and asked: 'Do\n              the following statements agree with the views/claims of the\n              writer?'' They are required to write 'yes', 'no' or 'not given in\n              the boxes on their answer sheet.\n            </Text>\n            <Text style={styles.contentText}>\n              - It is important to understand the difference between 'no' and\n              'not given'. 'No' means that the views or claims of the writer\n              explicitly disagree with the statement; 'not given' means that the\n              view or claim is neither confirmed nor contradicted.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 4. Matching information /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setCollapseI24(!collapseI24)}\n          >\n            <Text style={styles.contentHeadingText}>\n              4. Matching information\n            </Text>\n            {collapseI24 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI24}>\n            <Text style={styles.contentText}>\n              - Test takers are required to locate specific information within\n              the lettered paragraphs/sections of a text, and to write the\n              letters of the correct paragraphs/sections in the boxes on their\n              answer sheet.\n            </Text>\n            <Text style={styles.contentText}>\n              - They may be asked to find: specific details, an example, a\n              reason, a description, a comparison, a summary, an explanation.\n            </Text>\n            <Text style={styles.contentText}>\n              - They will not necessarily need to find information in every\n              paragraph/section of the text, but there may be more than one\n              piece of information that test takers need to locate in a given\n              paragraph/section. When this is the case, they will be told that\n              they can use any letter more than once.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 5. Matching headings /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setCollapseI25(!collapseI25)}\n          >\n            <Text style={styles.contentHeadingText}>5. Matching headings</Text>\n            {collapseI25 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI25}>\n            <Text style={styles.contentText}>\n              - Test takers are given a list of headings, usually identified\n              with lower-case Roman numerals (i, ii, iii, etc,). A heading will\n              refer to the main idea of the paragraph or section of the text.\n              Test takers must match the heading to the correct paragraphs or\n              sections, which are marked alphabetically. Test takers write the\n              appropriate Roman numerals in the boxes on their answer sheets.\n            </Text>\n            <Text style={styles.contentText}>\n              - There will always be more headings than there are paragraphs or\n              sections, so that some headings will not be used. It is also\n              possible that some paragraphs or sections may not be included in\n              the task. One or more paragraphs or sections may already be\n              matched with a heading as an example for test takers.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 6. Matching features /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI26(!collapseI26)}\n          >\n            <Text style={styles.contentHeadingText}>6. Matching features</Text>\n            {collapseI26 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI26}>\n            <Text style={styles.contentText}>\n              - Test takers are required to match a set of statements or pieces\n              of information to a list of options. The options are a group of\n              features from the text, and are identified by letters.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers may, for example, be required to match different\n              research findings to a list of researchers, or characteristics to\n              age groups, events to historical periods, etc. It is possible that\n              some options will not be used, and that others may be used more\n              than once. The instructions will inform test takers if options may\n              be used more than once.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 7. Matching sentence endings /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI27(!collapseI27)}\n          >\n            <Text style={styles.contentHeadingText}>\n              7. Matching sentence endings\n            </Text>\n            {collapseI27 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI27}>\n            <Text style={styles.contentText}>\n              - Test takers are given the first half of a sentence based on the\n              text and asked to choose the best way to complete it from a list\n              of possible options. They will have more options to choose from\n              than there are questions.\n            </Text>\n            <Text style={styles.contentText}>\n              - The questions are in the same order as the information in the\n              passage: that is, the answer to the first question in this group\n              will be found before the answer to the second question, and so on.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 8. Sentence completion /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI28(!collapseI28)}\n          >\n            <Text style={styles.contentHeadingText}>\n              8. Sentence completion\n            </Text>\n            {collapseI28 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI28}>\n            <Text style={styles.contentText}>\n              - Test takers complete sentences in a given number of words taken\n              from the text. They must write their answers on the answer sheet.\n            </Text>\n            <Text style={styles.contentText}>\n              - If test takers write more than the number of words asked for,\n              they will lose the mark. Numbers can be written using figures or\n              words.\n            </Text>\n            <Text style={styles.contentText}>\n              - The questions are in the same order as the information in the\n              passage: that is, the answer to the first question in this group\n              will be found before the answer to the second question, and so on.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 9. Summary, note, table, flow-chart completion /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI29(!collapseI29)}\n          >\n            <Text style={styles.contentHeadingText}>\n              9. Summary, note, table, flow-chart completion\n            </Text>\n            {collapseI29 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI29}>\n            <Text style={styles.contentText}>\n              - Test takers are given a summary of a section of the text, and\n              are required to complete it with information drawn from the text.\n              The summary will usually be of only one part of the passage rather\n              than the whole.\n            </Text>\n            <Text style={styles.contentText}>\n              - The given information may be in the form of: several connected\n              sentences of text (referred to as a summary), several notes\n              (referred to as notes), a table with some of its cells empty or\n              partially empty (referred to as a table), a series of boxes or\n              steps linked by arrows to show a sequence of events, with some of\n              the boxes or steps empty or partially empty (referred to as a\n              flow-chart).\n            </Text>\n            <Text style={styles.contentText}>\n              - The answers will not necessarily occur in the same order as in\n              the text. However, they will usually come from one section rather\n              than the entire text.\n            </Text>\n            <Text style={styles.contentText}>\n              - There are two variations of this task type. Test takers may be\n              asked either to select words from the text or to select from a\n              list of answers.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 10. Diagram label completion /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI210(!collapseI210)}\n          >\n            <Text style={styles.contentHeadingText}>\n              10. Diagram label completion\n            </Text>\n            {collapseI210 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI210}>\n            <Text style={styles.contentText}>\n              - Test takers are required to complete labels on a diagram, which\n              relates to a description contained in the text.\n            </Text>\n            <Text style={styles.contentText}>\n              - If test takers write more than the number of words asked for,\n              they will lose the mark. Numbers can be written using figures or\n              words.\n            </Text>\n            <Text style={styles.contentText}>\n              - The answers do not necessarily occur in order in the passage.\n              However, they will usually come from one section rather than the\n              entire text.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 11. Short-answer questions /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI211(!collapseI211)}\n          >\n            <Text style={styles.contentHeadingText}>\n              11. Short-answer questions\n            </Text>\n            {collapseI211 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI211}>\n            <Text style={styles.contentText}>\n              - Test takers answer questions, which usually relate to factual\n              information about details in the text. This is most likely to be\n              used with a text that contains a lot of factual information and\n              detail.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers must write their answers in words or numbers on the\n              answer sheet. Test takers must write their answers using words\n              from the text.\n            </Text>\n            <Text style={styles.contentText}>\n              - If test takers write more than the number of words asked for,\n              they will lose the mark.\n            </Text>\n            <Text style={styles.contentText}>\n              - Numbers can be written using figures or words. Contracted words\n              are not tested. Hyphenated words count as single words. The\n              questions are in the same order as the information in the text.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n        </View>\n      </View>\n\n      {/* //////////////// Writing //////////////// */}\n      <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n        <BannerAd unitId={adUnitId} size={BannerAdSize.LARGE_BANNER} />\n      </View>\n      <View style={styles.content}>\n        <Text style={styles.contentHeadingMain}>Writing (60 minutes)</Text>\n\n        <Divider bold={true} />\n\n        <Text style={styles.contentText}>\n          <Text style={styles.boldText}>IELTS Academic test: </Text>\n          Topics are of general interest to, and suitable for, test takers\n          entering undergraduate and postgraduate studies or seeking\n          professional registration.\n        </Text>\n        <Text style={styles.contentText}>\n          <Text style={styles.boldText}>IELTS General Training test: </Text>\n          Topics are of general interest.\n        </Text>\n        <Text style={styles.contentText}>There are two tasks: </Text>\n\n        <View style={{ marginHorizontal: 10 }}>\n          <View style={styles.contentHeading}>\n            <View></View>\n            {collapseI31 && collapseI32 && collapseI33 && collapseI34 ? (\n              <TouchableOpacity\n                onPress={() => [\n                  setcollapseI31(false),\n                  setcollapseI32(false),\n                  setcollapseI33(false),\n                  setcollapseI34(false),\n                ]}\n              >\n                <Text\n                  style={[\n                    styles.contentHeadingText,\n                    { textDecorationLine: \"underline\" },\n                  ]}\n                >\n                  Expand All\n                </Text>\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                onPress={() => [\n                  setcollapseI31(true),\n                  setcollapseI32(true),\n                  setcollapseI33(true),\n                  setcollapseI34(true),\n                ]}\n              >\n                <Text\n                  style={[\n                    styles.contentHeadingText,\n                    { textDecorationLine: \"underline\" },\n                  ]}\n                >\n                  Collapse All\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n\n          {/* //////////////// 1. Task 1 (Academic) /////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI31(!collapseI31)}\n          >\n            <Text style={styles.contentHeadingText}>1. Task 1 (Academic)</Text>\n            {collapseI31 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI31}>\n            <Text style={styles.contentText}>\n              - Test takers may be asked to describe facts or figures presented\n              in one or more graphs, charts or tables on a related topic; or\n              they may be given a diagram of a machine, a device or a process\n              and asked to explain how it works.\n            </Text>\n            <Text style={styles.contentText}>\n              - You should write in an academic or semi-formal/neutral styles\n              and include the most important and the most relevant points in the\n              diagram.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers should spend no more than 20 minutes on this task.\n              They are asked to write at least 150 words and will be penalised\n              if their answer is too short.\n            </Text>\n            <Text style={styles.contentText}>\n              - While test takers will not be penalised for writing more than\n              150 words, they should remember that a longer Task 1 answer may\n              mean that they have less time to spend on Task 2, which\n              contributes twice as much to the Writing band score.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers should also note that they will be penalised for\n              irrelevance if the response is off-topic or is not written as\n              full, connected text (e.g. using bullet points in any part of the\n              response, or note form, etc.). They will be severely penalised for\n              plagiarism (i.e. copying from another source).\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n          {/* ///////////////// 2. Task 1 (General training) /////////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI32(!collapseI32)}\n          >\n            <Text style={styles.contentHeadingText}>\n              2. Task 2 (General training)\n            </Text>\n            {collapseI32 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI32}>\n            <Text style={styles.contentText}>\n              - Test takers are presented with a situation and required to write\n              a personal response in the form of an informal, semi-formal or\n              formal letter of at least 150 words in the answer booklet\n              provided.\n            </Text>\n            <Text style={styles.contentText}>\n              - The style of writing that test takers use depends who they are\n              asked to write to (i.e. the audience) and how well they are\n              supposed to know them. They need to write in a style that is\n              appropriate for their audience and that will help them to achieve\n              their purpose for writing, e.g. writing to a friend (informal) or\n              writing to a manager (semi-formal or formal).\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers should spend no more than 20 minutes on this task.\n              They are asked to write at least 150 words and will be penalised\n              if their answer is too short. While test takers will not be\n              penalised for writing more than 150 words, they should remember\n              that a longer Task 1 answer may mean that they have less time to\n              spend on Task 2, which contributes twice as much to the Writing\n              band score.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers should also note that they will be penalised for\n              irrelevance, if the response is off-topic or is not written as\n              full, connected text (e.g. using bullet points in any part of the\n              response, or note form, etc.). They will be severely penalised for\n              plagiarism (i.e. copying from another source).\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 3. Task 2 (Academic) /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI33(!collapseI33)}\n          >\n            <Text style={styles.contentHeadingText}>3. Task 3 (Academic)</Text>\n            {collapseI33 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI33}>\n            <Text style={styles.contentText}>\n              - Test takers are given a topic to write about an academic or\n              semi-formal/neutral style. Answers should be a discursive\n              consideration of the relevant issues.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers should spend no more than 40 minutes on this task.\n              They are asked to write at least 250 words and will be penalised\n              if their answer is too short. While test takers will not be\n              penalised for writing more than 250 words, if they write a very\n              long answer they may not have time for checking and correcting at\n              the end and some ideas may not be directly relevant to the\n              question.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers will be penalised for irrelevance if the response is\n              off-topic or is not written as full, connected text (e.g. using\n              bullet points in any part of the response, or note form, etc.).\n              They will be severely penalised for plagiarism (i.e. copying from\n              another source).\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// 4. Task 2 (General training) /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI34(!collapseI34)}\n          >\n            <Text style={styles.contentHeadingText}>\n              4. Task 4 (General training)\n            </Text>\n            {collapseI34 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI34}>\n            <Text style={styles.contentText}>\n              - Test takers write a semi-formal/neutral discursive essay of at\n              least 250 words in the answer book provided.\n            </Text>\n            <Text style={styles.contentText}>\n              - Topics are of general interest, such as: whether children's\n              leisure activities should be educational, why families are not so\n              close as they used to be and how they could be brought closer, how\n              environmental problems can be solved, who should pay for the care\n              of old people, whether smoking should be banned in public places.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers are asked to write at least 250 words and will be\n              penalised if their answer is too short. They should spend no more\n              than 40 minutes on this task.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers should also note that they will be penalised for\n              irrelevance if the response is off-topic or is not written as\n              full, connected text (e.g. using bullet points in any part of the\n              response, or note form, etc.). They will be severely penalised for\n              plagiarism (i.e. copying from another source).\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n        </View>\n      </View>\n\n      {/* //////////////// Speaking //////////////// */}\n      <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n        <BannerAd unitId={adUnitId} size={BannerAdSize.LARGE_BANNER} />\n      </View>\n      <View style={styles.content}>\n        <Text style={styles.contentHeadingMain}>Speaking (11-14 minutes)</Text>\n\n        <Divider bold={true} />\n\n        <Text style={styles.contentText}>\n          The Speaking test consists of an oral interview between the test\n          takers' and an examiner. All Speaking tests are recorded.\n        </Text>\n        <Text style={styles.contentText}>\n          There are 3 parts to the test and each part fulfils a specific\n          function in terms of interaction pattern, task input and test takers\n          output.\n        </Text>\n        <View style={{ marginHorizontal: 10 }}>\n          <View style={styles.contentHeading}>\n            <View></View>\n            {collapseI41 && collapseI42 && collapseI43 ? (\n              <TouchableOpacity\n                onPress={() => [\n                  setCollapseI41(false),\n                  setcollapseI42(false),\n                  setcollapseI43(false),\n                ]}\n              >\n                <Text\n                  style={[\n                    styles.contentHeadingText,\n                    { textDecorationLine: \"underline\" },\n                  ]}\n                >\n                  Expand All\n                </Text>\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                onPress={() => [\n                  setCollapseI41(true),\n                  setcollapseI42(true),\n                  setcollapseI43(true),\n                ]}\n              >\n                <Text\n                  style={[\n                    styles.contentHeadingText,\n                    { textDecorationLine: \"underline\" },\n                  ]}\n                >\n                  Collapse All\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n          {/* //////////////// Part1: Introduction and interview /////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setCollapseI41(!collapseI41)}\n          >\n            <Text style={styles.contentHeadingText}>\n              Part 1: Introduction and interview\n            </Text>\n            {collapseI41 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI41}>\n            <Text style={styles.contentText}>\n              - In this part, the examiner introduces him/herself and checks the\n              test takers' identity. They then ask the test takers general\n              questions on some familiar topics such as home, family, work,\n              studies and interests.\n            </Text>\n            <Text style={styles.contentText}>\n              - Part 1 lasts for 4-5 minutes.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n          {/* ///////////////// Part 2: Long turn /////////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI42(!collapseI42)}\n          >\n            <Text style={styles.contentHeadingText}>Part 2: Long turn</Text>\n            {collapseI42 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI42}>\n            <Text style={styles.contentText}>\n              - The examiner gives the test takers a task card which asks the\n              test takers to talk about a particular topic, includes points to\n              cover in their talk and instructs the test takers to explain one\n              aspect of the topic.\n            </Text>\n            <Text style={styles.contentText}>\n              - Test takers are given one minute to prepare their talk, and are\n              given a pencil and paper to make notes.\n            </Text>\n            <Text style={styles.contentText}>\n              - The examiner asks the test takers to talk for 1 to 2 minutes,\n              stops the test takers after 2 minutes, and asks one or two\n              questions on the same topic.\n            </Text>\n            <Text style={styles.contentText}>\n              - Part 2 lasts 3-4 minutes, including the preparation time.\n            </Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n\n          {/* /////////////// Part 3: Discussion /////////////// */}\n          <TouchableOpacity\n            style={styles.contentHeading}\n            onPress={() => setcollapseI43(!collapseI43)}\n          >\n            <Text style={styles.contentHeadingText}>Part 3: Discussion</Text>\n            {collapseI43 ? (\n              <AntDesign name=\"down\" size={18} color=\"#1267E9\" />\n            ) : (\n              <AntDesign name=\"up\" size={18} color=\"#1267E9\" />\n            )}\n          </TouchableOpacity>\n          <Divider bold={true} />\n          <Collapsible collapsed={collapseI43}>\n            <Text style={styles.contentText}>\n              - In Part 3, the examiner and the test takers discuss issues\n              related to the topic in Part 2 in a more general and abstract way\n              and, where appropriate, in greater depth.\n            </Text>\n            <Text style={styles.contentText}>- Part 3 lasts 4-5 minutes.</Text>\n            <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n              <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n            </View>\n          </Collapsible>\n        </View>\n      </View>\n      <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n        <BannerAd unitId={adUnitId} size={BannerAdSize.BANNER} />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default IELTS;\n\nconst styles = StyleSheet.create({\n  content: {\n    padding: 10,\n    marginHorizontal: 10,\n    backgroundColor: \"white\",\n    borderRadius: 8,\n  },\n  contentHeadingMain: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 20,\n    marginBottom: 5,\n  },\n  contentHeading: {\n    marginTop: 10,\n    marginBottom: 5,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  contentHeadingText: {\n    fontSize: 16,\n    color: \"#1267E9\",\n  },\n  contentText: { margin: 5, lineHeight: 20 },\n  moreButton: {\n    // backgroundColor: \"#1267E9\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: 42,\n    borderRadius: 10,\n    // marginVertical: 5,\n  },\n  videoContent: {\n    marginHorizontal: 15,\n    backgroundColor: \"white\",\n    marginVertical: 5,\n    borderRadius: 5,\n  },\n});\n"],"mappings":";;;;;;AAOA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,SACEC,QAAQ,EACRC,YAAY,EACZC,OAAO,QACF,gCAAgC;AAAC;AAAA;AAExC,IAAMC,QAAQ,GAAGC,OAAO,GACpBF,OAAO,CAACG,MAAM,GACd,wCAAwC;AAE5C,IAAMC,KAAK,GAAG,SAARA,KAAK,GAAS;EAClB,gBAAsCX,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CY,WAAW;IAAEC,cAAc;EAClC,iBAAsCb,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7Cc,WAAW;IAAEC,cAAc;EAClC,iBAAsCf,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CgB,WAAW;IAAEC,cAAc;EAClC,iBAAsCjB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CkB,WAAW;IAAEC,cAAc;EAClC,iBAAsCnB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CoB,WAAW;IAAEC,cAAc;EAClC,kBAAsCrB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CsB,WAAW;IAAEC,cAAc;EAElC,kBAAsCvB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CwB,WAAW;IAAEC,cAAc;EAClC,kBAAsCzB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7C0B,WAAW;IAAEC,cAAc;EAClC,kBAAsC3B,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7C4B,WAAW;IAAEC,cAAc;EAClC,kBAAsC7B,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7C8B,WAAW;IAAEC,cAAc;EAClC,kBAAsC/B,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CgC,WAAW;IAAEC,cAAc;EAClC,kBAAsCjC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CkC,WAAW;IAAEC,cAAc;EAClC,kBAAsCnC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CoC,WAAW;IAAEC,cAAc;EAClC,kBAAsCrC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CsC,WAAW;IAAEC,cAAc;EAClC,kBAAsCvC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CwC,WAAW;IAAEC,cAAc;EAClC,kBAAwCzC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/C0C,YAAY;IAAEC,eAAe;EACpC,kBAAwC3C,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/C4C,YAAY;IAAEC,eAAe;EAEpC,kBAAsC7C,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7C8C,WAAW;IAAEC,cAAc;EAClC,kBAAsC/C,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CgD,WAAW;IAAEC,cAAc;EAClC,kBAAsCjD,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CkD,WAAW;IAAEC,cAAc;EAClC,kBAAsCnD,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CoD,WAAW;IAAEC,cAAc;EAElC,kBAAsCrD,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CsD,WAAW;IAAEC,cAAc;EAClC,kBAAsCvD,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7CwD,WAAW;IAAEC,cAAc;EAClC,kBAAsCzD,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7C0D,WAAW;IAAEC,cAAc;EAElC,OACE,MAAC,UAAU;IAAA,WACT,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAA,UACpC,KAAC,QAAQ;QAAC,MAAM,EAAEpD,QAAS;QAAC,IAAI,EAAEF,YAAY,CAACuD;MAAa;IAAG,EAC1D,EAEP,MAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,OAAQ;MAAA,WAC1B,KAAC,IAAI;QAAC,KAAK,EAAED,MAAM,CAACE,kBAAmB;QAAA,UAAC;MAAsB,EAAO,EACrE,KAAC,OAAO;QAAC,IAAI,EAAE;MAAK,EAAG,EAEvB,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,WAAY;QAAA,UAAC;MAGjC,EAAO,EACP,MAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;QAAA,WAC9B,KAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,QAAS;UAAA,UAAC;QAAa,EAAO,wEAEpD;MAAA,EAAO,EACP,MAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACG,WAAY;QAAA,WAC9B,KAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,QAAS;UAAA,UAAC;QAAa,EAAO,wFAEpD;MAAA,EAAO,EACP,MAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACG,WAAY;QAAA,WAC9B,KAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,QAAS;UAAA,UAAC;QAAa,EAAO,uJAGpD;MAAA,EAAO,EACP,MAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACG,WAAY;QAAA,WAC9B,KAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,QAAS;UAAA,UAAC;QAAa,EAAO,kEAEpD;MAAA,EAAO,EACP,KAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACG,WAAY;QAAA,UAAC;MAIjC,EAAO,EACP,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;QAAA,UAAC;MAIjC,EAAO,EACP,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;QAAA,UAAC;MAEjC,EAAO,EAEP,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEE,gBAAgB,EAAE;QAAG,CAAE;QAAA,WACpC,MAAC,IAAI;UAAC,KAAK,EAAEL,MAAM,CAACM,cAAe;UAAA,WACjC,KAAC,IAAI,KAAQ,EACZxD,WAAW,IACZE,WAAW,IACXE,WAAW,IACXE,WAAW,IACXE,WAAW,IACXE,WAAW,GACT,KAAC,gBAAgB;YACf,OAAO,EAAE;cAAA,OAAM,CACbT,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,CACtB;YAAA,CAAC;YAAA,UAEF,KAAC,IAAI;cACH,KAAK,EAAE,CACLuC,MAAM,CAACO,kBAAkB,EACzB;gBAAEC,kBAAkB,EAAE;cAAY,CAAC,CACnC;cAAA,UACH;YAED;UAAO,EACU,GAEnB,KAAC,gBAAgB;YACf,OAAO,EAAE;cAAA,OAAM,CACbzD,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,CACrB;YAAA,CAAC;YAAA,UAEF,KAAC,IAAI;cACH,KAAK,EAAE,CACLuC,MAAM,CAACO,kBAAkB,EACzB;gBAAEC,kBAAkB,EAAE;cAAY,CAAC,CACnC;cAAA,UACH;YAED;UAAO,EAEV;QAAA,EACI,EAEP,MAAC,gBAAgB;UACf,KAAK,EAAER,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMvD,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEkD,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAAkB,EAAO,EAChEzD,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEkD,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMrD,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEgD,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAAW,EAAO,EACzDvD,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEgD,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAEjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMnD,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAE8C,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNrD,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAE8C,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMjD,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAE4C,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNnD,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAE4C,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAEjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAM/C,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAE0C,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNjD,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAE0C,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAM7C,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEwC,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACN/C,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEwC,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK;MAAA,EACT;IAAA,EACF,EAIP,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEkD,UAAU,EAAE,QAAQ;QAAEW,cAAc,EAAE;MAAG,CAAE;MAAA,UACxD,KAAC,QAAQ;QAAC,MAAM,EAAE/D,QAAS;QAAC,IAAI,EAAEF,YAAY,CAACuD;MAAa;IAAG,EAC1D,EACP,MAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,OAAQ;MAAA,WAC1B,KAAC,IAAI;QAAC,KAAK,EAAED,MAAM,CAACE,kBAAmB;QAAA,UAAC;MAAoB,EAAO,EAEnE,KAAC,OAAO;QAAC,IAAI,EAAE;MAAK,EAAG,EAEvB,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,WAAY;QAAA,UAAC;MAKjC,EAAO,EACP,MAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;QAAA,WAC9B,KAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,QAAS;UAAA,UAAC;QAAqB,EAAO,wUAM5D;MAAA,EAAO,EACP,MAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACG,WAAY;QAAA,WAC9B,KAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,QAAS;UAAA,UAAC;QAA6B,EAAO,6NAKpE;MAAA,EAAO,EACP,KAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACG,WAAY;QAAA,UAAC;MAEjC,EAAO,EAEP,MAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACM,cAAe;QAAA,WACjC,KAAC,IAAI,KAAQ,EACZ5C,WAAW,IACZE,WAAW,IACXE,WAAW,IACXE,WAAW,IACXE,WAAW,IACXE,WAAW,IACXE,WAAW,IACXE,WAAW,IACXE,WAAW,IACXE,YAAY,IACZE,YAAY,GACV,KAAC,gBAAgB;UACf,OAAO,EAAE;YAAA,OAAM,CACbnB,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,eAAe,CAAC,KAAK,CAAC,EACtBE,eAAe,CAAC,KAAK,CAAC,CACvB;UAAA,CAAC;UAAA,UAEF,KAAC,IAAI;YACH,KAAK,EAAE,CACLiB,MAAM,CAACO,kBAAkB,EACzB;cAAEC,kBAAkB,EAAE;YAAY,CAAC,CACnC;YAAA,UACH;UAED;QAAO,EACU,GAEnB,KAAC,gBAAgB;UACf,OAAO,EAAE;YAAA,OAAM,CACb7C,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,eAAe,CAAC,IAAI,CAAC,EACrBE,eAAe,CAAC,IAAI,CAAC,CACtB;UAAA,CAAC;UAAA,UAEF,KAAC,IAAI;YACH,KAAK,EAAE,CACLiB,MAAM,CAACO,kBAAkB,EACzB;cAAEC,kBAAkB,EAAE;YAAY,CAAC,CACnC;YAAA,UACH;UAED;QAAO,EAEV;MAAA,EACI,EAEP,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEH,gBAAgB,EAAE;QAAG,CAAE;QAAA,WAEpC,MAAC,gBAAgB;UACf,KAAK,EAAEL,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAM3C,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEsC,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAAkB,EAAO,EAChE7C,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEsC,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMzC,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEoC,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACN3C,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEoC,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAMjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMvC,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEkC,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNzC,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEkC,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMrC,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEgC,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNvC,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEgC,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAMjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMnC,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAE8B,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAAoB,EAAO,EAClErC,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAE8B,MAAM,CAACG,WAAY;YAAA,UAAC;UAOjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAMjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMjC,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAE4B,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAAoB,EAAO,EAClEnC,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAE4B,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAOjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAM/B,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAE0B,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNjC,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAE0B,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAM7B,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEwB,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACN/B,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEwB,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAM3B,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEsB,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACN7B,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEsB,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAQjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMzB,eAAe,CAAC,CAACD,YAAY,CAAC;UAAA,CAAC;UAAA,WAE9C,KAAC,IAAI;YAAC,KAAK,EAAEoB,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACN3B,YAAY,GACX,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,YAAa;UAAA,WACnC,KAAC,IAAI;YAAC,KAAK,EAAEoB,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMvB,eAAe,CAAC,CAACD,YAAY,CAAC;UAAA,CAAC;UAAA,WAE9C,KAAC,IAAI;YAAC,KAAK,EAAEkB,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNzB,YAAY,GACX,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,YAAa;UAAA,WACnC,KAAC,IAAI;YAAC,KAAK,EAAEkB,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK;MAAA,EACT;IAAA,EACF,EAGP,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEkD,UAAU,EAAE,QAAQ;QAAEW,cAAc,EAAE;MAAG,CAAE;MAAA,UACxD,KAAC,QAAQ;QAAC,MAAM,EAAE/D,QAAS;QAAC,IAAI,EAAEF,YAAY,CAACuD;MAAa;IAAG,EAC1D,EACP,MAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,OAAQ;MAAA,WAC1B,KAAC,IAAI;QAAC,KAAK,EAAED,MAAM,CAACE,kBAAmB;QAAA,UAAC;MAAoB,EAAO,EAEnE,KAAC,OAAO;QAAC,IAAI,EAAE;MAAK,EAAG,EAEvB,MAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,WAAY;QAAA,WAC9B,KAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,QAAS;UAAA,UAAC;QAAqB,EAAO,0JAI5D;MAAA,EAAO,EACP,MAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACG,WAAY;QAAA,WAC9B,KAAC,IAAI;UAAC,KAAK,EAAEH,MAAM,CAACI,QAAS;UAAA,UAAC;QAA6B,EAAO,mCAEpE;MAAA,EAAO,EACP,KAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACG,WAAY;QAAA,UAAC;MAAqB,EAAO,EAE7D,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEE,gBAAgB,EAAE;QAAG,CAAE;QAAA,WACpC,MAAC,IAAI;UAAC,KAAK,EAAEL,MAAM,CAACM,cAAe;UAAA,WACjC,KAAC,IAAI,KAAQ,EACZtB,WAAW,IAAIE,WAAW,IAAIE,WAAW,IAAIE,WAAW,GACvD,KAAC,gBAAgB;YACf,OAAO,EAAE;cAAA,OAAM,CACbL,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,CACtB;YAAA,CAAC;YAAA,UAEF,KAAC,IAAI;cACH,KAAK,EAAE,CACLS,MAAM,CAACO,kBAAkB,EACzB;gBAAEC,kBAAkB,EAAE;cAAY,CAAC,CACnC;cAAA,UACH;YAED;UAAO,EACU,GAEnB,KAAC,gBAAgB;YACf,OAAO,EAAE;cAAA,OAAM,CACbvB,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,CACrB;YAAA,CAAC;YAAA,UAEF,KAAC,IAAI;cACH,KAAK,EAAE,CACLS,MAAM,CAACO,kBAAkB,EACzB;gBAAEC,kBAAkB,EAAE;cAAY,CAAC,CACnC;cAAA,UACH;YAED;UAAO,EAEV;QAAA,EACI,EAGP,MAAC,gBAAgB;UACf,KAAK,EAAER,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMrB,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEgB,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAAoB,EAAO,EAClEvB,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEgB,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAMjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAEd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMnB,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEc,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNrB,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEc,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAOjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAQjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAMjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMjB,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEY,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAAoB,EAAO,EAClEnB,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEY,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAQjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAMjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMf,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEU,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNjB,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEU,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAMjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAMjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK;MAAA,EACT;IAAA,EACF,EAGP,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEkD,UAAU,EAAE,QAAQ;QAAEW,cAAc,EAAE;MAAG,CAAE;MAAA,UACxD,KAAC,QAAQ;QAAC,MAAM,EAAE/D,QAAS;QAAC,IAAI,EAAEF,YAAY,CAACuD;MAAa;IAAG,EAC1D,EACP,MAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,OAAQ;MAAA,WAC1B,KAAC,IAAI;QAAC,KAAK,EAAED,MAAM,CAACE,kBAAmB;QAAA,UAAC;MAAwB,EAAO,EAEvE,KAAC,OAAO;QAAC,IAAI,EAAE;MAAK,EAAG,EAEvB,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,WAAY;QAAA,UAAC;MAGjC,EAAO,EACP,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;QAAA,UAAC;MAIjC,EAAO,EACP,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEE,gBAAgB,EAAE;QAAG,CAAE;QAAA,WACpC,MAAC,IAAI;UAAC,KAAK,EAAEL,MAAM,CAACM,cAAe;UAAA,WACjC,KAAC,IAAI,KAAQ,EACZd,WAAW,IAAIE,WAAW,IAAIE,WAAW,GACxC,KAAC,gBAAgB;YACf,OAAO,EAAE;cAAA,OAAM,CACbH,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,EACrBE,cAAc,CAAC,KAAK,CAAC,CACtB;YAAA,CAAC;YAAA,UAEF,KAAC,IAAI;cACH,KAAK,EAAE,CACLG,MAAM,CAACO,kBAAkB,EACzB;gBAAEC,kBAAkB,EAAE;cAAY,CAAC,CACnC;cAAA,UACH;YAED;UAAO,EACU,GAEnB,KAAC,gBAAgB;YACf,OAAO,EAAE;cAAA,OAAM,CACbf,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,EACpBE,cAAc,CAAC,IAAI,CAAC,CACrB;YAAA,CAAC;YAAA,UAEF,KAAC,IAAI;cACH,KAAK,EAAE,CACLG,MAAM,CAACO,kBAAkB,EACzB;gBAAEC,kBAAkB,EAAE;cAAY,CAAC,CACnC;cAAA,UACH;YAED;UAAO,EAEV;QAAA,EACI,EAEP,MAAC,gBAAgB;UACf,KAAK,EAAER,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMb,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEQ,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAExC,EAAO,EACNf,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEQ,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAEjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAEd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMX,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEM,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAAiB,EAAO,EAC/Db,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEM,MAAM,CAACG,WAAY;YAAA,UAAC;UAKjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAGjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAEjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK,EAGd,MAAC,gBAAgB;UACf,KAAK,EAAEoD,MAAM,CAACM,cAAe;UAC7B,OAAO,EAAE;YAAA,OAAMT,cAAc,CAAC,CAACD,WAAW,CAAC;UAAA,CAAC;UAAA,WAE5C,KAAC,IAAI;YAAC,KAAK,EAAEI,MAAM,CAACO,kBAAmB;YAAA,UAAC;UAAkB,EAAO,EAChEX,WAAW,GACV,KAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAAG,GAEnD,KAAC,SAAS;YAAC,IAAI,EAAC,IAAI;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAS,EAC/C;QAAA,EACgB,EACnB,KAAC,OAAO;UAAC,IAAI,EAAE;QAAK,EAAG,EACvB,MAAC,WAAW;UAAC,SAAS,EAAEA,WAAY;UAAA,WAClC,KAAC,IAAI;YAAC,KAAK,EAAEI,MAAM,CAACG,WAAY;YAAA,UAAC;UAIjC,EAAO,EACP,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;YAAA,UAAC;UAA2B,EAAO,EACnE,KAAC,IAAI;YAAC,KAAK,EAAE;cAAEL,UAAU,EAAE,QAAQ;cAAEW,cAAc,EAAE;YAAG,CAAE;YAAA,UACxD,KAAC,QAAQ;cAAC,MAAM,EAAE/D,QAAS;cAAC,IAAI,EAAEF,YAAY,CAACI;YAAO;UAAG,EACpD;QAAA,EACK;MAAA,EACT;IAAA,EACF,EACP,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEkD,UAAU,EAAE,QAAQ;QAAEW,cAAc,EAAE;MAAG,CAAE;MAAA,UACxD,KAAC,QAAQ;QAAC,MAAM,EAAE/D,QAAS;QAAC,IAAI,EAAEF,YAAY,CAACI;MAAO;IAAG,EACpD;EAAA,EACI;AAEjB,CAAC;AAED,eAAeC,KAAK;AAEpB,IAAMmD,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,OAAO,EAAE;IACPW,OAAO,EAAE,EAAE;IACXP,gBAAgB,EAAE,EAAE;IACpBQ,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE;EAChB,CAAC;EACDZ,kBAAkB,EAAE;IAClBa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE;EAChB,CAAC;EACDZ,cAAc,EAAE;IACdW,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDb,kBAAkB,EAAE;IAClBQ,QAAQ,EAAE,EAAE;IACZM,KAAK,EAAE;EACT,CAAC;EACDlB,WAAW,EAAE;IAAEmB,MAAM,EAAE,CAAC;IAAEC,UAAU,EAAE;EAAG,CAAC;EAC1CC,UAAU,EAAE;IAEV1B,UAAU,EAAE,QAAQ;IACpBsB,cAAc,EAAE,QAAQ;IACxBK,SAAS,EAAE,EAAE;IACbX,YAAY,EAAE;EAEhB,CAAC;EACDY,YAAY,EAAE;IACZrB,gBAAgB,EAAE,EAAE;IACpBQ,eAAe,EAAE,OAAO;IACxBJ,cAAc,EAAE,CAAC;IACjBK,YAAY,EAAE;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
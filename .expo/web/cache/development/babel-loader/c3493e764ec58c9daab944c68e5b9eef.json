{"ast":null,"code":"export var MailComposerStatus;\n(function (MailComposerStatus) {\n  MailComposerStatus[\"UNDETERMINED\"] = \"undetermined\";\n  MailComposerStatus[\"SENT\"] = \"sent\";\n  MailComposerStatus[\"SAVED\"] = \"saved\";\n  MailComposerStatus[\"CANCELLED\"] = \"cancelled\";\n})(MailComposerStatus || (MailComposerStatus = {}));","map":{"version":3,"sources":["../src/MailComposer.types.ts"],"names":[],"mappings":"AA0CA,OAAA,IAAY,kBAKX;AALD,CAAA,UAAY,kBAAkB,EAAA;EAC5B,kBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B;EAC7B,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa;EACb,kBAAA,CAAA,OAAA,CAAA,GAAA,OAAe;EACf,kBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB;AACzB,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,GAAA,CAAA,CAAA,CAAA,CAAA","sourcesContent":["// @needsAudit\n/**\n * A map defining the data to fill the mail.\n */\nexport type MailComposerOptions = {\n  /**\n   * An array of e-mail addresses of the recipients.\n   */\n  recipients?: string[];\n  /**\n   * An array of e-mail addresses of the CC recipients.\n   */\n  ccRecipients?: string[];\n  /**\n   * An array of e-mail addresses of the BCC recipients.\n   */\n  bccRecipients?: string[];\n  /**\n   * Subject of the e-mail.\n   */\n  subject?: string;\n  /**\n   * Body of the e-mail.\n   */\n  body?: string;\n  /**\n   * Whether the body contains HTML tags so it could be formatted properly.\n   * Not working perfectly on Android.\n   */\n  isHtml?: boolean;\n  /**\n   * An array of app's internal file URIs to attach.\n   */\n  attachments?: string[];\n};\n\n// @docsMissing\nexport type MailComposerResult = {\n  status: MailComposerStatus;\n};\n\n// @docsMissing\nexport enum MailComposerStatus {\n  UNDETERMINED = 'undetermined',\n  SENT = 'sent',\n  SAVED = 'saved',\n  CANCELLED = 'cancelled',\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export var AdEventType;\n(function (AdEventType) {\n  AdEventType[\"LOADED\"] = \"loaded\";\n  AdEventType[\"ERROR\"] = \"error\";\n  AdEventType[\"OPENED\"] = \"opened\";\n  AdEventType[\"CLICKED\"] = \"clicked\";\n  AdEventType[\"CLOSED\"] = \"closed\";\n})(AdEventType || (AdEventType = {}));","map":{"version":3,"mappings":"AAiBA,WAAYA,WAAW;AA8CtB,WA9CWA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;AAAA,GAAXA,WAAW,KAAXA,WAAW","names":["AdEventType"],"sources":["/Users/startek/LocalRepo/DestinationAustralia/node_modules/react-native-google-mobile-ads/src/AdEventType.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport enum AdEventType {\n  /**\n   * When an ad has loaded. At this point, the ad is ready to be shown to the user.\n   *\n   * #### Example\n   *\n   * ```js\n   * import { AdEventType } from 'react-native-google-mobile-ads';\n   *\n   * advert.addEventListener(AdEventType.LOADED, () => {\n   *   advert.show();\n   * });\n   * ```\n   */\n  LOADED = 'loaded',\n\n  /**\n   * The ad has thrown an error. See the error parameter the listener callback for more information.\n   *\n   * #### Example\n   *\n   * ```js\n   * import { AdEventType } from 'react-native-google-mobile-ads';\n   *\n   * advert.addEventListener(AdEventType.ERROR, (error) => {\n   *   console.log('Ad error:', error);\n   * });\n   * ```\n   */\n  ERROR = 'error',\n\n  /**\n   * The ad opened and is currently visible to the user. This event is fired after the `show()`\n   * method has been called.\n   */\n  OPENED = 'opened',\n\n  /**\n   * The user clicked the advert.\n   */\n  CLICKED = 'clicked',\n\n  /**\n   * The user closed the ad and has returned back to your application.\n   */\n  CLOSED = 'closed',\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}